{"version":3,"sources":["pages/requirement/AddRequirement.js","pages/requirement/EditRequirementmodal.js","pages/requirement/ViewRequirement.js","pages/requirement/CriticalRequirement.js","pages/requirement/Requirement.js"],"names":["AddRequirement","props","useState","jclientPost","setJclient","jobcodePost","setJobcode","jskillPost","setJskill","jpositionPost","setJposition","jlocationPost","setJlocation","jendclientPost","setJendClient","jtotminPost","setJtoMin","jtotmaxPost","setJtoMax","jrelminPost","setJelMin","jrelmaxPost","setJelMax","jbillratePost","setBillRate","jpayratePost","setPayRate","jpocnoPost","setJpocNo","jmandatoryskillPost","setJmandatoryskill","jjdPost","setJobDesc","jcreatedbyPost","setJcreatedby","jcategoryPost","setJcategory","jtypePost","setJtype","jemptypePost","setJemployementtyp","selectedValue","setSelectedValue","clientList","useSelector","state","Client","clients","recruterList","Recruiter","recruiters","dispatch","useDispatch","useEffect","getClientList","getRecruiterList","cleanForm","alert","React","label","value","selectCatagory","selectReqType","selectEmpType","Fragment","onSubmit","e","preventDefault","reqBody","jclientid","jobcode","jskill","jposition","jlocation","jendclient","jtotmin","jtotmax","jrelmin","jrelmax","jbillrate","jpayrate","jpocno","jmandatoryskill","jjd","jcategory","jtype","jemployementtyp","jassignuser","jcreatedby","axios","post","then","response","console","log","Row","Col","lg","type","onChange","target","name","FormGroup","Label","for","className","required","i","disabled","selected","map","client","key","cid","cname","catagory","reqtype","emptype","rows","options","onSelect","selectedList","selectedItem","x","EFullname","onRemove","removedItem","displayValue","showCheckbox","style","marginTop","lineHeight","JSON","stringify","EditRequirementmodal","row","modal","Requirements","requirmentStore","requirement","setRequirement","toggle","actions","Modal","isOpen","size","ModalHeader","ModalBody","Form","Input","id","ModalFooter","Button","color","onClick","defaultSorted","dataField","order","ExportCSVButton","CSVExport","sizePerPageRenderer","currSizePerPage","onSizePerPageChange","defaultValue","option","idx","text","TableWithSearch","SearchBar","Search","NoDataIndication","bootstrap4","keyField","data","records","columns","search","md","searchProps","UncontrolledDropdown","DropdownToggle","data-toggle","tag","DropdownMenu","right","csvProps","baseProps","bordered","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ViewRequirement","requirements","getRequirementList","headerStyle","colum","colIndex","width","formatter","cell","title","_validateFunction","cellContent","setSaveRequirement","getRequirementModal","rowEvent","onDoubleClick","index","rowEvents","CriticalRequirement","criticalreq","getCriticalRequirementList","Requirement","activeTab","setActiveTab","tab","PageTitle","breadCrumbItems","path","active","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId"],"mappings":"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","file":"static/js/23.d948cbce.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n//import { getRequirementList, setRequirement } from '../../redux/requirement/actions';\r\nimport { getClientList } from '../../redux/client/actions';\r\nimport { getRecruiterList } from '../../redux/recruiter/actions';\r\nimport { Row, Col, FormGroup,  Label } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport { Multiselect } from \"multiselect-react-dropdown\";\r\nconst AddRequirement = (props) => {\r\n    //const [jidPost, setJid] = useState('1000034');\r\n    const [jclientPost, setJclient] = useState([]);\r\n    const [jobcodePost, setJobcode] = useState('');\r\n    const [jskillPost, setJskill] = useState('');\r\n    const [jpositionPost, setJposition] = useState('');\r\n    const [jlocationPost, setJlocation] = useState([]);\r\n    const [jendclientPost, setJendClient] = useState('');\r\n    const [jtotminPost, setJtoMin] = useState('');\r\n    const [jtotmaxPost, setJtoMax] = useState('');\r\n    const [jrelminPost, setJelMin] = useState('');\r\n    const [jrelmaxPost, setJelMax] = useState('');\r\n    const [jbillratePost, setBillRate] = useState('');\r\n    const [jpayratePost, setPayRate] = useState('');\r\n    const [jpocnoPost, setJpocNo] = useState('');\r\n    const [jmandatoryskillPost, setJmandatoryskill] = useState('');\r\n    const [jjdPost, setJobDesc] = useState('');\r\n    const [jcreatedbyPost, setJcreatedby] = useState('');\r\n    \r\n    const [jcategoryPost, setJcategory] = useState([]);\r\n    const [jtypePost, setJtype] = useState([]);\r\n    const [jemptypePost, setJemployementtyp] = useState([]);\r\n    //const [jassignuserPost, setJassignuser] = useState([]);\r\n    const [selectedValue, setSelectedValue] = useState([]);\r\n\r\n    const onSelect=(selectedList, selectedItem)=> {\r\n        setSelectedValue(selectedList.map(x=>x.EFullname));\r\n    }\r\n    \r\n    const onRemove=(selectedList, removedItem)=> {\r\n        setSelectedValue(selectedList.map(x=>x.EFullname));\r\n    }\r\n\r\n    // const handleMultiChange = (e) => {\r\n    //     console.log(\"console EE\", e);\r\n    //     setSelectedValue(Array.isArray(e) ? e.map(x => x.value) : []);\r\n    //     console.log(\"selected value\", selectedValue);\r\n    //   }\r\n    const handleRequirementForm = (e) => {\r\n        e.preventDefault();\r\n        let reqBody = {\r\n            //jid: jidPost,\r\n            jclientid: jclientPost,\r\n            jobcode: jobcodePost,\r\n            jskill: jskillPost,\r\n            jposition: jpositionPost,\r\n            jlocation: jlocationPost,\r\n            jendclient: jendclientPost,\r\n            jtotmin: jtotminPost,\r\n            jtotmax: jtotmaxPost,\r\n            jrelmin: jrelminPost,\r\n            jrelmax: jrelmaxPost,\r\n            jbillrate: jbillratePost,\r\n            jpayrate: jpayratePost,\r\n            jpocno: jpocnoPost,\r\n            jmandatoryskill: jmandatoryskillPost,\r\n            jjd: jjdPost,\r\n            jcategory: jcategoryPost,\r\n            jtype: jtypePost,\r\n            jemployementtyp: jemptypePost,\r\n            jassignuser: selectedValue,\r\n            jcreatedby:jcreatedbyPost\r\n        };\r\n       // console.log(reqBody);\r\n        axios\r\n            .post('http://144.48.250.235:98/api/Requirement_Master', reqBody)\r\n\r\n            .then((response) => {\r\n               console.log(response);\r\n            });\r\n        cleanForm();\r\n    };\r\n\r\n    \r\n    \r\n    let clientList = useSelector((state) => state.Client.clients || []);\r\n    let recruterList = useSelector((state) => state.Recruiter.recruiters || []);\r\n    //console.log(\"recruter\", recruterList)\r\n    const dispatch = useDispatch();\r\n     useEffect(() => {\r\n        dispatch(getClientList());\r\n        dispatch(getRecruiterList());\r\n         // eslint-disable-next-line \r\n     }, []);\r\n    \r\n    \r\n    const cleanForm = () => {\r\n        alert();\r\n        //setJid('');\r\n        setJobcode('');\r\n        setJskill('');\r\n        setJposition('');\r\n        setJendClient('');\r\n        setJtoMin('');\r\n        setJtoMax('');\r\n        setJelMin('');\r\n        setJelMax('');\r\n        setBillRate('');\r\n        setPayRate('');\r\n        setJpocNo('');\r\n        setJmandatoryskill('');\r\n        setJobDesc('');\r\n    };\r\n    \r\n    const [selectCatagory] = React.useState([\r\n        {\r\n            label: 'IT',\r\n            value: 'IT',\r\n        },\r\n        { label: 'NON IT', value: 'NON IT' }\r\n    ]);\r\n    // const [selectLocation] = React.useState([\r\n    //     {\r\n    //         label: 'Mumbai',\r\n    //         value: 'Mumbai',\r\n    //     },\r\n    //     { label: 'Gujrat', value: 'Gujrat' },\r\n    //     { label: 'Pune', value: 'Pune' },\r\n    // ]);\r\n    const [selectReqType] = React.useState([\r\n        {\r\n            label: 'DRIVE',\r\n            value: 'DRIVE',\r\n        },\r\n        { label: 'PROCESS', value: 'PROCESS' },\r\n        { label: 'EXCLUSIVE', value: 'EXCLUSIVE' },\r\n    ]);\r\n    const [selectEmpType] = React.useState([\r\n        {\r\n            label: 'CONTRACTUAL',\r\n            value: 'CONTRACTUAL',\r\n        },\r\n        { label: 'PERMANENT', value: 'PERMANENT' },\r\n        { label: 'C2H', value: 'C2H' },\r\n    ]);\r\n    // const recruterList=[\r\n    //     {name: 'EFullname', id: 'Eid'}\r\n    // ]\r\n    return (\r\n        <React.Fragment>\r\n            <form onSubmit={handleRequirementForm}>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        {/* <input\r\n                            type=\"hidden\"\r\n                            value=\"testUi\"\r\n                            onChange={(e) => {\r\n                                setJid(e.target.value);\r\n                            }}\r\n                            name=\"jid\"\r\n                        /> */}\r\n                        <input\r\n                            type=\"hidden\"\r\n                            value=\"testUi\"\r\n                            onChange={(e) => {\r\n                                setJcreatedby (e.target.value);\r\n                            }}\r\n                            name=\"jcreatedby \"\r\n                        />\r\n                        <FormGroup>\r\n                            <Label for=\"empleadoApellidos\">\r\n                                Client <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jclientid\"\r\n                                required onChange={(e,i) => {\r\n                                    setJclient(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {clientList.map((client) => (\r\n                                    <option key={client.cid} value={client.cid}>\r\n                                        {client.cname}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Job Code<span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setJobcode(e.target.value);\r\n                                }}\r\n                                name=\"jobcode\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Main Skill<span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJskill(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jskill\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Number of Position <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJposition(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jposition\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Location <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJlocation(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jlocation\"\r\n                            />\r\n                            {/* <select\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                required\r\n                                name=\"jlocation\"\r\n                                onChange={(e) => {\r\n                                    setJlocation(e.target.value);\r\n                                }}>\r\n                                {selectLocation.map((sellocation) => (\r\n                                    <option key={sellocation.value} value={sellocation.value}>\r\n                                        {sellocation.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select> */}\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                End Client <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJendClient(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jendclient\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Total Minimum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJtoMin(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jtotmin\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Total Maximum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJtoMax(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jtotmax\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Relvent Minimum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJelMin(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jrelmin\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Relvent Maximum Experience <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJelMax(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jrelmax\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Bill Rate <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setBillRate(e.target.value);\r\n                                }}\r\n                                className=\"style-input form-control\"\r\n                                name=\"jbillrate\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Pay Rate <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setPayRate(e.target.value);\r\n                                }}\r\n                                name=\"jpayrate\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>Select Catagory</Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jcategory\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJcategory(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {selectCatagory.map((catagory) => (\r\n                                    <option key={catagory.value} value={catagory.value}>\r\n                                        {catagory.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Requirments Type <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jtype\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJtype(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {selectReqType.map((reqtype) => (\r\n                                    <option key={reqtype.value} value={reqtype.value}>\r\n                                        {reqtype.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Type Of Employement <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <select\r\n                                className=\"style-input form-control\"\r\n                                name=\"jemployementtyp\"\r\n                                required\r\n                                onChange={(e) => {\r\n                                    setJemployementtyp(e.target.value);\r\n                                }}>\r\n                                    <option disabled selected>Select</option>\r\n                                {selectEmpType.map((emptype) => (\r\n                                    <option key={emptype.value} value={emptype.value}>\r\n                                        {emptype.label}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                POC Name <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setJpocNo(e.target.value);\r\n                                }}\r\n                                name=\"jpocno\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <FormGroup>\r\n                            <Label>\r\n                                Mandatory Skills <span className=\"redspan\">*</span>\r\n                            </Label>\r\n                            <input\r\n                                type=\"text\"\r\n                                required\r\n                                className=\"style-input form-control\"\r\n                                onChange={(e) => {\r\n                                    setJmandatoryskill(e.target.value);\r\n                                }}\r\n                                name=\"jmandatoryskill\"\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={12}>\r\n                        <Label>Description</Label>\r\n                        <textarea\r\n                            className=\"form-control style-textarea\"\r\n                            rows=\"7\"\r\n                            onChange={(e) => {\r\n                                setJobDesc(e.target.value);\r\n                            }}\r\n                            name=\"jjd\"></textarea>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={6} className=\"mb-5\">\r\n                        <h5 className=\"text-uppercase mt-4\">Assign To :</h5>\r\n                        <Multiselect\r\n                            options={recruterList}\r\n                            // onChange={(e) => {\r\n                            //     setJassignuser(e.target.value); console.log(e.target.value)\r\n                            // }}\r\n                            //value={recruterList.filter(obj => selectedValue.includes(obj.value))} // set selected values\r\n        //options={data} // set list of the data\r\n        // onChange={(e)=> handleMultiChange(e)}\r\n        onSelect={onSelect}\r\n        onRemove={onRemove}\r\n                            name=\"jassignuser\"\r\n                            displayValue=\"EFullname\"\r\n                            showCheckbox={true}\r\n                            />\r\n                            {selectedValue && <div style={{ marginTop: 20, lineHeight: '25px' }}>\r\n        <div><b>Selected Value: </b> {JSON.stringify(selectedValue, null, 2)}</div>\r\n      </div>}\r\n                        {/* {recruterList.map((recruter, index) => (\r\n                            <div className=\"form-check mt-1\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        className=\"form-check-input\"\r\n                                        onChange={(e) => {\r\n                                           // setJassignuser(e.target.value);\r\n                                           handleCheeckboxChange()\r\n                                        }}\r\n                                        value={recruter.Eid}\r\n                                    />\r\n                                    {recruter.EFullname}\r\n                                </label>\r\n                            </div>\r\n                        ))} */}\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 mt-3 text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary mr-2\">\r\n                            Submit\r\n                        </button>\r\n                        <button className=\"btn btn-secondary\">Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddRequirement;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport * as actions from '../../redux/requirement/actions';\r\nconst EditRequirementmodal = (props, row) => {\r\n    const {\r\n        //buttonLabel,\r\n        className,\r\n    } = props;\r\n    const dispatch = useDispatch();\r\n\r\n    const modal = useSelector((state) => state.Requirements.modal);\r\n    const requirmentStore = useSelector((state) => state.Requirements.requirement);\r\n    const [requirement, setRequirement] = useState( {\r\n      jobcode: '',\r\n      jskill:'',\r\n  } );\r\n  \r\n\r\n  const { jobcode, jskill } = requirement;\r\n\r\n    useEffect( () => {\r\n      \r\n      setRequirement( {\r\n          ...requirement,\r\n          jobcode: requirmentStore ? requirmentStore.jobcode : '',\r\n          jskill:requirmentStore ? requirmentStore.jskill:'',\r\n      } );\r\n  \r\n      // eslint-disable-next-line\r\n    }, [requirmentStore] );\r\n\r\n    console.log(\"Edit Requirement id :\", requirmentStore);\r\n    const toggle = () => {\r\n        if (!modal) {\r\n            dispatch(actions.getRequirementModal());\r\n           \r\n        } else {\r\n            dispatch(actions.hideRequirementModal());\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Modal isOpen={modal} size={\"lg\"} toggle={toggle} className={` ${className} 'modal-lg' `}>\r\n                <ModalHeader toggle={toggle}>Update Requirment</ModalHeader>\r\n\r\n                <ModalBody>\r\n                <Form>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Client</Label>\r\n                                    <Select />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Job Code</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"jobcode\"\r\n                                        id=\"jobcode\"\r\n                                        value={ jobcode || '' }/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Main Skill</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        name=\"jskill\"\r\n                                        id=\"jskill\"\r\n                                        value={ jskill || '' } />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Number of Position</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Location</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">End Client</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Total Minimum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Total Maximum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Relvent Minimum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Relvent Maximum Experience</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Bill Rate</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Pay Rate</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Select Catagory</Label>\r\n                                    <Select/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Requirments Type</Label>\r\n                                   <Select/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Type Of Employement</Label>\r\n                                    <Select/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">POC Name</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Mandatory Skills</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        \r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color=\"primary\" onClick={toggle}>Add</Button>\r\n                    <Button color=\"secondary\" className=\"ml-1\" onClick={toggle}>Cancel</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditRequirementmodal;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getRequirementList, getRequirementModal, setSaveRequirement } from '../../redux/requirement/actions';\r\nimport EditRequirementmodal from './EditRequirementmodal';\r\n//import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n//import PageTitle from '../../components/PageTitle';\r\n//import AddUserModal from '../user/AddUserModal';\r\n//import EditRequirementmodal from './EditRequirementmodal';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onClick: (e, row, rowIndex) => {\r\n    //       console.log(`clicked on row with index: ${rowIndex} ${row.jobcode}`);\r\n    //     }\r\n    //   };\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    \r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                \r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n                            {/* <EditRequirementmodal modalToggle={toggle}/> */}\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewRequirement = (props) => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Requirements.requirements);\r\n   //console.log(records, 'requirement')\r\n    useEffect(() => {\r\n        dispatch(getRequirementList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'jobcode',\r\n            text: 'Job Code.',\r\n        },\r\n        {\r\n            dataField:'jclientname',\r\n            text:\"Client Name\"\r\n        },\r\n        {\r\n            dataField: 'jskill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'jposition',\r\n            text: 'Position',\r\n        },\r\n        {\r\n            dataField: 'jlocation',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'jendclient',\r\n            text: 'End Client',\r\n        },\r\n        {\r\n            dataField: 'jstatus',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: 'jcreatedon',\r\n            text: 'Created On',\r\n        },\r\n        {\r\n            dataField: 'jassignuser',\r\n            text: 'Assign To',\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '200px'};\r\n              }\r\n        },  \r\n        {\r\n            dataField: 'actions',\r\n            text: 'Action',\r\n            formatter:actionRequirement\r\n        },\r\n        {\r\n            dataField: 'edit',\r\n            text: 'Edit',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   <FeatherIcon.Edit />\r\n                  </button>\r\n                );\r\n              },\r\n            //formatter:editRequirement\r\n        }\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n       // console.log(\"activity id :\",(id));\r\n        // dispatch(getRequirementModal((row)));\r\n\r\n        dispatch( setSaveRequirement( row) );\r\n\r\n            dispatch( getRequirementModal() );\r\n    }\r\n    \r\n    function actionRequirement(cell, row) {     \r\n        return <label>\r\n               <button type=\"button\" \r\n                               id=\"actionButton\" title=\"Action\"\r\n                       onClick={() => {_validateFunction(row=[])}} \r\n                       className=\"btn btn-link text-secondary\">\r\n                            <FeatherIcon.Target />\r\n               </button>\r\n               \r\n               </label> \r\n                      \r\n   }   return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                <EditRequirementmodal/>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewRequirement;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getCriticalRequirementList } from '../../redux/requirement/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n//    const dispatch = useDispatch();\r\n\r\n    const rowEvent = {\r\n        onDoubleClick: ( e, row, index ) => {\r\n\r\n            //dispatch( setRequirement( row ) );\r\n\r\n           // dispatch( getCriticalRequirementModal() );\r\n            //console.log(props.result)\r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Dropdown <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst CriticalRequirement = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Requirements.criticalreq);\r\n   //console.log(\"critical \", records);\r\n    useEffect(() => {\r\n        dispatch(getCriticalRequirementList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'c.J_Code',\r\n            text: 'Job Code.',\r\n        },\r\n        {\r\n            dataField:'d.C_Name',\r\n            text:\"Client Name\"\r\n        },\r\n        {\r\n            dataField: 'c.J_Skill',\r\n            text: 'Skill',\r\n        },\r\n        {\r\n            dataField: 'c.J_Position',\r\n            text: 'Position',\r\n        },\r\n        {\r\n            dataField: 'c.J_Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'c.J_EndClient',\r\n            text: 'End Client',\r\n        },\r\n        {\r\n            dataField: 'c.J_Status',\r\n            text: 'Status',\r\n        },\r\n        {\r\n            dataField: 'c.J_CreatedOn',\r\n            text: 'Created On',\r\n        },\r\n        {\r\n            dataField: 'c.J_AssignUser',\r\n            text: 'Assign To',\r\n            headerStyle: (colum, colIndex) => {\r\n                return { width: '200px'};\r\n              }\r\n        },  \r\n        {\r\n            dataField: 'summaury',\r\n            text: 'Summary',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default CriticalRequirement;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddRequirement from './AddRequirement';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport ViewRequirement from './ViewRequirement';\r\nimport CriticalRequirement from './CriticalRequirement';\r\nconst Requirement = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Requirement', path: '/requirement', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Requirement\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Requirement\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Critical Requirement\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddRequirement/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewRequirement/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <CriticalRequirement/>\r\n        </TabPane >\r\n      </TabContent>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Requirement;"],"sourceRoot":""}