{"version":3,"sources":["pages/master/usermaster/AddUser.js","pages/master/usermaster/AssignRole.js","pages/master/usermaster/ViewUserRole.js","pages/master/usermaster/MasterNav.js","pages/master/clientmaster/AddClient.js","pages/master/clientmaster/ViewClient.js","pages/master/clientmaster/ClientNav.js","pages/master/teammaster/AddTeam.js","pages/master/teammaster/ViewTeam.js","pages/master/teammaster/TeamNav.js","pages/master/Masters.js"],"names":["AddUser","dispatch","useDispatch","useState","ECode","setECode","EEtype","setEEtype","EBankName","setEBankName","EFullname","setEFullname","ECompany_Name","setECompany_Name","EAccountNo","setEAccountNo","EGender","setEGender","EDepartment","setEDepartment","EBranch","setEBranch","EEmail","setEEmail","EDesignation","setEDesignation","EIFC_Code","setEIFC_Code","EDOB","setEDOB","ELocation","setELocation","EPFAccount","setEPFAccount","EAddress","setEAddress","ECAddress","setECAddress","EOfferDate","setEOfferDate","EPAN_No","setEPAN_No","EJoinDate","setEJoinDate","EAadhar_no","setEAadhar_no","ERole","setERole","ESalary","setESalary","EPostal","setEPostal","EUserName","setEUserName","EPF","setEPF","EContNo","setEContNo","EPassword","setEPassword","EPT","setEPT","EEmergencyContNo","setEEmergencyContNo","EBloodGroup","setEBloodGroup","EESI","setEESI","EPFApply","setEPFApply","EPTApply","setEPTApply","EESIApply","setEESIApply","Ephoto","setEphoto","React","label","value","selectEmpType","selectGender","roleList","useSelector","state","Role","role","useEffect","getRoleList","Fragment","Form","onSubmit","e","preventDefault","reqBody","setUser","Row","Col","lg","FormGroup","Label","for","className","Input","type","required","name","id","onChange","target","disabled","selected","map","emptype","key","gender","rows","roles","i","defaultChecked","onClick","AssignRole","uid","setUid","setRole","userList","Users","users","getUserList","axios","post","then","response","console","log","reset","user","EId","defaultSorted","dataField","order","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","defaultValue","option","idx","text","TableWithSearch","props","SearchBar","Search","rowData","setrowData","rowEvent","onDoubleClick","row","alert","NoDataIndication","bootstrap4","keyField","data","records","columns","search","md","searchProps","baseProps","bordered","rowEvents","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ViewUserRole","sort","formatter","cellContent","title","MastersTabs","activeTab","setActiveTab","toggle","tab","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","ViewUser","AddClient","ViewClient","Client","clients","getClientList","ClientTabs","AddTeam","recruterList","Recruiter","recruiters","getRecruiterList","desabled","recruter","index","Eid","ViewTeam","Teams","teams","getTeamList","TeamTabs","Masters","PageTitle","breadCrumbItems","path","Button","color","MasterNav"],"mappings":"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","file":"static/js/22.d098fa0c.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\nimport { getRoleList } from '../../../redux/role/actions';\r\nimport { setUser } from '../../../redux/user/actions';\r\n//import axios from 'axios';\r\n// import Select from 'react-select';\r\nconst AddUser = () => { \r\n    const dispatch = useDispatch();\r\n    const [ECode , setECode]=useState('');\r\n    const [EEtype, setEEtype]=useState([]);\r\n    const [EBankName, setEBankName]=useState('');\r\n    const [EFullname, setEFullname]=useState('');\r\n    const [ECompany_Name, setECompany_Name]=useState('');\r\n    const [EAccountNo, setEAccountNo]=useState('');\r\n    const [EGender, setEGender]=useState([]);\r\n    const [EDepartment, setEDepartment]=useState('');\r\n    const [EBranch, setEBranch]=useState('');\r\n    const [EEmail, setEEmail]=useState('');\r\n    const [EDesignation, setEDesignation]=useState('');\r\n    const [EIFC_Code, setEIFC_Code]=useState('');\r\n    const [EDOB, setEDOB]=useState('');\r\n    const [ELocation, setELocation]=useState('');\r\n    const [EPFAccount, setEPFAccount]=useState('');\r\n    const [EAddress, setEAddress]=useState('');\r\n    const [ECAddress, setECAddress]=useState('');\r\n    const [EOfferDate, setEOfferDate]=useState('');\r\n    const [EPAN_No, setEPAN_No]=useState('');\r\n    const [EJoinDate, setEJoinDate]=useState('');\r\n    const [EAadhar_no, setEAadhar_no]=useState('');\r\n    const [ERole, setERole]=useState([]);\r\n    const [ESalary, setESalary]=useState('');\r\n    const [EPostal, setEPostal]=useState('');\r\n    const [EUserName, setEUserName]=useState('');\r\n    const [EPF, setEPF]=useState('');\r\n    const [EContNo, setEContNo]=useState('');\r\n    const [EPassword, setEPassword]=useState('');\r\n    const [EPT, setEPT]=useState('');\r\n    const [EEmergencyContNo, setEEmergencyContNo]=useState('');\r\n    const [EBloodGroup, setEBloodGroup]=useState('');\r\n    const [EESI, setEESI]=useState('');\r\n    const [EPFApply, setEPFApply]=useState(true);\r\n    const [EPTApply, setEPTApply]=useState(true);\r\n    const [EESIApply, setEESIApply]=useState(true);\r\n    const [Ephoto,setEphoto]=useState('');\r\n\r\n    \r\n\r\n    \r\n  \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            ECode:ECode ,\r\n            EEtype:EEtype,\r\n            EBankName:EBankName,\r\n            EFullname:EFullname,\r\n            ECompany_Name:ECompany_Name,\r\n            EAccountNo:EAccountNo,\r\n            EGender:EGender,\r\n            EDepartment:EDepartment,\r\n            EBranch:EBranch,\r\n            EEmail:EEmail,\r\n            EDesignation,\r\n            EIFC_Code:EIFC_Code,\r\n            EDOB:EDOB,\r\n            ELocation:ELocation,\r\n            EPFAccount:EPFAccount,\r\n            EAddress:EAddress,\r\n            ECAddress:ECAddress,\r\n            EOfferDate:EOfferDate,\r\n            EPAN_No:EPAN_No,\r\n            EJoinDate:EJoinDate,\r\n            EAadhar_no:EAadhar_no,\r\n            ERole:ERole,\r\n            ESalary:ESalary,\r\n            EPostal:EPostal,\r\n            EUserName:EUserName,\r\n            EPF:EPF,\r\n            EContNo:EContNo,\r\n            EPassword:EPassword,\r\n            EPT:EPT,\r\n            EEmergencyContNo:EEmergencyContNo,\r\n            EBloodGroup:EBloodGroup,\r\n            EESI:EESI,\r\n            EPFApply:EPFApply,\r\n            EPTApply:EPTApply,\r\n            EESIApply:EESIApply,\r\n            Ephoto:Ephoto\r\n        };\r\n        dispatch(setUser(reqBody));\r\n    }\r\n    const [selectEmpType] = React.useState([\r\n        {\r\n            label: 'CONTRACTUAL',\r\n            value: 'CONTRACTUAL',\r\n        },\r\n        { label: 'PERMANENT', value: 'PERMANENT' },\r\n        { label: 'C2H', value: 'C2H' },\r\n    ]);\r\n    const [selectGender] = React.useState([\r\n        { label: 'Male', value: 'Male',  },\r\n        { label: 'Female', value: 'Female' }\r\n    ]);\r\n    let roleList = useSelector((state) => state.Role.role || []);\r\n    useEffect( () => {\r\n        dispatch(getRoleList());\r\n    \r\n        // eslint-disable-next-line\r\n      }, [] );\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Employee Code <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        name=\"ECode \"\r\n                                        id=\"ECode \"\r\n                                        onChange={(e) => {\r\n                                            setECode (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Employee Type <span className=\"redspan\">*</span></Label>\r\n                                   <select className=\"form-control style-input\" required\r\n                                   name=\"EEtype\" id=\"EEtype\" onChange={(e) => {\r\n                                    setEEtype (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected>Select</option>\r\n                                {selectEmpType.map((emptype) => (\r\n                                    <option key={emptype.value} value={emptype.value}>\r\n                                        {emptype.label}\r\n                                    </option>\r\n                                ))}\r\n                                   </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Bank Name</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EBankName\"\r\n                                        name=\"EBankName\" onChange={(e) => {\r\n                                            setEBankName (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Full Name <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EFullname\"\r\n                                        name=\"EFullname\" onChange={(e) => {\r\n                                            setEFullname (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Company Name<span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"ECompany_Name\"\r\n                                        name=\"ECompany_Name\" onChange={(e) => {\r\n                                            setECompany_Name (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Account Number</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EAccountNo\"\r\n                                        name=\"EAccountNo\" onChange={(e) => {\r\n                                            setEAccountNo (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Gender <span className=\"redspan\">*</span></Label>\r\n                                <select className=\"form-control style-input\" required name=\"EGender\" id=\"EGender\" onChange={(e) => {\r\n                                    setEGender (e.target.value);\r\n                                }}>\r\n                                     <option disabled selected>Select</option>\r\n                                    {selectGender.map((gender) => (\r\n                                    <option key={gender.value} value={gender.value}>\r\n                                        {gender.label}\r\n                                    </option>\r\n                                ))}\r\n                                </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Deapartment <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\"  required\r\n                                        className=\"style-input\"\r\n                                        id=\"EDepartment\"\r\n                                        name=\"EDepartment\" onChange={(e) => {\r\n                                            setEDepartment (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Branch</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EBranch\"\r\n                                        name=\"EBranch\" onChange={(e) => {\r\n                                            setEBranch (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Email <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"email\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EEmail\"\r\n                                        name=\"EEmail\" onChange={(e) => {\r\n                                            setEEmail (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Designation <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EDesignation\"\r\n                                        name=\"EDesignation\" onChange={(e) => {\r\n                                            setEDesignation (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">IFSC Code</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EIFC_Code\"\r\n                                        name=\"EIFC_Code\" onChange={(e) => {\r\n                                            setEIFC_Code (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Date Of Birth <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"date\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EDOB\"\r\n                                        name=\"EDOB\" onChange={(e) => {\r\n                                            setEDOB (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Location <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"ELocation\"\r\n                                        name=\"ELocation\" onChange={(e) => {\r\n                                            setELocation (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">PF Account No</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPFAccount\"\r\n                                        name=\"EPFAccount\" onChange={(e) => {\r\n                                            setEPFAccount (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={6}>\r\n                            <Label>Permanent Address</Label>\r\n                            <textarea\r\n                                className=\"form-control style-input\"\r\n                                rows=\"3\"\r\n                                name=\"EAddress\" id=\"EAddress\" onChange={(e) => {\r\n                                    setEAddress (e.target.value);\r\n                                }}></textarea>\r\n                        </Col>\r\n                        <Col lg={6}>\r\n                            <Label>Current Address</Label>\r\n                            <textarea\r\n                                className=\"form-control style-input\"\r\n                                rows=\"3\"\r\n                                name=\"ECAddress\" id=\"ECAddress\" onChange={(e) => {\r\n                                    setECAddress (e.target.value);\r\n                                }}></textarea>\r\n                        </Col>\r\n                    </Row>\r\n                        \r\n                        <Row className=\"mt-3\">\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Offer Date <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        id=\"EOfferDate\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EOfferDate\" onChange={(e) => {\r\n                                            setEOfferDate (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">PAN Card Number</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPAN_No\"\r\n                                        name=\"EPAN_No\" onChange={(e) => {\r\n                                            setEPAN_No (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Join Date<span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"date\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"EJoinDate\"\r\n                                        name=\"EJoinDate\" onChange={(e) => {\r\n                                            setEJoinDate (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Adhar Card Number</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EAadhar_no\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EAadhar_no\" onChange={(e) => {\r\n                                            setEAadhar_no (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Role <span className=\"redspan\">*</span></Label>\r\n                                    <select\r\n                                        type=\"text\" required\r\n                                        className=\"style-input form-control\"\r\n                                        id=\"ERole\"\r\n                                        name=\"ERole\" onChange={(e) => {\r\n                                            setERole (e.target.value);\r\n                                        }}>\r\n                                             <option disabled selected>Select</option>\r\n                                            {roleList.map((roles, i) => (\r\n                                                <option key={i ++}  value={roles.role}>\r\n                                                    {roles.role}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Salary</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"ESalary\"\r\n                                        name=\"ESalary\" onChange={(e) => {\r\n                                            setESalary (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">PostCode</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EPostal\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EPostal\" onChange={(e) => {\r\n                                            setEPostal (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Username <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        id=\"EUserName\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EUserName\" onChange={(e) => {\r\n                                            setEUserName (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Provident Fund</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPF\"\r\n                                        name=\"EPF\" onChange={(e) => {\r\n                                            setEPF (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Phone Number</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EContNo\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EContNo\" onChange={(e) => {\r\n                                            setEContNo (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Password <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        id=\"EPassword\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EPassword\" onChange={(e) => {\r\n                                            setEPassword (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Professional Tax (%)</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EPT\"\r\n                                        name=\"EPT\" onChange={(e) => {\r\n                                            setEPT (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Emergancy Contact Number</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EEmergencyContNo\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EEmergencyContNo\" onChange={(e) => {\r\n                                            setEEmergencyContNo (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Blood Group</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"EBloodGroup\"\r\n                                        className=\"style-input\"\r\n                                        name=\"EBloodGroup\" onChange={(e) => {\r\n                                            setEBloodGroup (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">ESI</Label>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        className=\"style-input\"\r\n                                        id=\"EESI\"\r\n                                        name=\"EESI\" onChange={(e) => {\r\n                                            setEESI (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={6}>\r\n                        <Row>\r\n                        <label className=\"col-sm-12 m-0\">What Applied</label>\r\n                            <Col lg={4}>\r\n                        <div className=\"form-group form-check\">                            \r\n                            <label className=\"form-check-label\">\r\n                            <input className=\"form-check-input\" type=\"checkbox\"  id=\"EPFApply\"\r\n                                        name=\"EPFApply\" value={EPFApply || true} \r\n                                        defaultChecked={EPFApply} onClick={(e) => {\r\n                                            setEPFApply (e.target.value);\r\n                                        }}/> PF Apply \r\n                            </label>\r\n                        </div>\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                        <div className=\"form-group form-check\">                            \r\n                            <label className=\"form-check-label\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\"  id=\"EPTApply\"\r\n                                        name=\"EPTApply\" value={EPTApply || true}  \r\n                                        defaultChecked={EPTApply} onClick={(e) => {\r\n                                            setEPTApply (e.target.value);\r\n                                        }}/> PT Apply\r\n                            </label>\r\n                        </div>\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                        <div className=\"form-group form-check\">                            \r\n                            <label className=\"form-check-label\">\r\n                                <input className=\"form-check-input\" type=\"checkbox\" id=\"EESIApply\"\r\n                                        name=\"EESIApply\"  value={EESIApply || true} \r\n                                        defaultChecked={EESIApply} onClick={(e) => {\r\n                                            setEESIApply (e.target.value);\r\n                                        }}/> ESI Apply\r\n                            </label>\r\n                        </div>\r\n                        </Col>\r\n                        </Row>\r\n                        </Col>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">File Upload</Label>\r\n                                    <Input\r\n                                        type=\"file\"\r\n                                        className=\"style-input\"\r\n                                        id=\"Ephoto\"\r\n                                        name=\"Ephoto\" onChange={(e) => {\r\n                                            setEphoto (e.target.value);\r\n                                        }}/>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddUser;\r\n\r\n\r\n","import axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label} from 'reactstrap';\r\n//import { getRecruiterList } from '../../../redux/recruiter/actions';\r\nimport { getUserList } from '../../../redux/user/actions';\r\nimport { getRoleList } from '../../../redux/role/actions';\r\n// import Select from 'react-select';\r\nconst AssignRole = () => {\r\n\r\n    const [uid\t, setUid]=useState([]);\r\n    const [role, setRole]=useState([]);\r\n\r\n    let userList = useSelector((state) => state.Users.users || []);\r\n    let roleList = useSelector((state) => state.Role.role || []);\r\n    //console.log(\"recruter\", recruterList)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        // other code\r\n        dispatch(getUserList());\r\n        dispatch(getRoleList());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     }, []) ;\r\n     const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const reqBody ={\r\n            uid:uid ,\r\n            role:role\r\n        };\r\n        axios\r\n            .post('http://144.48.250.235:98/api/UserRole_Master', reqBody)\r\n            .then((response) => {\r\n               console.log(response);\r\n            });\r\n           e.target.reset();\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form onSubmit={handleSubmit}>\r\n                <Row>\r\n                    <Col className=\"col-md-6 offset-md-3\">\r\n                        <div className=\"card p-5\">\r\n                        <h5 className=\"text-uppercase  text-center\">Assign User Role</h5>\r\n                    <Row>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select User</Label>\r\n                                    <select className=\"form-control style-input\"\r\n                                    name=\"uid \"\r\n                                    id=\"uid \"\r\n                                    onChange={(e) => {\r\n                                        setUid (e.target.value);\r\n                                    }}>\r\n                                    <option selected disabled>Select</option>\r\n                                    {userList.map((user,i) => (\r\n                                    <option key={i++} value={user.EId}>\r\n                                        {user.EFullname}\r\n                                    </option>\r\n                                ))}\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Role</Label>\r\n                                    <select className=\"form-control style-input\"\r\n                                    name=\"role \"\r\n                                    id=\"role \"\r\n                                    onChange={(e) => {\r\n                                        setRole (e.target.value);\r\n                                    }}>\r\n                                    <option disabled selected>Select</option>\r\n                                            {roleList.map((roles, i) => (\r\n                                                <option key={i ++}  value={roles.role}>\r\n                                                    {roles.role}\r\n                                                </option>\r\n                                            ))}\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                       \r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AssignRole;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getRoleList } from '../../../redux/role/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewUserRole = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Role.role);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getRoleList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n      \r\n        {\r\n            dataField: 'username',\r\n            text: 'Employee Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'role',\r\n            text: 'Role',\r\n        },\r\n        {\r\n            dataField: 'email',\r\n            text: 'Edit',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   <FeatherIcon.Edit />\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n    ];\r\n    \r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewUserRole;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddUser from './AddUser';\r\nimport ViewUser from './ViewUser';\r\nimport AssignRole from './AssignRole';\r\nimport ViewUserRole from './ViewUserRole';\r\n\r\nconst MastersTabs = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add User\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View User\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Assign Role\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            View Role\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddUser/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewUser/> \r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n         <AssignRole/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n         <ViewUserRole/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default MastersTabs;","import React from 'react';\r\nimport { Row, Col, FormGroup, Form, Label, Input} from 'reactstrap';\r\n// import Select from 'react-select';\r\nconst AddClient = () => {\r\n\r\n   \r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form>\r\n                                <Row>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Client Name<span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                           \r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Contact Person <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Email <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"email\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Number <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Contact person <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Email <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                <Label for=\"empleadoNombre\">Number <span className=\"redspan\">*</span></Label>\r\n                                    <Input\r\n                                        type=\"text\" required\r\n                                        className=\"style-input\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" />\r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <Label>Address <span className=\"redspan\">*</span></Label>\r\n                            <textarea\r\n                                className=\"form-control style-input\"\r\n                                rows=\"3\" required\r\n                                name=\"jjd\"></textarea>\r\n                        </Col>\r\n                    </Row>\r\n                        <Row className=\"mt-4\">                            \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Type <span className=\"redspan\">*</span></Label>\r\n                                    <select\r\n                                        type=\"text\" required\r\n                                        className=\"style-input form-control\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" ></select>\r\n                                </FormGroup>\r\n                            </Col>  \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Segment <span className=\"redspan\">*</span></Label>\r\n                                    <select\r\n                                        type=\"text\" required\r\n                                        className=\"style-input form-control\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" ></select>\r\n                                </FormGroup>\r\n                            </Col>    \r\n                            <Col lg={4}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoNombre\">Margin Type <span className=\"redspan\">*</span></Label>\r\n                                    <select\r\n                                        type=\"text\" required\r\n                                        className=\"style-input form-control\"\r\n                                        id=\"jobcode\"\r\n                                        name=\"jobcode\" ></select>\r\n                                </FormGroup>\r\n                            </Col>                              \r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button className=\"btn btn-primary\">Submit</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddClient;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getClientList } from '../../../redux/client/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n//import * as FeatherIcon from 'react-feather';\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewClient = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Client.clients || []);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getClientList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'cname',\r\n            text: 'Client Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'cperson1',\r\n            text: 'Contact Person Name',\r\n        },\r\n        {\r\n            dataField: 'cemail1',\r\n            text: 'Contact Email',\r\n        },\r\n        {\r\n            dataField: 'ccnt1',\r\n            text: 'Contact Number',\r\n        },\r\n        {\r\n            dataField: 'cdate',\r\n            text: 'Date Of Creation',\r\n        },\r\n        {\r\n            dataField: 'Action',\r\n            text: 'Action',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                    <button type=\"button\" \r\n                    id=\"actionButton\" title=\"Action\"\r\n                onClick={() => {_validateFunction(row=[])}} \r\n                className=\"btn btn-link text-secondary\">\r\n                 {/* <FeatherIcon.Target /> */}\r\n                 <i className=\"uil uil-file-exclamation-alt\"></i>\r\n                </button>\r\n                );\r\n              },\r\n        },\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewClient;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddClient from './AddClient';\r\nimport ViewClient from './ViewClient';\r\n\r\nconst ClientTabs = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Add Client\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Client\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddClient/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewClient/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ClientTabs;","import React, { useEffect} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, FormGroup, Form, Label} from 'reactstrap';\r\nimport { getRecruiterList } from '../../../redux/recruiter/actions';\r\n// import Select from 'react-select';\r\nconst AddTeam = () => {\r\n\r\n    let recruterList = useSelector((state) => state.Recruiter.recruiters || []);\r\n    //console.log(\"recruter\", recruterList)\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        // other code\r\n        dispatch(getRecruiterList());\r\n     \r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n     }, []) ;\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Form>\r\n                <Row>\r\n                    <Col className=\"col-md-6 offset-md-3\">\r\n                        <div className=\"card p-5\">\r\n                        <h5 className=\"text-uppercase  text-center\">Create Team</h5>\r\n                    <Row>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                    <Label for=\"empleadoApellidos\">Select Team Lead</Label>\r\n                                   \r\n                                    <select className=\"form-control\">\r\n                                         <option selected desabled>Select</option>\r\n                                    {recruterList.map((recruter,i) => (\r\n                                    <option key={i++} value={recruter.EId}>\r\n                                        {recruter.EFullname}\r\n                                    </option>\r\n                                ))}\r\n                                    </select>\r\n                                </FormGroup>\r\n                            </Col>\r\n                            <Col lg={12}>\r\n                                <FormGroup>\r\n                                {recruterList.map((recruter, i, index) => (\r\n                            <div className=\"form-check mt-1\">\r\n                                <label className=\"form-check-label\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        key={i ++}\r\n                                        className=\"form-check-input\"\r\n                                        onChange={(e) => {\r\n                                           ///setJassignuser(e.target.value);\r\n                                          // handleCheeckboxChange()\r\n                                        }}\r\n                                        value={recruter.Eid}\r\n                                    />\r\n                                    {recruter.EFullname}\r\n                                </label>\r\n                            </div>\r\n                        ))} \r\n                                </FormGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                        <Col lg={12}>\r\n                            <button className=\"btn btn-primary\">Submit</button>\r\n                            <button className=\"btn btn-secondary ml-3\">Cancel</button>\r\n                            </Col>\r\n                        </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            \r\n                       \r\n                        </Form>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AddTeam;\r\n\r\n\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getTeamList } from '../../../redux/teammaster/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewTeam = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Teams.teams);\r\n  console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getTeamList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'teamlead',\r\n            text: 'Team Lead',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'teammember',\r\n            text: 'Total Member',\r\n        },\r\n        {\r\n            dataField: 'email',\r\n            text: 'Edit',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   <FeatherIcon.Edit />\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'Delete',\r\n            text: 'Delete',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Delete\"\r\n                  >\r\n                   <FeatherIcon.Trash2 />\r\n                  </button>\r\n                );\r\n              },\r\n        }\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewTeam;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink} from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport AddTeam from './AddTeam';\r\nimport ViewTeam from './ViewTeam';\r\n\r\nconst TeamTabs = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Nav tabs className=\"second-level-tab nav nav-tabs justify-content-end\">\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Create Team\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem >\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            View Team\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AddTeam/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ViewTeam/> \r\n        </TabPane>\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TeamTabs;","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport MasterNav from './usermaster/MasterNav';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport ClientTabs from './clientmaster/ClientNav';\r\nimport TeamTabs from './teammaster/TeamNav';\r\nconst Masters = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Master', path: '/master', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            User Master\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Client Master\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-4\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Team Master\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <MasterNav/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <ClientTabs/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n         <TeamTabs/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Masters;"],"sourceRoot":""}