{"version":3,"sources":["redux/role/actions.js","redux/client/actions.js","redux/recruiter/actions.js","redux/teammaster/actions.js","redux/appMenu/actions.js","redux/list/constants.js","redux/activity/constants.js","redux/auth/constants.js","redux/layout/constants.js","pages/master/usermaster/ViewUser.js","redux/requirement/constants.js","redux/activity/actions.js","redux/list/actions.js","redux/user/constants.js","redux/appMenu/constants.js","pages/hr/AttendanceReport.js","pages/hr/Holidays.js","pages/hr/ApplyForLeave.js","pages/hr/LeaveBalance.js","pages/hr/ViewLeave.js","pages/hr/Hr.js","pages/attendance/Attedance.js","pages/acyivity/TargetSubmission.js","pages/acyivity/OfferAndHire/LastMonthJoining.js","pages/acyivity/OfferAndHire/MonthOffer.js","pages/acyivity/OfferAndHire/TodaysInterView.js","pages/acyivity/OfferAndHire.js","pages/acyivity/Graph.js","pages/acyivity/AtsActivity.js","pages/acyivity/SearchResume.js","pages/acyivity/Activity.js","routes/index.js","routes/Routes.js","helpers/fake-backend.js","App.js","serviceWorker.js","redux/layout/reducers.js","redux/auth/reducers.js","redux/appMenu/reducers.js","redux/user/reducers.js","redux/requirement/reducers.js","redux/client/reducers.js","redux/recruiter/reducers.js","redux/attendance/reducers.js","redux/list/reducers.js","redux/activity/reducers.js","redux/teammaster/reducers.js","redux/role/reducers.js","redux/reducers.js","helpers/api.js","redux/auth/saga.js","redux/layout/saga.js","redux/appMenu/utils.js","redux/appMenu/saga.js","helpers/axios.js","helpers/restApi.js","redux/user/sagas.js","redux/requirement/sagas.js","redux/client/sagas.js","redux/recruiter/sagas.js","redux/attendance/sagas.js","redux/list/sagas.js","redux/activity/sagas.js","redux/teammaster/sagas.js","redux/role/sagas.js","redux/sagas.js","redux/store.js","index.js","constants/layout.js","redux/attendance/constants.js","redux/client/constants.js","redux/recruiter/constants.js","redux/teammaster/constants.js","redux/role/constants.js","redux/attendance/actions.js","redux/auth/actions.js","helpers/authUtils.js","redux/user/actions.js","components/PageTitle.js","redux/requirement/actions.js","redux/layout/actions.js"],"names":["getRoleList","type","GET_ROLE_LIST_REQUEST","setRole","role","SET_ROLE_LIST_REQUEST","payload","getClientList","GET_CLIENT_LIST_REQUEST","setClient","clients","SET_CLIENT_LIST_REQUEST","getRecruiterList","GET_RECRUITER_LIST_REQUEST","setRecruiter","recruiters","SET_RECRUITER_LIST_REQUEST","getTeamList","GET_TEAM_LIST_REQUEST","setTeam","teams","SET_TEAM_LIST_REQUEST","initMenu","INIT_MENU","initMenuSuccess","menuItems","INIT_MENU_SUCCESS","changeActiveMenuFromLocation","CHANGE_ACTIVE_MENU_FROM_LOCATION","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS","GET_LIST_LIST_REQUEST","SET_LIST_LIST_REQUEST","GET_OFFER_LIST_REQUEST","SET_OFFER_LIST_REQUEST","GET_VTBJ_LIST_REQUEST","SET_VTBJ_LIST_REQUEST","GET_JOIN_LIST_REQUEST","SET_JOIN_LIST_REQUEST","GET_BD_LIST_REQUEST","SET_BD_LIST_REQUEST","GET_DT_LIST_REQUEST","SET_DT_LIST_REQUEST","GET_TOIN_LIST_REQUEST","SET_TOIN_LIST_REQUEST","GET_MONOF_LIST_REQUEST","SET_MONOF_LIST_REQUEST","GET_MONTHJOIN_LIST_REQUEST","SET_MONTHJOIN_LIST_REQUEST","GET_ATSACTI_LIST_REQUEST","SET_ATSACTI_LIST_REQUEST","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_FAILED","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_FAILED","LOGOUT_USER","FORGET_PASSWORD","FORGET_PASSWORD_SUCCESS","FORGET_PASSWORD_FAILED","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","defaultSorted","dataField","order","sizePerPageRenderer","options","currSizePerPage","onSizePerPageChange","Fragment","className","name","id","defaultValue","onChange","e","target","value","map","option","idx","key","text","TableWithSearch","props","SearchBar","Search","useState","rowData","setrowData","rowEvent","onDoubleClick","row","alert","console","log","NoDataIndication","bootstrap4","keyField","data","records","columns","search","md","searchProps","baseProps","bordered","rowEvents","noDataIndication","pagination","paginationFactory","sizePerPage","sizePerPageList","length","ViewUser","dispatch","useDispatch","useSelector","state","Users","users","useEffect","getUserList","hidden","sort","formatter","cellContent","onClick","title","GET_REQUIREMENTS_LIST_REQUEST","SET_REQUIREMENTS_LIST_REQUEST","GET_CRITICAL_REQUIREMENTS_LIST","SET_CRITICAL_REQUIREMENTS_LIST","SAVE_REQUIREMENTS","SET_SAVE_REQUIREMENTS","GET_REQUIREMENTS_MODAL","HIDE_REQUIREMENTS_MODAL","getDailyTargetList","setDailyTargetList","dailytarget","getTodaysInterviewList","setTodaysInterviewList","todaysinterview","getMonthOfferList","setMonthOfferList","monthoffer","getMonthToBeJoinList","setMonthToBeJoinList","monthtobejoin","getAtsActivityList","setAtsActivityList","atsactivity","getListList","setList","list","getOfferList","setOfferList","offer","getViewToBeJoinList","setViewToBeJoinList","viewtobejoin","getJoinList","setJoinList","joinlist","getBDList","setBDList","bdlist","GET_USER_LIST_REQUEST","SET_USER_LIST_REQUEST","ADD_USER","ADD_USER_REQUEST","GET_ERROR","Input","Row","Col","AttendanceReport","List","placeholder","Holidays","ApplyForLeave","Component","render","onValidSubmit","this","handleValidSubmit","Label","for","InputGroup","InputGroupAddon","addonType","required","FormGroup","Button","ExportCSVButton","CSVExport","UncontrolledDropdown","DropdownToggle","data-toggle","tag","DropdownMenu","right","csvProps","wrapperClasses","LeaveBalance","Attendance","attendance","getAttendanceList","ViewLeave","Hr","activeTab","setActiveTab","toggle","tab","PageTitle","breadCrumbItems","label","path","active","color","Nav","tabs","NavItem","NavLink","classnames","TabContent","TabPane","tabId","TargetSubmission","Activity","prevMonthName","moment","format","TodaysInterView","MonthOffer","OfferAndHire","LastMonthJoining","Graph","lg","chart","height","zoom","enabled","toolbar","show","colors","tooltip","theme","x","dataLabels","stroke","width","curve","align","style","fontSize","grid","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","AtsActivity","SearchResume","Login","React","lazy","Logout","Register","ForgetPassword","Confirm","Dashboard","dashboardOld","Requirement","Masters","PrivateRoute","component","roles","rest","isUserAuthenticated","to","pathname","from","location","loggedInUser","getLoggedInUser","indexOf","rootRoute","exact","route","dashboardRoutes","icon","FeatherIcon","requirementRoutes","listRoutes","attendanceRoutes","activityRoutes","hrRoutes","masterRoutes","viewUserRoutes","clientWiseSalesRoutes","reportRoutes","revenueRoutes","asplRoutes","rtRoutes","authRoutes","children","Route","flattenRoutes","routes","flatRoutes","forEach","item","push","authProtectedRoutes","allFlattenRoutes","loading","AuthLayout","Loadable","loader","loaded","default","VerticalLayout","HorizontalLayout","Routes","getLayout","layoutCls","layout","layoutType","layoutConstants","Layout","index","connect","user","Auth","username","password","firstName","lastName","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","JSON","parse","body","filteredUsers","filter","responseJson","token","ok","json","fullname","split","newUser","message","headers","Authorization","then","response","configureFakeBackend","App","Boolean","hostname","match","INIT_STATE","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","action","error","passwordResetStatus","AppMenu","requirements","criticalreq","requirement","jid","combineReducers","Requirements","modal","Client","Recruiter","GET_ATTENDANCE_LIST_REQUEST","SET_ATTENDANCE_LIST_REQUEST","Teams","Role","fetchJSON","status","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","Cookies","set","stringify","remove","call","put","loginUserSuccess","loginUserFailed","history","email","registerUserSuccess","registerUserFailed","forgetPasswordSuccess","forgetPasswordFailed","takeEvery","all","fork","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","document","setAttribute","manageBodyClass","cssClass","classList","add","changeLeftSidebarThemeAction","changeSidebarTypeAction","uuid","assignIdAndParent","parentId","initMenuAndItems","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","assignIds","api","axios","create","baseURL","process","REACT_APP_BACKEND_URL","interceptors","use","originalRequest","config","guid","localStorage","getItem","defaults","common","_retry","post","GUID","res","getRequirementList","get","getCriticleRequirementList","getAttendance","getTodaysInterviewtList","setUser","watchGetUserRequest","watchSetUser","userSagas","Data","actions","result","swal","setSaveRequirement","watchGetRequirementRequest","watchSetSaveRequirement","getCriticalRequirementList","watchCriticalRequirement","requirementSagas","watchGetClientRequest","clientSagas","watchGetRecruiterRequest","recruiterSagas","watchGetAttendanceRequest","attendanceSagas","watchGetListRequest","watchGetOfferRequest","watchGetViewToBeJoinRequest","watchGetJoinRequest","watchGetBDRequest","listSagas","watchGetDailyTargetRequest","watchGetTodaysInterviewRequest","watchGetMonthOfferRequest","watchGetMonthToBeJoinRequest","watchGetAtsActivityRequest","activitySagas","watchGetTeamRequest","teamSagas","watchGetRoleRequest","roleSagas","rootSaga","getState","layoutSaga","userSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById","navigator","serviceWorker","ready","registration","unregister","LAYOUT_VERTICAL","LAYOUT_HORIZONTAL","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_SCROLLABLE","setAttendance","loginUser","registerUser","logoutUser","decoded","jwtDecode","currentTime","Date","now","exp","warn","getUser","setUserRquest","items","setRequirement","setCriticalRequirement","getRequirementModal","hideRequirementModal","changeSidebarTheme","changeSidebarType","sidebarType"],"mappings":"4FAAA,gFAIaA,EAAa,KAAI,CAC5BC,KAAKC,MAGMC,EAAYC,IAAF,CACrBH,KAAMI,IACNC,QAASF,K,iCCVX,gFAIaG,EAAe,KAAI,CAC9BN,KAAKO,MAGMC,EAAcC,IAAF,CACvBT,KAAMU,IACNL,QAASI,K,iCCVX,gFAIaE,EAAkB,KAAI,CACjCX,KAAKY,MAGMC,EAAiBC,IAAF,CAC1Bd,KAAMe,IACNV,QAASS,K,iCCVX,gFAIaE,EAAa,KAAI,CAC5BhB,KAAKiB,MAGMC,EAAYC,IAAF,CACrBnB,KAAMoB,IACNf,QAASc,K,iCCTX,oJAOaE,EAAW,MACpBrB,KAAMsB,IACNjB,QAAS,KAGAkB,EAAmBC,IAAD,CAC3BxB,KAAMyB,IACNpB,QAAS,CAAEmB,eAGFE,EAA+B,MACxC1B,KAAM2B,IACNtB,QAAS,KAGAuB,EAAuCC,IAAD,CAC/C7B,KAAM8B,IACNzB,QAAS,CAAEwB,2B,gCCxBf,oVACO,IAAME,EAAwB,wBACxBC,EAAwB,wBAIxBC,EAAyB,yBACzBC,EAAyB,yBAGzBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAsB,sBACtBC,EAAsB,uB,gCCnBnC,oVACO,IAAMC,EAAsB,sBACtBC,EAAsB,sBAGtBC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAyB,yBACzBC,EAAyB,yBAGzBC,EAA6B,6BAC7BC,EAA6B,6BAG7BC,EAA2B,2BAC3BC,EAA2B,4B,gCCnBxC,oVACO,IAAMC,EAAa,aACbC,EAAqB,qBACrBC,EAAoB,oBACpBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAAc,cACdC,EAAkB,kBAClBC,EAA0B,0BAC1BC,EAAyB,0B,gCCVtC,8OACO,IAAMC,EAAgB,gBAChBC,EAAsB,sBACtBC,EAAuB,uBACvBC,EAAsB,sBAGtBC,EAAuB,uBACvBC,EAAqB,qBACrBC,EAAqB,sB,qLCI5BC,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAAC,IAAD,CACI5E,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,EAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UADuB,EAGDE,mBAAS,IAHR,mBAGxBC,EAHwB,KAGfC,EAHe,KAMvBC,EAAW,CACfC,cAAgBC,IACZC,QACIJ,EAAYD,GAAY,IAAIA,EAASI,IACrCE,QAAQC,IAAI,UAAWP,KAI7BQ,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKkC,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,eAI7B,kBAAC,IAAD,iBACQpB,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,EACf6C,UAAWjB,EACXkB,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,EACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YAgHlGC,IAnGE,KAEb,IAAMC,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAMC,MAAMC,OAEhDC,oBAAU,KACNN,EAASO,gBAGV,IAEH,IAAMrB,EAAU,CACZ,CACItC,UAAU,KACVmB,KAAK,KACLyC,QAAQ,GAEZ,CACI5D,UAAW,QACXmB,KAAM,kBAGV,CACInB,UAAW,YACXmB,KAAM,OACN0C,MAAM,GAEV,CACI7D,UAAW,gBACXmB,KAAM,WAEV,CACInB,UAAW,eACXmB,KAAM,eAEV,CACInB,UAAW,YACXmB,KAAM,YAEV,CACInB,UAAW,QACXmB,KAAM,QAEV,CACInB,UAAW,SACXmB,KAAM,SAEV,CACInB,UAAW,QACXmB,KAAM,OACN2C,UAAW,CAACC,EAAalC,IAGnB,4BACAtB,UAAU,8BACRyD,QAAS,OACTC,MAAM,QAEP,kBAAC,IAAD,QAKX,CACIjE,UAAW,SACXmB,KAAM,SACN2C,UAAW,CAACC,EAAalC,IAGnB,4BACAtB,UAAU,8BACRyD,QAAS,OACTC,MAAM,UAEP,kBAAC,IAAD,SAcf,OACI,kBAAC,IAAM3D,SAAP,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAACc,EAAD,CAAiBiB,QAASA,EAASC,QAASA,S,gCChMhE,gRACO,IAAM4B,EAAgC,gCAChCC,EAAgC,gCAEhCC,EAAiC,iCACjCC,EAAiC,iCAGjCC,EAAoB,oBACpBC,EAAwB,wBAGxBC,EAAyB,yBACzBC,EAA0B,2B,sECbvC,gWAcaC,EAAqB,MAC9B/I,KAAMyC,MAGGuG,EAAsBC,IAAD,CAC9BjJ,KAAM0C,IACNrC,QAAS4I,IAGAC,EAAyB,MAClClJ,KAAM2C,MAGGwG,EAA0BC,IAAD,CAClCpJ,KAAM4C,IACNvC,QAAS+I,IAGAC,EAAoB,MAC/BrJ,KAAM6C,MAGKyG,EAAqBC,IAAD,CAC/BvJ,KAAM8C,IACNzC,QAASkJ,IAGEC,EAAuB,MAClCxJ,KAAM+C,MAGK0G,EAAwBC,IAAD,CAClC1J,KAAMgD,IACN3C,QAASqJ,IAIEC,EAAqB,MAChC3J,KAAMiD,MAGK2G,EAAsBC,IAAD,CAChC7J,KAAMkD,IACN7C,QAASwJ,K,gCCzDX,gWAaaC,EAAc,MACvB9J,KAAM+B,MAGGgI,EAAWC,IAAD,CACnBhK,KAAMgC,IACN3B,QAAS2J,IAIAC,EAAe,MACxBjK,KAAMiC,MAGGiI,EAAgBC,IAAD,CACxBnK,KAAMkC,IACN7B,QAAS8J,IAGAC,EAAsB,MAC/BpK,KAAMmC,MAGGkI,EAAuBC,IAAD,CAC/BtK,KAAMoC,IACN/B,QAASiK,IAIAC,EAAc,MACzBvK,KAAMqC,MAEKmI,EAAeC,IAAD,CACzBzK,KAAMsC,IACNjC,QAASoK,IAIEC,EAAY,MACvB1K,KAAMuC,MAEKoI,EAAaC,IAAD,CACvB5K,KAAMwC,IACNnC,QAASuK,K,gCCvDX,0KACO,IAAMC,EAAwB,wBACxBC,EAAwB,wBAGxBC,EAAW,WACXC,EAAmB,mBAGnBC,EAAY,a,gCCVzB,wIACO,IAAM3J,EAAY,YACZG,EAAoB,oBACpBE,EAAmC,mCACnCG,EAA2C,4C,wZCQlDsC,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,EAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFW,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,gBAI1B,kBAAC,IAAD,iBACQc,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,EAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,EACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YA8DlG8D,EAjDU,KAErB,IAAM5D,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0D,KAAKtB,MAChD5D,QAAQC,IAAIK,GACXqB,oBAAU,KACNN,EAASqC,gBAGV,IA6BH,OACI,kBAAC,IAAMnF,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC3F,EAAD,CAAiBiB,QAASA,EAASC,QA/BnC,CACZ,CACItC,UAAW,WACXmB,KAAM,SAEV,CACInB,UAAU,WACVmB,KAAK,WAET,CACInB,UAAW,YACXmB,KAAM,MAEV,CACInB,UAAW,YACXmB,KAAM,YAEV,CACInB,UAAW,eACXmB,KAAM,MAEV,CACInB,UAAW,eACXmB,KAAM,qBC1HZpB,EAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,EAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,EAAmBC,IAarB,IAAMY,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,GAAIjC,UAAU,IACvB,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,uBACf,4BAAQA,UAAU,4BAA4B5E,KAAK,UAAnD,WAEA,2BAAOA,KAAK,OAAO4E,UAAU,4BAA4B2G,YAAY,mBACrE,2BAAOvL,KAAK,OAAO4E,UAAU,4BAA4B2G,YAAY,WACrE,2BAAOvL,KAAK,OAAO4E,UAAU,4BAA4B2G,YAAY,WAKzE,kBAAC,IAAD,iBACQ7F,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,EAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,EACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YAsDlGiE,EAzCE,KAEb,IAAM/D,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0D,KAAKtB,MAChD5D,QAAQC,IAAIK,GACXqB,oBAAU,KACNN,EAASqC,gBAGV,IAqBH,OACI,kBAAC,IAAMnF,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAiB1E,QAASA,EAASC,QAvBnC,CACZ,CACItC,UAAW,WACXmB,KAAM,iBAEV,CACInB,UAAU,YACVmB,KAAK,QAET,CACInB,UAAW,YACXmB,KAAM,OAEV,CACInB,UAAW,eACXmB,KAAM,e,iECvHlB,MAAMiG,WAAsBC,YAOxBC,SACI,OACI,kBAAC,IAAMhH,SAAP,KACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,kBAAC,UAAD,CAAQgH,cAAeC,KAAKC,kBAAmBlH,UAAU,gCAEzD,wBAAIA,UAAU,+BAAd,oBACI,kBAAC,WAAD,CAASA,UAAU,IACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,YAAX,cACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,IAAD,CAAMA,UAAU,gBAGxB,kBAAC,WAAD,CACI5E,KAAK,OACL6E,KAAK,WACLC,GAAG,WACHsH,UAAQ,KAIhB,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAASxH,UAAU,IACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,YAAX,aACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,IAAD,CAAMA,UAAU,gBAGxB,kBAAC,WAAD,CACI5E,KAAK,OACL6E,KAAK,WACLC,GAAG,WACHsH,UAAQ,KAIhB,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAASxH,UAAU,IACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,SAAX,cACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,KAAD,CAAUA,UAAU,gBAG5B,kBAAC,WAAD,CACI5E,KAAK,QACL6E,KAAK,QACLC,GAAG,QACHsH,UAAQ,KAIhB,kBAAC,cAAD,+BAGJ,kBAAC,WAAD,CAASxH,UAAU,IACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,SAAX,YACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,KAAD,CAAUA,UAAU,gBAG5B,kBAAC,WAAD,CACI5E,KAAK,QACL6E,KAAK,QACLC,GAAG,QACHsH,UAAQ,KAIhB,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAASxH,UAAU,QACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,YAAX,UACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,KAAD,CAAMA,UAAU,gBAGxB,kBAAC,WAAD,CACI5E,KAAK,OACL6E,KAAK,WACLC,GAAG,WACHsH,UAAQ,KAGhB,kBAAC,cAAD,+BAEJ,kBAACC,EAAA,EAAD,CAAWzH,UAAU,+BACjB,kBAAC0H,EAAA,EAAD,CAAQ1H,UAAU,+BAAlB,gBAarB6G,U,iDCnHPc,GAAoBC,YAApBD,gBACFhI,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYR,OAEY,kBAAC,IAAD,CAAiBY,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,cAEtB,kBAAC6H,GAAA,EAAD,CAAsB7H,UAAU,0BAChC,4BAAQA,UAAU,8CAAlB,UAChB,kBAAC8H,GAAA,EAAD,CACIC,cAAY,WACZC,IAAI,SACJhI,UAAU,wDAHd,YAIa,kBAAC,KAAD,OAEb,kBAACiI,GAAA,EAAD,CAAcC,OAAK,EAAClI,UAAU,+CAC1B,yBAAKA,UAAU,gCACf,kBAAC2H,GAAD,eAAiB3H,UAAU,YAAgBc,EAAMqH,UAAjD,eAEA,yBAAMnI,UAAU,gCAChB,kBAAC2H,GAAD,eAAiB3H,UAAU,YAAgBc,EAAMqH,UAAjD,eAEA,yBAAMnI,UAAU,gCAChB,kBAAC2H,GAAD,eAAiB3H,UAAU,YAAgBc,EAAMqH,UAAjD,qBAQQ,kBAAC,IAAD,iBACQrH,EAAMqB,UADd,CAEIC,UAAU,EAGVG,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,MAMjFyF,eAAe,yBAsDhCC,GA9CM,KAEjB,IAAMxF,EAAWC,cACbhB,EAAUiB,YAAaC,GAAUA,EAAMsF,WAAWC,YAEtD/G,QAAQC,IAAIK,GACZqB,oBAAU,KACNN,EAAS2F,iBAGV,IAyBH,OACI,kBAAC,IAAMzI,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QA3BnC,CACZ,CACItC,UAAW,OACXmB,KAAM,SAEV,CACInB,UAAW,MACXmB,KAAM,QAEV,CACInB,UAAW,SACXmB,KAAM,mBAEV,CACInB,UAAW,UACXmB,KAAM,cAEV,CACInB,UAAW,eACXmB,KAAM,kBCrIZpB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFW,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,eAI7B,kBAAC,IAAD,iBACQpB,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,GAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YA0ElG8F,GA7DG,KAEd,IAAM5F,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM0D,KAAKtB,MAC/CjC,oBAAU,KACNN,EAASqC,gBAGV,IA0CH,OACI,kBAAC,IAAMnF,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QA5CnC,CACZ,CACItC,UAAW,WACXmB,KAAM,SAEV,CACInB,UAAU,gBACVmB,KAAK,QAET,CACInB,UAAW,YACXmB,KAAM,eAEV,CACInB,UAAW,eACXmB,KAAM,UAEV,CACInB,UAAW,eACXmB,KAAM,cAEV,CACInB,UAAW,eACXmB,KAAM,YAEV,CACInB,UAAW,eACXmB,KAAM,aAEV,CACInB,UAAW,eACXmB,KAAM,kBAGV,CACInB,UAAW,aACXmB,KAAM,oBC/CH8H,GAtFH5H,IAAW,IAAD,EACcG,mBAAS,KADvB,mBACb0H,EADa,KACFC,EADE,KAGdC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM/I,SAAP,KACE,kBAACwG,EAAA,EAAD,CAAKvG,UAAU,cACL,kBAACwG,EAAA,EAAD,CAAKvE,GAAI,GACL,kBAAC8G,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,KAAMC,KAAM,MAAOC,QAAQ,OAIhD,kBAAC3C,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,cACtB,kBAAC0H,EAAA,EAAD,CAAQ0B,MAAM,WAAU,uBAAGpJ,UAAU,iBAArC,cAGV,kBAACqJ,EAAA,EAAD,CAAKC,MAAI,EAACtJ,UAAU,8DAClB,kBAACuJ,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,qBAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,aAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,oBAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,eAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,aACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,mBAQJ,kBAACa,EAAA,EAAD,CAAY1J,UAAU,kBAAkB2I,UAAWA,GACjD,kBAACgB,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,EAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,EAAD,OAED,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,UCrEFjC,GAAoBC,YAApBD,gBACFhI,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYR,OAEY,kBAAC,IAAD,CAAiBY,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,cAEtB,kBAAC6H,GAAA,EAAD,CAAsB7H,UAAU,0BAChC,4BAAQA,UAAU,8CAAlB,cAChB,kBAAC8H,GAAA,EAAD,CACIC,cAAY,WACZC,IAAI,SACJhI,UAAU,wDAHd,YAIa,kBAAC,KAAD,OAEb,kBAACiI,GAAA,EAAD,CAAcC,OAAK,EAAClI,UAAU,+CAC1B,yBAAKA,UAAU,gCACf,kBAAC,GAAD,eAAiBA,UAAU,YAAgBc,EAAMqH,UAAjD,eAEA,yBAAMnI,UAAU,gCAChB,kBAAC,GAAD,eAAiBA,UAAU,YAAgBc,EAAMqH,UAAjD,eAEA,yBAAMnI,UAAU,gCAChB,kBAAC,GAAD,eAAiBA,UAAU,YAAgBc,EAAMqH,UAAjD,qBAQQ,kBAAC,IAAD,iBACQrH,EAAMqB,UADd,CAEIC,UAAU,EAGVG,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,MAMjFyF,eAAe,yBA2EhCE,GAnEI,KAEf,IAAMzF,EAAWC,cACbhB,EAAUiB,YAAaC,GAAUA,EAAMsF,WAAWC,YAEtD/G,QAAQC,IAAIK,GACZqB,oBAAU,KACNN,EAAS2F,iBAGV,IAiCH,OACI,kBAAC,IAAMzI,SAAP,KACI,kBAACwG,EAAA,EAAD,CAAKvG,UAAU,mBACX,kBAACwG,EAAA,EAAD,CAAKvE,GAAI,GACL,kBAAC8G,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,aAAcC,KAAM,cAAeC,QAAQ,OAIhE,kBAAC3C,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,cACtB,kBAAC0H,EAAA,EAAD,CAAQ0B,MAAM,WAAU,uBAAGpJ,UAAU,iBAArC,cAIJ,kBAACuG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QAhDnC,CACZ,CACItC,UAAW,OACXmB,KAAM,SAEV,CACInB,UAAW,MACXmB,KAAM,OAEV,CACInB,UAAW,SACXmB,KAAM,WAEV,CACInB,UAAW,UACXmB,KAAM,YAEV,CACInB,UAAW,YACXmB,KAAM,cAEV,CACInB,UAAW,SACXmB,KAAM,UAEV,CACInB,UAAW,eACXmB,KAAM,wB,SC5IZpB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFW,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,gBAI1B,kBAAC,IAAD,iBACQc,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,GAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YAsDlGkH,GAzCU,KAErB,IAAMhH,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM8G,SAASzF,aACpD7C,QAAQC,IAAIK,GACXqB,oBAAU,KACNN,EAASsB,iBAGV,IAqBH,OACI,kBAAC,IAAMpE,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QAvBnC,CACZ,CACItC,UAAW,WACXmB,KAAM,mBAEV,CACInB,UAAU,SACVmB,KAAK,UAET,CACInB,UAAW,UACXmB,KAAM,WAEV,CACInB,UAAW,UACXmB,KAAM,kB,oBCrHZpB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,SACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFW,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAIf+J,EAAiBC,OAASC,OAAO,QAGvC,OAEY,kBAAC,IAAD,CAAiBtI,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACK,kBAACwG,EAAA,EAAD,CAAKvG,UAAU,QACZ,kBAACwG,EAAA,EAAD,CAAKvE,GAAI,GAAIjC,UAAU,8BACnB,4BAAK+J,EAAL,cAGR,kBAACxD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,gBAI1B,kBAAC,IAAD,iBACQc,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,GAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YAsDlGuH,GAzCS,KAEpB,IAAMrH,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM8G,SAAShF,eACnD3B,oBAAU,KACNN,EAAS+B,iBAGV,IAsBH,OACI,kBAAC,IAAM7E,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QAxBnC,CACZ,CACItC,UAAW,gBACXmB,KAAM,SAEV,CACInB,UAAU,aACVmB,KAAK,UAET,CACInB,UAAW,QACXmB,KAAM,cAEV,CACInB,UAAW,gBACXmB,KAAM,oBC3HZpB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAKFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFW,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACK,kBAACwG,EAAA,EAAD,CAAKvG,UAAU,QACZ,kBAACwG,EAAA,EAAD,CAAKvE,GAAI,GAAIjC,UAAU,8BACnB,6CAGR,kBAACuG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,gBAI1B,kBAAC,IAAD,iBACQc,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,GAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YAsDlGwH,GAzCI,KAEf,IAAMtH,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM8G,SAASnF,YACnDxB,oBAAU,KACNN,EAAS4B,iBAGV,IAsBH,OACI,kBAAC,IAAM1E,SAAP,KACI,kBAACwG,EAAA,EAAD,CAAKvG,UAAU,YACX,kBAACwG,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QAxBnC,CACZ,CACItC,UAAW,gBACXmB,KAAM,SAEV,CACInB,UAAU,aACVmB,KAAK,UAET,CACInB,UAAW,QACXmB,KAAM,cAEV,CACInB,UAAW,gBACXmB,KAAM,oBCvHZpB,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAaFW,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UALjB,oBASJ,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACK,kBAACwG,EAAA,EAAD,KACG,kBAACC,EAAA,EAAD,CAAKvE,GAAI,GAAIjC,UAAU,8BACnB,mDAGR,kBAACuG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,gBAI1B,kBAAC,IAAD,iBACQc,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,GAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YA2DlGuH,GA9CS,KAEpB,IAAMrH,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM8G,SAAStF,iBACnDrB,oBAAU,KACNN,EAASyB,iBAGV,IA2BH,OACI,kBAAC,IAAMvE,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QA7BnC,CACZ,CACItC,UAAW,gBACXmB,KAAM,SAEV,CACInB,UAAU,cACVmB,KAAK,gBAET,CACInB,UAAW,WACXmB,KAAM,YAEV,CACInB,UAAW,OACXmB,KAAM,QAEV,CACInB,UAAW,YACXmB,KAAM,kBChHHwJ,GAfM,IAGb,kBAAC,IAAMrK,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC6D,GAAD,S,+DC2GLC,GAjHD,IA2FN,kBAAC,IAAMvK,SAAP,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKkC,GAAI,GAAIjC,UAAU,8BACnB,6CAGT,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAKuK,GAAI,GAAIvK,UAAU,cAClB,4BAAQA,UAAU,mBAAlB,WACA,4BAAQA,UAAU,0BAAlB,WAGJ,kBAAC,KAAD,CACIJ,QAvGgB,CAC5B4K,MAAO,CACHC,OAAQ,IACRrP,KAAM,OACNsP,KAAM,CACFC,SAAS,GAEbC,QAAS,CACLC,MAAM,IAGdC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfK,WAAY,CACRP,SAAS,GAEbQ,OAAQ,CACJC,MAAO,CAAC,EAAG,GACXC,MAAO,UAEX3H,MAAO,CACH9C,KAAM,0BACN0K,MAAO,OACPC,MAAO,CACHC,SAAU,SAGlBC,KAAM,CACFnK,IAAK,CACDwJ,OAAQ,CAAC,cAAe,eACxBY,QAAS,IAEbC,YAAa,WAEjBC,QAAS,CACLL,MAAO,WACPM,KAAM,GAEVC,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvDrI,MAAO,CACH9C,KAAM,qCAGdoL,MAAO,CACHtI,MAAO,CACH9C,KAAM,eAEVqL,IAAK,EACLC,IAAK,IAETC,OAAQ,CACJC,SAAU,MACVC,gBAAiB,QACjBC,UAAU,EACVC,SAAU,GACVC,SAAU,GAEdC,WAAY,CACR,CACIC,WAAY,IACZ9M,QAAS,CACL4K,MAAO,CACHI,QAAS,CACLC,MAAM,IAGdsB,OAAQ,CACJtB,MAAM,OAiCV8B,OA1BoB,CAChC,CACI1M,KAAM,cACN4B,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnC,CACI5B,KAAM,aACN4B,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAoBvBzG,KAAK,OACL4E,UAAU,iBCtGxBR,GAAgB,CAClB,CACIC,UAAW,KACXC,MAAO,QAITC,GAAsB,EAAGC,UAASC,kBAAiBC,yBACrD,kBAAC,IAAMC,SAAP,KACI,2BAAOC,UAAU,iBAAjB,QACA,kBAACsG,EAAA,EAAD,CACIlL,KAAK,SACL6E,KAAK,SACLC,GAAG,aACHF,UAAU,gDACVG,aAAcN,EACdO,SAAWC,GAAMP,EAAoBO,EAAEC,OAAOC,QAC7CX,EAAQY,IAAI,CAACC,EAAQC,IACX,4BAAQC,IAAKD,GAAMD,EAAOG,QAGzC,2BAAOZ,UAAU,iBAAjB,UAIFa,GAAmBC,IAAW,IACxBC,EAAcC,SAAdD,UAYFW,EAAmB,IACrB,yBAAK1B,UAAU,WACb,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACf,yBAAKA,UAAU,WAGrB,OAEY,kBAAC,IAAD,CAAiB2B,YAAU,EAACC,SAAS,aAAaC,KAAMf,EAAMgB,QAASC,QAASjB,EAAMiB,QAASC,QAAM,GAC/FlB,GACE,kBAAC,IAAMf,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,IAClB,kBAACe,EAAcD,EAAMoB,cAEzB,kBAACsE,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,gBAwB1B,kBAAC,IAAD,iBACQc,EAAMqB,UADd,CAEIC,UAAU,EACV5C,cAAeA,GAEf8C,iBAAmB,IAAM,kBAACZ,EAAD,MACzBa,WACIC,IACI,CACIC,YAAa,GACb9C,oBAAqBA,GACrB+C,gBAAiB,CACb,CAAE9B,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,KAAML,MAAO,IACrB,CAAEK,KAAM,QAASL,MAASO,EAAMgB,QAAUhB,EAAMgB,QAAQa,OAAS,YAiDlGiK,GApCK,KAEhB,IAAM/J,EAAWC,cACdhB,EAAUiB,YAAaC,GAAUA,EAAM8G,SAAS7E,aACnD9B,oBAAU,KACNN,EAASkC,iBAGV,IAiBH,OACI,kBAAC,IAAMhF,SAAP,KACI,kBAACwG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,GAAD,CAAiB1E,QAASA,EAASC,QAnBnC,CACZ,CACItC,UAAW,OACXmB,KAAM,SAEV,CACInB,UAAU,WACVmB,KAAK,YAET,CACInB,UAAW,eACXmB,KAAM,wB,8BCjIlB,MAAMiM,WAAqB/F,YAEvBC,SACI,OACI,kBAAC,IAAMhH,SAAP,KACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,wBACX,kBAAC,UAAD,CAAQgH,cAAeC,KAAKC,kBAAmBlH,UAAU,gCAEzD,wBAAIA,UAAU,+BAAd,oBACI,kBAAC,WAAD,CAASA,UAAU,IACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,YAAX,kBACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,IAAD,CAAMA,UAAU,gBAGxB,kBAAC,WAAD,CACI5E,KAAK,OACL6E,KAAK,WACLC,GAAG,WACHsH,UAAQ,KAIhB,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAASxH,UAAU,IACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,SAAX,mBACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,KAAD,CAAMA,UAAU,gBAGxB,kBAAC,WAAD,CACI5E,KAAK,QACL6E,KAAK,QACLC,GAAG,QACHsH,UAAQ,KAIhB,kBAAC,cAAD,+BAGJ,kBAAC,WAAD,CAASxH,UAAU,QACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,YAAX,oBACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,KAAD,CAAOA,UAAU,gBAGzB,kBAAC,WAAD,CACI5E,KAAK,OACL6E,KAAK,WACLC,GAAG,WACHsH,UAAQ,KAGhB,kBAAC,cAAD,+BAEJ,kBAAC,WAAD,CAASxH,UAAU,QACf,kBAACmH,EAAA,EAAD,CAAOC,IAAI,YAAX,mBACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAiBC,UAAU,WACvB,0BAAMvH,UAAU,oBACZ,kBAAC,KAAD,CAAOA,UAAU,gBAGzB,kBAAC,WAAD,CACI5E,KAAK,OACL6E,KAAK,WACLC,GAAG,WACHsH,UAAQ,KAGhB,kBAAC,cAAD,+BAEJ,kBAACC,EAAA,EAAD,CAAWzH,UAAU,+BACjB,kBAAC0H,EAAA,EAAD,CAAQ1H,UAAU,+BAAlB,iBAarB6M,UCbAnG,GAtFD5F,IAAW,IAAD,EACYG,mBAAS,KADrB,mBACf0H,EADe,KACJC,EADI,KAGhBC,EAASC,IACVH,IAAcG,GAAKF,EAAaE,IAGrC,OACE,kBAAC,IAAM/I,SAAP,KACE,kBAACwG,EAAA,EAAD,CAAKvG,UAAU,cACL,kBAACwG,EAAA,EAAD,CAAKvE,GAAI,GACL,kBAAC8G,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,WAAYC,KAAM,YAAaC,QAAQ,OAI5D,kBAAC3C,EAAA,EAAD,CAAKvE,GAAI,EAAGjC,UAAU,cACtB,kBAAC0H,EAAA,EAAD,CAAQ0B,MAAM,WAAU,uBAAGpJ,UAAU,iBAArC,cAGV,kBAACqJ,EAAA,EAAD,CAAKC,MAAI,EAACtJ,UAAU,uDAClB,kBAACuJ,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,wBAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,iBAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,UAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,iBAOF,kBAACU,EAAA,EAAD,CAASvJ,UAAU,YACjB,kBAACwJ,EAAA,EAAD,CACExJ,UAAWyJ,IAAW,CAAEN,OAAsB,MAAdR,IAChClF,QAAS,KAAQoF,EAAO,OAF1B,mBAQJ,kBAACa,EAAA,EAAD,CAAY1J,UAAU,kBAAkB2I,UAAWA,GACjD,kBAACgB,EAAA,EAAD,CAASC,MAAM,KAEV,kBAAC,GAAD,OAEL,kBAACD,EAAA,EAAD,CAASC,MAAM,KACd,kBAAC,GAAD,OAED,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,OAEF,kBAACD,EAAA,EAAD,CAASC,MAAM,KACb,kBAAC,GAAD,U,UC5EJkD,GAAQC,IAAMC,KAAK,IAAM,+BACzBC,GAASF,IAAMC,KAAK,IAAM,gCAC1BE,GAAWH,IAAMC,KAAK,IAAM,+BAC5BG,GAAiBJ,IAAMC,KAAK,IAAM,gCAClCI,GAAUL,IAAMC,KAAK,IAAM,gCAI3BK,GAAWN,IAAMC,KAAK,IAAK,gCAE3BM,GAAcP,IAAMC,KAAK,IAAI,gCAG7BO,GAAaR,IAAMC,KAAK,IAAI,uDAE5BtG,GAAMqG,IAAMC,KAAK,IAAI,gCAErBQ,GAAUT,IAAMC,KAAK,IAAK,gCAG1BS,GAAgB,IAAD,IAAc3G,EAAd,EAAG4G,UAAsBC,EAAzB,EAAyBA,MAAUC,EAAnC,4CACjB,kBAAC,IAAD,iBACQA,EADR,CAEI7G,OAAQjG,IACJ,IAAK+M,cAED,OAAO,kBAAC,IAAD,CAAUC,GAAI,CAAEC,SAAU,iBAAkB/K,MAAO,CAAEgL,KAAMlN,EAAMmN,aAG5E,IAAMC,EAAeC,cAErB,OAAIR,IAA+C,IAAtCA,EAAMS,QAAQF,EAAa3S,MAE7B,kBAAC,IAAD,CAAUuS,GAAI,CAAEC,SAAU,OAI9B,kBAACjH,EAAchG,QAM5BuN,GAAY,CACdnF,KAAM,IACNoF,OAAO,EACPZ,UAAW,IAAM,kBAAC,IAAD,CAAUI,GAAG,eAC9BS,MAAOd,IAGLe,GAAkB,CACpBtF,KAAM,aACNjJ,KAAM,YACNwO,KAAMC,IACNhB,UAAWL,GACXM,MAAO,CAAC,SACRY,MAAOd,IAGLkB,GAAmB,CACrBzF,KAAM,cACNjJ,KAAM,cACNyN,UAAWH,GACXgB,MAAOd,IAGLmB,GAAY,CACd1F,KAAM,QACNjJ,KAAM,OACNyN,UAAWhH,GACX6H,MAAOd,IAGLoB,GAAkB,CACpB3F,KAAM,cACNjJ,KAAM,aACNyN,UAAWpF,GACXiG,MAAOd,IAGLqB,GAAiB,CACnB5F,KAAM,YACNjJ,KAAM,WACNwO,KAAMC,IACNhB,UAAW5D,GACX6D,MAAO,CAAC,SACRY,MAAOd,IAGLsB,GAAW,CACb7F,KAAM,MACNjJ,KAAM,KACNwO,KAAMC,IACNhB,UAAWhF,GACXiF,MAAO,CAAC,SACRY,MAAOd,IAILuB,GAAe,CACjB9F,KAAM,eACNjJ,KAAM,SACNwO,KAAMC,IACNhB,UAAWF,GACXe,MAAOd,GACPE,MAAO,CAAC,UAGNsB,GAAgB,CAClB/F,KAAM,YACNjJ,KAAM,YACNyN,UAAW9K,KACX2L,MAAOd,IAGLyB,GAAwB,CAC1BhG,KAAM,mBACNjJ,KAAM,oBACNwO,KAAMC,IACNhB,UAAWJ,GACXiB,MAAOd,GACPE,MAAO,CAAC,UAGNwB,GAAe,CACjBjG,KAAM,UACNjJ,KAAM,SACNwO,KAAMC,IACNhB,UAAWJ,GACXiB,MAAOd,GACPE,MAAO,CAAC,UAGNyB,GAAgB,CAClBlG,KAAM,WACNjJ,KAAM,QACNwO,KAAMC,IACNhB,UAAWJ,GACXiB,MAAOd,GACPE,MAAO,CAAC,UAGN0B,GAAa,CACfnG,KAAM,QACNjJ,KAAM,OACNwO,KAAMC,IACNhB,UAAWJ,GACXiB,MAAOd,GACPE,MAAO,CAAC,UAGN2B,GAAW,CACbpG,KAAM,MACNjJ,KAAM,KACNwO,KAAMC,IACNhB,UAAWJ,GACXiB,MAAOd,GACPE,MAAO,CAAC,UAIN4B,GAAa,CACfrG,KAAM,WACNjJ,KAAM,OACNuP,SAAU,CACN,CACItG,KAAM,iBACNjJ,KAAM,QACNyN,UAAWZ,GACXyB,MAAOkB,KAEX,CACIvG,KAAM,kBACNjJ,KAAM,SACNyN,UAAWT,GACXsB,MAAOkB,KAEX,CACIvG,KAAM,oBACNjJ,KAAM,WACNyN,UAAWR,GACXqB,MAAOkB,KAEX,CACIvG,KAAM,mBACNjJ,KAAM,UACNyN,UAAWN,GACXmB,MAAOkB,KAEX,CACIvG,KAAM,2BACNjJ,KAAM,kBACNyN,UAAWP,GACXoB,MAAOkB,OAMbC,GAAgBC,IAClB,IAAIC,EAAa,GAUjB,OARAD,EAASA,GAAU,IACZE,QAAQC,IACXF,EAAWG,KAAKD,GAEa,qBAAlBA,EAAKN,WACZI,EAAa,IAAIA,KAAeF,GAAcI,EAAKN,cAGpDI,GAsBLI,GAAsB,CAACxB,GAAiBM,GAAgBC,GAAUC,GAAcE,GAAsBC,GAAaC,GAAcC,GAAWC,IAC5IW,GAAmBP,GAnBP,CACdH,GACAlB,GACAG,GACAM,GACAC,GACAC,GACAE,GACAC,GACAC,GACAC,GACAC,GACAX,GACAE,GACAD,GACAK,KCrOEiB,GAAU,IAAM,8BAGhBC,GAAaC,IAAS,CACxBC,OAAQ,IAAM,+BACdtJ,OAAOuJ,EAAQxP,GACX,IAAIgG,EAAYwJ,EAAOC,QACvB,OAAO,kBAACzJ,EAAchG,IAE1BoP,aAGEM,GAAiBJ,IAAS,CAC5BC,OAAQ,IAAM,+BACdtJ,OAAOuJ,EAAQxP,GACX,IAAIgG,EAAYwJ,EAAOC,QACvB,OAAO,kBAACzJ,EAAchG,IAE1BoP,aAGEO,GAAmBL,IAAS,CAC9BC,OAAQ,IAAM,+BACdtJ,OAAOuJ,EAAQxP,GACX,IAAIgG,EAAYwJ,EAAOC,QACvB,OAAO,kBAACzJ,EAAchG,IAE1BoP,aAGJ,MAAMQ,WAAe5J,YAAW,eAAD,oBAG3B6J,UAAY,KACR,IAAK9C,cAAuB,OAAOsC,GAEnC,IAAIS,EAAYJ,GAEhB,OAAQvJ,KAAKnG,MAAM+P,OAAOC,YACtB,KAAKC,IACDH,EAAYH,GACZ,MACJ,QACIG,EAAYJ,GAGpB,OAAOI,GAGX7J,SACI,IAAMiK,EAAS/J,KAAK0J,YAGpB,OAAO,kBAAC,IAAD,KACH,kBAACK,EAAW/J,KAAKnG,MACb,kBAAC,IAAD,KACK6O,GAAOnP,IAAI,CAAC+N,EAAO0C,IAEX1C,EAAMiB,SAOD,KANF,kBAACjB,EAAMA,MAAP,CACI5N,IAAKsQ,EACL/H,KAAMqF,EAAMrF,KACZyE,MAAOY,EAAMZ,MACbW,MAAOC,EAAMD,MACbZ,UAAWa,EAAMb,iBAUrD,IAOewD,eAPSlO,IACb,CACH6N,OAAQ7N,EAAMgO,OACdG,KAAMnO,EAAMoO,KAAKD,OAMrB,KAFWD,CAGbR,I,QC/FK,WACH,IAAIxN,EAAQ,CAAC,CAAEhD,GAAI,EAAGmR,SAAU,OAAQC,SAAU,OAAQC,UAAW,OAAQC,SAAU,OAAQjW,KAAM,UACjGkW,EAAYC,OAAOC,MACvBD,OAAOC,MAAQ,SAASC,EAAKC,GACzB,OAAO,IAAIC,QAAQ,CAACC,EAASC,KAEzBC,WAAW,KAEP,GAAIL,EAAIM,SAAS,wBAA0C,SAAhBL,EAAKM,OAAhD,CAEI,IAAIC,EAASC,KAAKC,MAAMT,EAAKU,MAGzBC,EAAgBtP,EAAMuP,OAAOtB,GACtBA,EAAKE,WAAae,EAAOf,UAAYF,EAAKG,WAAac,EAAOd,UAGzE,GAAIkB,EAAc7P,OAAQ,CAEtB,IAAIwO,EAAOqB,EAAc,GACrBE,EAAe,CACfxS,GAAIiR,EAAKjR,GACTmR,SAAUF,EAAKE,SACfE,UAAWJ,EAAKI,UAChBC,SAAUL,EAAKK,SACfjW,KAAM,QACNoX,MACI,+VAERZ,EAAQ,CAAEa,IAAI,EAAMC,KAAM,IAAMH,SAGhCV,EAAO,0CAMf,GAAIJ,EAAIM,SAAS,oBAAsC,SAAhBL,EAAKM,OAA5C,CAEI,IAAIC,EAASC,KAAKC,MAAMT,EAAKU,MAF8B,EAK7BH,EAAOU,SAASC,MAAM,KAA9CxB,EALqD,EAKrDA,UAAWC,EAL0C,EAK1CA,SACbwB,EAAU,CACV9S,GAAIgD,EAAMP,OAAS,EACnB0O,SAAUE,EACVD,SAAUc,EAAOd,SACjBC,UAAWA,EACXC,SAAUA,EACVjW,KAAM,SAEV2H,EAAM6M,KAAK,CAAEiD,YAEb,IAAIN,EAAe,CACfxS,GAAI8S,EAAQ9S,GACZmR,SAAU2B,EAAQ3B,SAClBE,UAAWyB,EAAQzB,UACnBC,SAAUwB,EAAQxB,SAClBjW,KAAMyX,EAAQzX,KACdoX,MACI,+VAERZ,EAAQ,CAAEa,IAAI,EAAMC,KAAM,IAAMH,SAKpC,GAAId,EAAIM,SAAS,0BAA4C,SAAhBL,EAAKM,OAAlD,CAEI,IAAIC,EAASC,KAAKC,MAAMT,EAAKU,MAO7B,GAJoBrP,EAAMuP,OAAOtB,GACtBA,EAAKE,WAAae,EAAOf,UAGlB1O,OAAQ,CACtB,IAAI+P,EAAe,CACfO,QAAS,qEAEblB,EAAQ,CAAEa,IAAI,EAAMC,KAAM,IAAMH,SAGhCV,EAAO,2EAMXJ,EAAIM,SAAS,WAA6B,QAAhBL,EAAKM,OAG3BN,EAAKqB,SAED,uWADJrB,EAAKqB,QAAQC,cAGbpB,EAAQ,CAAEa,IAAI,EAAMC,KAAM,IAAM3P,IAGhC8O,EAAO,gBAOfP,EAAUG,EAAKC,GAAMuB,KAAKC,GAAYtB,EAAQsB,KAC/C,QCzFfC,GAKA,MAAMC,WAAYzM,YAChBC,SACE,OAAO,kBAAC,GAAD,OAIIwM,UClBKC,QACW,cAA7B9B,OAAOzD,SAASwF,UAEe,UAA7B/B,OAAOzD,SAASwF,UAEhB/B,OAAOzD,SAASwF,SAASC,MACvB,2D,wCCLAC,GAAa,CACf7C,WAAYC,IACZ6C,YAAa7C,IACb8C,iBAAkB9C,IAClB+C,gBAAiB/C,IACjBgD,kBAAkB,GA8CP/C,GA1CA,CAAChO,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAK6D,KACD,OAAO,6BACA+D,GADP,IAEI8N,WAAYkD,EAAOvY,UAE3B,KAAKyD,KACD,OAAO,6BACA8D,GADP,IAEI4Q,YAAaI,EAAOvY,UAE5B,KAAK0D,KACD,OAAO,6BACA6D,GADP,IAEI6Q,iBAAkBG,EAAOvY,UAEjC,KAAK2D,KACD,OAAO,6BACA4D,GADP,IAEI8Q,gBAAiBE,EAAOvY,UAEhC,KAAK4D,KACD,OAAO,6BACA2D,GADP,IAEI+Q,kBAAmB/Q,EAAM+Q,mBAEjC,KAAKzU,KACD,OAAO,6BACA0D,GADP,IAEI+Q,kBAAkB,IAE1B,KAAKxU,KACD,OAAO,6BACAyD,GADP,IAEI+Q,kBAAkB,IAE1B,QACI,OAAO/Q,I,SC5Cb2Q,GAAa,CACfxC,KAAMhD,cACN+B,SAAS,GA+BEkB,GA3BF,CAACpO,EAAQ2Q,GAAYK,KAC9B,OAAQA,EAAO5Y,MACX,KAAKmD,KACD,OAAO,6BAAKyE,GAAZ,IAAmBkN,SAAS,IAChC,KAAK1R,KACD,OAAO,6BAAKwE,GAAZ,IAAmBmO,KAAM6C,EAAOvY,QAASyU,SAAS,EAAO+D,MAAO,OACpE,KAAKxV,KACD,OAAO,6BAAKuE,GAAZ,IAAmBiR,MAAOD,EAAOvY,QAASyU,SAAS,IACvD,KAAKxR,KACD,OAAO,6BAAKsE,GAAZ,IAAmBkN,SAAS,IAChC,KAAKvR,KACD,OAAO,6BAAKqE,GAAZ,IAAmBmO,KAAM6C,EAAOvY,QAASyU,SAAS,EAAO+D,MAAO,OACpE,KAAKrV,KACD,OAAO,6BAAKoE,GAAZ,IAAmBiR,MAAOD,EAAOvY,QAASyU,SAAS,IACvD,KAAKrR,KACD,OAAO,6BAAKmE,GAAZ,IAAmBmO,KAAM,OAC7B,KAAKrS,KACD,OAAO,6BAAKkE,GAAZ,IAAmBkN,SAAS,IAChC,KAAKnR,KACD,OAAO,6BAAKiE,GAAZ,IAAmBkR,oBAAqBF,EAAOvY,QAASyU,SAAS,EAAO+D,MAAO,OACnF,KAAKjV,KACD,OAAO,6BAAKgE,GAAZ,IAAmBiR,MAAOD,EAAOvY,QAASyU,SAAS,IACvD,QACI,OAAO,gBAAKlN,K,SCrBTmR,GAfC,CAACnR,EAAQ,GAAIgR,KACzB,OAAQA,EAAO5Y,MACX,KAAKsB,KACD,OAAOsX,EAAOvY,QAClB,KAAKoB,KACD,OAAO,6BAAKmG,GAAUgR,EAAOvY,SACjC,KAAKsB,KACD,OAAO,gBAAKiG,GAChB,KAAK9F,KACD,OAAO,6BAAK8F,GAAUgR,EAAOvY,SACjC,QACI,OAAOuH,I,SClBb2Q,GAAa,CACfzQ,MAAO,GACPiO,KAAK,GACLjB,SAAQ,EACR+D,MAAM,I,SCDJN,GAAa,CACfS,aAAc,GACdC,YAAY,GACZC,YAAa,GACbpE,SAAQ,EACRqE,IAAI,I,SCRFZ,GAAa,CACf9X,QAAS,GACTqU,SAAQ,G,SCHNyD,GAAa,CACfzX,WAAY,GACZgU,SAAQ,G,SCDNyD,GAAa,CACfpL,WAAY,GACZ2H,SAAQ,G,SCSNyD,GAAa,CACfvO,KAAM,GACNG,MAAO,GACPG,aAAa,GACbG,SAAS,GACTG,OAAO,GACPkK,SAAS,G,SCNPyD,GAAa,CACftP,YAAa,GACbG,gBAAiB,GACjBG,WAAW,GACXG,cAAc,GACdG,YAAY,GACZiL,SAAS,G,SCjBPyD,GAAa,CACfpX,MAAO,GACP2T,SAAQ,G,SCFNyD,GAAa,CACfpY,KAAM,GACN2U,SAAQ,GCWGsE,gBAAgB,CAC3BpD,QACA+C,WACAnD,UACA/N,MTVU,CAAED,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAK6K,KACD,oCACOjD,GADP,IAGIkN,SAAQ,IAEhB,KAAMhK,KACF,oCACOlD,GADP,IAEIE,MAAO8Q,EAAOvY,QACdyU,SAAQ,IAEZ,KAAM9J,KACN,oCACOpD,GADP,IAEImO,KAAM6C,EAAOvY,QACbyU,SAAQ,IAEZ,KAAK7J,KACD,oCACOrD,GADP,IAEIiR,MAAOD,EAAOvY,UAE1B,QACI,OAAOuH,ISffyR,aRPU,CAAEzR,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAKuI,KACD,oCACOX,GADP,IAEIkN,SAAQ,IAEhB,KAAMtM,KACF,oCACOZ,GADP,IAEIoR,aAAcJ,EAAOvY,QACrByU,SAAQ,IAEZ,KAAKrM,KACL,oCACOb,GADP,IAEIkN,SAAQ,IAEhB,KAAMpM,KACF,oCACOd,GADP,IAEIqR,YAAaL,EAAOvY,QACpByU,SAAQ,IAEZ,KAAKnM,KACL,oCACOf,GADP,IAGIkN,SAAQ,IAEhB,KAAMlM,KACF,oCACOhB,GADP,IAEIsR,YAAaN,EAAOvY,QACpByU,SAAQ,IAEZ,KAAKjM,KACD,oCACOjB,GADP,IAEI0R,OAAO,IAEf,KAAKxQ,KACD,oCACOlB,GADP,IAEIsR,YAAa,KACbI,OAAO,IAEnB,QACI,OAAO1R,IQxCf2R,OPdU,CAAE3R,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAKO,KACD,oCACOqH,GADP,IAGIkN,SAAQ,IAEhB,KAAMpU,KACF,oCACOkH,GADP,IAEInH,QAASmY,EAAOvY,QAChByU,SAAQ,IAEhB,QACI,OAAOlN,IOAf4R,UNhBU,CAAE5R,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAKY,KACD,oCACOgH,GADP,IAGIkN,SAAQ,IAEhB,KAAM/T,KACF,oCACO6G,GADP,IAEI9G,WAAY8X,EAAOvY,QACnByU,SAAQ,IAEhB,QACI,OAAOlN,IMEfsF,WLhBU,CAAEtF,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAKyZ,KACD,oCACO7R,GADP,IAGIkN,SAAQ,IAEhB,KAAM4E,KACF,oCACO9R,GADP,IAEIuF,WAAYyL,EAAOvY,QACnByU,SAAQ,IAEhB,QACI,OAAOlN,IKEf0D,KJFW,CAAC1D,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAK+B,KACD,OAAO,6BACA6F,GADP,IAGIkN,SAAS,IAEjB,KAAK9S,KACD,OAAO,6BACA4F,GADP,IAEIoC,KAAM4O,EAAOvY,QACbyU,SAAS,IAEjB,KAAK7S,KACD,OAAO,6BACA2F,GADP,IAGIkN,SAAS,IAEjB,KAAK5S,KACD,OAAO,6BACA0F,GADP,IAEIuC,MAAOyO,EAAOvY,QACdyU,SAAS,IAEb,KAAK3S,KACD,OAAO,6BACAyF,GADP,IAGIkN,SAAS,IAEjB,KAAK1S,KACD,OAAO,6BACAwF,GADP,IAEI0C,aAAcsO,EAAOvY,QACrByU,SAAS,IAEb,KAAKzS,KACD,OAAO,6BACAuF,GADP,IAGIkN,SAAS,IAEjB,KAAKxS,KACD,OAAO,6BACAsF,GADP,IAEI6C,SAAUmO,EAAOvY,QACjByU,SAAS,IAEb,KAAKvS,KACD,OAAO,6BACAqF,GADP,IAGIkN,SAAS,IAEjB,KAAKtS,KACD,OAAO,6BACAoF,GADP,IAEIgD,OAAQgO,EAAOvY,QACfyU,SAAS,IAE7B,QACI,OAAOlN,II5Df8G,SHHW,CAAC9G,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAKyC,KACD,OAAO,6BACAmF,GADP,IAEIkN,SAAS,IAEjB,KAAKpS,KACD,OAAO,6BACAkF,GADP,IAEIqB,YAAa2P,EAAOvY,QACpByU,SAAS,IAEjB,KAAKnS,KACD,OAAO,6BACAiF,GADP,IAEIkN,SAAS,IAEjB,KAAKlS,KACD,OAAO,6BACAgF,GADP,IAEIwB,gBAAiBwP,EAAOvY,QACxByU,SAAS,IAEb,KAAKjS,KACL,OAAO,6BACA+E,GADP,IAEIkN,SAAS,IAEjB,KAAKhS,KACD,OAAO,6BACA8E,GADP,IAEI2B,WAAYqP,EAAOvY,QACnByU,SAAS,IAEb,KAAK/R,KACD,OAAO,6BACA6E,GADP,IAEIkN,SAAS,IAEjB,KAAK9R,KACD,OAAO,6BACA4E,GADP,IAEI8B,cAAekP,EAAOvY,QACtByU,SAAS,IAEb,KAAK7R,KACL,OAAO,6BACA2E,GADP,IAEIkN,SAAS,IAEjB,KAAK5R,KACD,OAAO,6BACA0E,GADP,IAEIiC,YAAa+O,EAAOvY,QACpByU,SAAS,IAErB,QACI,OAAOlN,IGtDf+R,MFnBU,CAAE/R,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAKiB,KACD,oCACO2G,GADP,IAGIkN,SAAQ,IAEhB,KAAM1T,KACF,oCACOwG,GADP,IAEIzG,MAAOyX,EAAOvY,QACdyU,SAAQ,IAEhB,QACI,OAAOlN,IEKfgS,KDpBU,CAAEhS,EAAQ2Q,GAAYK,KAChC,OAAQA,EAAO5Y,MACX,KAAKC,KACD,oCACO2H,GADP,IAGIkN,SAAQ,IAEhB,KAAM1U,KACF,oCACOwH,GADP,IAEIzH,KAAMyY,EAAOvY,QACbyU,SAAQ,IAEhB,QACI,OAAOlN,M,qCEjBbiS,GAAY,CAACrD,EAAKhS,EAAU,KACvB+R,MAAMC,EAAKhS,GACbwT,KAAKC,IACF,GAAyB,OAApBA,EAAS6B,OACV,MAAM7B,EAASR,OAEnB,OAAOQ,EAASR,SAEnBO,KAAKP,GACKA,GAEVsC,MAAMlB,IACH,MAAMA,I,sBCaRmB,I,aAiCAC,I,aAYAC,I,aA6BAC,I,aA0BOC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIPC,IA7HJC,GAAa1E,IACf,IAAI2E,EAAU,IAAIC,KACd5E,EAAM2E,EAAQE,IAAI,OAAQ3D,KAAK4D,UAAU9E,GAAO,CAAEjI,KAAM,MACvD4M,EAAQI,OAAO,OAAQ,CAAEhN,KAAM,OAMxC,SAAUkM,IAAQ3Z,SAAS,SAAE4V,EAAF,SAAYC,KAAvC,4EAQyB,OAPf1R,EAAU,CACZ2S,KAAMF,KAAK4D,UAAU,CAAE5E,WAAUC,aACjCa,OAAQ,OACRe,QAAS,CAAE,eAAgB,qBAJnC,kBAQ+BiD,aAAKlB,GAAW,sBAAuBrV,GARtE,OAWQ,OAHMyT,EARd,OASQwC,GAAWxC,GACX7R,QAAQC,IAAI,WAVpB,SAWc2U,aAAIC,aAAiBhD,IAXnC,8DAcgB,KAAM6B,OAdtB,OAeiB,MAfjB,QAkBiB,MAlBjB,gCAgBgBjC,EAAU,wBAhB1B,oCAmBgBA,EAAU,sBAnB1B,6BAsBgBA,EAAO,KAtBvB,QAwBQ,OAxBR,UAwBcmD,aAAIE,aAAgBrD,IAxBlC,QAyBQ4C,GAAW,MAzBnB,uDAiCA,SAAUR,IAAS5Z,SAAS,QAAE8a,KAA9B,kEAGQ,OAHR,SAEQV,GAAW,MAFnB,SAGcM,aAAK,KACPI,EAAQxG,KAAK,oBAJzB,2GAYA,SAAUuF,IAAW7Z,SAAS,SAAEqX,EAAF,MAAY0D,EAAZ,SAAmBlF,KAAjD,4EAQyB,OAPf1R,EAAU,CACZ2S,KAAMF,KAAK4D,UAAU,CAAEnD,WAAU0D,QAAOlF,aACxCa,OAAQ,OACRe,QAAS,CAAE,eAAgB,qBAJnC,kBAQ+BiD,aAAKlB,GAAW,kBAAmBrV,GARlE,OASQ,OADMyT,EARd,gBASc+C,aAAIK,aAAoBpD,IATtC,4DAYgB,KAAM6B,OAZtB,OAaiB,MAbjB,QAgBiB,MAhBjB,gCAcgBjC,EAAU,wBAd1B,oCAiBgBA,EAAU,sBAjB1B,6BAoBgBA,EAAO,KApBvB,QAsBQ,OAtBR,UAsBcmD,aAAIM,aAAmBzD,IAtBrC,sDA6BA,SAAUsC,IAAiB9Z,SAAS,SAAE4V,KAAtC,4EAQyB,OAPfzR,EAAU,CACZ2S,KAAMF,KAAK4D,UAAU,CAAE5E,aACvBc,OAAQ,OACRe,QAAS,CAAE,eAAgB,qBAJnC,kBAQ+BiD,aAAKlB,GAAW,wBAAyBrV,GARxE,OASQ,OADMyT,EARd,gBASc+C,aAAIO,aAAsBtD,EAASJ,UATjD,4DAYgB,KAAMiC,OAZtB,OAaiB,MAbjB,QAgBiB,MAhBjB,gCAcgBjC,EAAU,wBAd1B,oCAiBgBA,EAAU,sBAjB1B,6BAoBgBA,EAAO,KApBvB,QAsBQ,OAtBR,UAsBcmD,aAAIQ,aAAqB3D,IAtBvC,sDA0BO,SAAUuC,KAAV,kEACH,OADG,SACGqB,aAAUtY,KAAY6W,IADzB,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGoB,aAAUhY,KAAawW,IAD1B,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGmB,aAAUnY,KAAe4W,IAD5B,wCAIA,SAAUK,KAAV,kEACH,OADG,SACGkB,aAAU/X,KAAiByW,IAD9B,wCAIP,SAAUK,KAAV,kEACI,OADJ,SACUkB,aAAI,CAACC,aAAKvB,IAAiBuB,aAAKtB,IAAkBsB,aAAKrB,IAAoBqB,aAAKpB,MAD1F,wCAIeC,U,sBC7FLoB,I,aAmBAC,I,aAgBAC,I,aAcAC,I,aAqBAC,I,aASArD,I,aASAsD,I,aASOC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIAC,I,aAIPC,IAjKV,SAASC,GAAoBC,EAAWxX,GAEpC,OADIyX,SAASzF,MAAMyF,SAASzF,KAAK0F,aAAaF,EAAWxX,IAClD,EAOX,SAAS2X,GAAgBC,EAAUnE,EAAS,UACxC,OAAQA,GACJ,IAAK,MACGgE,SAASzF,MAAMyF,SAASzF,KAAK6F,UAAUC,IAAIF,GAC/C,MACJ,IAAK,SACGH,SAASzF,MAAMyF,SAASzF,KAAK6F,UAAUlC,OAAOiC,GAClD,MACJ,QACQH,SAASzF,MAAMyF,SAASzF,KAAK6F,UAAUvP,OAAOsP,GAI1D,OAAO,EAcX,SAAUnB,IAAevb,QAASoV,IAAlC,kEAEQ,OAFR,kBAEcsF,aAAK2B,GAAqB,cAAejH,GAFvD,UAGYA,IAAWE,IAHvB,gBAIY,OAJZ,SAIkBqF,aAAIkC,aAA6BvH,MAJnD,OAKY,OALZ,SAKkBqF,aAAImC,aAAwBxH,MAL9C,UAQYF,IAAWE,IARvB,iBASY,OATZ,UASkBqF,aAAIkC,aAA6BvH,MATnD,QAUY,OAVZ,UAUkBqF,aAAImC,aAAwBxH,MAV9C,iHAmBA,SAAUkG,IAAoBxb,QAAS2P,IAAvC,8EAEYA,IAAU2F,IAFtB,gBAGY,OAHZ,SAGkBoF,aAAK+B,GAAiB,2BAA4B,OAHpE,OAIY,OAJZ,SAIkB/B,aAAK+B,GAAiB,eAAgB,OAJxD,8BAMY,OANZ,UAMkB/B,aAAK+B,GAAiB,2BAA4B,UANpE,QAOY,OAPZ,UAOkB/B,aAAK+B,GAAiB,eAAgB,UAPxD,iHAgBA,SAAUhB,IAAyBzb,QAASuP,IAA5C,8EAEYA,IAAU+F,IAFtB,gBAGY,OAHZ,SAGkBoF,aAAK+B,GAAiB,sBAAuB,OAH/D,6BAKY,OALZ,SAKkB/B,aAAK+B,GAAiB,sBAAuB,UAL/D,gHAcA,SAAUf,IAAwB1b,QAASL,IAA3C,gFAEgBA,EAFhB,cAGiB2V,IAHjB,SAMiBA,IANjB,kBAIgB,OAJhB,SAIsBoF,aAAK+B,GAAiB,2BAA4B,OAJxE,0CAOgB,OAPhB,SAOsB/B,aAAK+B,GAAiB,2BAA4B,UAPxE,OAQgB,OARhB,UAQsB/B,aAAK+B,GAAiB,oBAAqB,OARjE,4CAWgB,OAXhB,UAWsB/B,aAAK+B,GAAiB,2BAA4B,UAXxE,QAYgB,OAZhB,UAYsB/B,aAAK+B,GAAiB,oBAAqB,UAZjE,qJAqBA,SAAUd,KAAV,kEAEQ,OAFR,kBAEcjB,aAAK+B,GAAiB,qBAFpC,2GASA,SAAUnE,KAAV,kEAEQ,OAFR,kBAEcoC,aAAK+B,GAAiB,oBAAqB,OAFzD,2GASA,SAAUb,KAAV,kEAEQ,OAFR,kBAEclB,aAAK+B,GAAiB,oBAAqB,UAFzD,2GASO,SAAUZ,KAAV,kEACH,OADG,SACGT,aAAU5X,KAAe+X,IAD5B,wCAIA,SAAUO,KAAV,kEACH,OADG,SACGV,aAAU3X,KAAqB+X,IADlC,wCAIA,SAAUO,KAAV,kEACH,OADG,SACGX,aAAU1X,KAAsB+X,IADnC,wCAIA,SAAUO,KAAV,kEACH,OADG,SACGZ,aAAUzX,KAAqB+X,IADlC,wCAIA,SAAUO,KAAV,kEACH,OADG,SACGb,aAAUxX,KAAsB+X,IADnC,wCAIA,SAAUO,KAAV,kEACH,OADG,SACGd,aAAUvX,KAAoByU,IADjC,wCAIA,SAAU6D,KAAV,kEACH,OADG,SACGf,aAAUtX,KAAoB8X,IADjC,wCAIP,SAAUQ,KAAV,kEACI,OADJ,SACUf,aAAI,CACNC,aAAKO,IACLP,aAAKQ,IACLR,aAAKS,IACLT,aAAKU,IACLV,aAAKW,IACLX,aAAKY,IACLZ,aAAKa,MARb,wCAYeC,U,UC9LXW,GAAO,EAELC,GAAoB,CAAC7b,EAAW8b,MAClC9b,EAAYA,GAAa,IACfiT,QAAQC,IACd,IAAM5P,EAAK4P,EAAK5P,IAAMsY,GACtBA,IAAQ,EACR1I,EAAK5P,GAAKA,EACV4P,EAAK4I,SAAW5I,EAAK4I,UAAYA,EACjC5I,EAAK3G,QAAS,EAEe,qBAAlB2G,EAAKN,UACZiJ,GAAkB3I,EAAKN,SAAUtP,MAK7BtD,OACZ6b,GAAkB7b,GACXA,G,uBCMD+b,I,aAUA7b,I,aAWO8b,I,aAIAC,I,aAIPC,IA9CJC,GAA0Bnc,IAC5B,IADyC,EACrCoc,EAAgB,GADqB,eAEpBpc,GAFoB,IAEzC,2BAAgC,CAAC,IAAxBqc,EAAuB,QAC4B,IAApDvH,OAAOzD,SAASF,SAASK,QAAQ6K,EAAS/P,OAC1C8P,EAAcjJ,KAAKkJ,EAAS/Y,IAGC,qBAAtB+Y,EAASzJ,WAChBwJ,EAAgB,IAAIA,KAAkBD,GAAwBE,EAASzJ,aARtC,8BAWzC,OAAOwJ,GAMX,SAAUL,KAAV,wEAGQ,OAHR,SAEc/b,EAAYsc,GAAUvJ,IAFpC,SAGcyG,aAAIzZ,aAAgBC,IAHlC,2GAUA,SAAUE,KAAV,0EAGqC,OAHrC,SAEcF,EAAYsc,GAAUvJ,IAFpC,SAG2CwG,aAAK4C,GAAyBnc,GAHzE,OAIQ,OADMK,EAHd,gBAIcmZ,aAAIpZ,aAAoCC,IAJtD,6GAWO,SAAU2b,KAAV,kEACH,OADG,SACG/B,aAAUna,KAAWic,IADxB,wCAIA,SAAUE,KAAV,kEACH,OADG,SACGhC,aAAU9Z,KAAkCD,IAD/C,wCAIP,SAAUgc,KAAV,kEACI,OADJ,SACUhC,aAAI,CAACC,aAAK6B,IAAgB7B,aAAK8B,MADzC,wCAIeC,U,qBC3DTK,GAAMC,KAAMC,OAAQ,CACtBC,QAAUC,uHAAYC,wBAG1BL,GAAIM,aAAapG,SAASqG,IACpBrG,GACSA,EAETY,IACE,IAAM0F,EAAkB1F,EAAM2F,OAC1BC,EAAOC,aAAaC,QAAS,YAGjC,cAFOZ,GAAIa,SAAS9G,QAAQ+G,OAArB,cAEHJ,GAAkC,MAA1B5F,EAAMZ,SAAS6B,SAAmByE,EAAgBO,QAC1DP,EAAgBO,QAAS,EAClBd,KACFe,KADE,UACOZ,uHAAYC,sBADnB,SACiD,CAAEY,KAAMP,IAC3DzG,KAAQiH,IACL,GAAmB,MAAfA,EAAInF,OAGJ,OADAyE,EAAgBzG,QAAQC,cAAgB,UAAYkH,EAAIxY,KAAK8Q,MACtDyG,KAAOO,MAKvB7H,QAAQE,OAAQiC,KAIhBkF,UC9BDmB,GAAqB,IACxBnB,GAAIoB,IAAK,uBAENC,GAA6B,IACjCrB,GAAIoB,IAAK,wBAOL7e,GAAgB,IACpByd,GAAIoB,IAAK,kBAMNxe,GAAmB,IACtBod,GAAIoB,IAAK,kBAiBNE,GAAgB,IACnBtB,GAAIoB,IAAK,sBAMNrV,GAAc,IACjBiU,GAAIoB,IAAK,cAINlV,GAAe,IAClB8T,GAAIoB,IAAK,cAGN/U,GAAsB,IACzB2T,GAAIoB,IAAK,iBAGN5U,GAAc,IACjBwT,GAAIoB,IAAK,iBAGNzU,GAAY,IACfqT,GAAIoB,IAAK,WAKNpW,GAAqB,IACxBgV,GAAIoB,IAAK,gBAGNG,GAA0B,IAC7BvB,GAAIoB,IAAK,oBAGN9V,GAAoB,IACvB0U,GAAIoB,IAAK,eAGN3V,GAAuB,IAC1BuU,GAAIoB,IAAK,kBAGNxV,GAAqB,IACxBoU,GAAIoB,IAAK,mBAGNne,GAAc,IACjB+c,GAAIoB,IAAK,eAGNnX,GAAc,IACjB+V,GAAIoB,IAAK,gBAENI,GAAWxJ,GACdgI,GAAIgB,KAAM,eAAehJ,GAGtBhW,GAAc,IACjBge,GAAIoB,IAAK,oB,2CC1FTnX,I,aAcAuX,I,aAqBAC,I,aAGAC,I,aAGAC,IAzCV,SAAU1X,KAAV,wEAEyB,OAFzB,kBAEgC+S,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAiB3H,EAASxR,KAAKkZ,OAJlD,8BAQQ,OARR,UAQc3E,aAAK4E,KAAiB,KARpC,0DAWQxZ,QAAQC,IAAR,MAXR,uDAcA,SAAUkZ,GAAS3G,GAAnB,wEAEuB,OAFvB,kBAE6BmC,aAAMgD,GAAanF,EAAOvY,SAFvD,OAGQ,OADMwf,EAFd,gBAGc7E,aAAK4E,KAAuBC,EAAOpZ,OAHjD,OAIQ,OAJR,SAIcsU,aAAM/S,IAJpB,OAKQ5B,QAAQC,IAAIwZ,EAAOpZ,MAL3B,kDAYQL,QAAQC,IAAR,MACAyZ,KAAK,CACDxX,MAAM,EAAD,GACL9C,KAAK,EAAD,GACJ6N,KAAM,YAhBlB,uDAqBA,SAAUmM,KAAV,kEACI,OADJ,SACU/D,aAAW5Q,KAAuB7C,IAD5C,wCAGA,SAAUyX,KAAV,kEACI,OADJ,SACUhE,aAAW1Q,KAAUwU,IAD/B,wCAGA,SAAUG,KAAV,kEACI,OADJ,SACUhE,aAAI,CACNC,aAAM6D,IACN7D,aAAM8D,MAHd,wCAOeC,U,sBChDLR,I,aAcAa,I,aAKAC,I,aAGAC,I,aAGAC,I,aAcAC,I,aAGAC,IA1CV,SAAUlB,KAAV,wEAEyB,OAFzB,kBAEgCnE,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAwB3H,EAASxR,KAAKkZ,OAJzD,8BAQQ,OARR,UAQc3E,aAAK4E,KAAwB,KAR3C,0DAWQxZ,QAAQC,IAAR,MAXR,uDAcA,SAAU0Z,GAAoBnH,GAA9B,wEACqB,OADrB,SAC2BmC,aAAMgD,GAAwBnF,EAAOvY,QAASuY,EAAOO,KADhF,OAEQ,OADI0G,EADZ,gBAEc7E,aAAKpC,EAAOmH,mBAAoBF,EAAOpZ,OAFrD,wCAKA,SAAUuZ,KAAV,kEACI,OADJ,SACUvE,aAAWlT,KAA+B2W,IADpD,wCAGA,SAAUe,KAAV,kEACI,OADJ,SACUxE,aAAW7S,KAAuBmX,IAD5C,wCAGA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCnF,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAgC3H,EAASxR,KAAKkZ,OAJjE,8BAQQ,OARR,UAQc3E,aAAK4E,KAAgC,KARnD,0DAWQxZ,QAAQC,IAAR,MAXR,uDAcA,SAAU8Z,KAAV,kEACI,OADJ,SACU1E,aAAWhT,KAAgCyX,IADrD,wCAGA,SAAUE,KAAV,kEACI,OADJ,SACU1E,aAAI,CACNC,aAAMqE,IACNrE,aAAKsE,IACLtE,aAAKwE,MAJb,wCAQeC,U,uBCpDL9f,I,aAwBA+f,I,aAIAC,IA5BV,SAAUhgB,KAAV,wEAEyB,OAFzB,kBAEgCya,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAmB3H,EAASxR,KAAKkZ,OAJpD,8BAQQ,OARR,UAQc3E,aAAK4E,KAAmB,KARtC,0DAWQxZ,QAAQC,IAAR,MAXR,uDAwBA,SAAUga,KAAV,kEACI,OADJ,SACU5E,aAAWlb,KAAyBD,IAD9C,wCAIA,SAAUggB,KAAV,kEACI,OADJ,SACU5E,aAAI,CACNC,aAAM0E,MAFd,wCAMeC,U,uBClCL3f,I,aAwBA4f,I,aAIAC,IA5BV,SAAU7f,KAAV,wEAEyB,OAFzB,kBAEgCoa,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAsB3H,EAASxR,KAAKkZ,OAJvD,8BAQQ,OARR,UAQc3E,aAAK4E,KAAsB,KARzC,0DAWQxZ,QAAQC,IAAR,MAXR,uDAwBA,SAAUka,KAAV,kEACI,OADJ,SACU9E,aAAW7a,KAA4BD,IADjD,wCAIA,SAAU6f,KAAV,kEACI,OADJ,SACU9E,aAAI,CACNC,aAAM4E,MAFd,wCAMeC,U,aClCLpT,I,aAwBAqT,I,aAIAC,IA5BV,SAAUtT,KAAV,wEAEyB,OAFzB,kBAEgC2N,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAuB3H,EAASxR,KAAKkZ,OAJxD,8BAQQ,OARR,UAQc3E,aAAK4E,KAAuB,KAR1C,0DAWQxZ,QAAQC,IAAR,MAXR,uDAwBA,SAAUoa,KAAV,kEACI,OADJ,SACUhF,aAAWhC,KAA6BrM,IADlD,wCAIA,SAAUsT,KAAV,kEACI,OADJ,SACUhF,aAAI,CACNC,aAAM8E,MAFd,wCAMeC,U,aC/BL5W,I,aAaA6W,I,aAIA1W,I,aAaA2W,I,aAIAxW,I,aAaAyW,I,aAKAtW,I,aAcAuW,I,aAKApW,I,aAcAqW,I,aAIAC,IAzFV,SAAUlX,KAAV,wEAEyB,OAFzB,kBAEgCiR,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,IAAiB3H,EAASxR,KAAKkZ,OAJlD,8BAOQ,OAPR,UAOc3E,aAAK4E,IAAiB,KAPpC,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAUsa,KAAV,kEACI,OADJ,SACUlF,aAAW1Z,KAAuB+H,IAD5C,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgC8Q,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,IAAsB3H,EAASxR,KAAKkZ,OAJvD,8BAOQ,OAPR,UAOc3E,aAAK4E,IAAsB,KAPzC,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAUua,KAAV,kEACI,OADJ,SACUnF,aAAWxZ,KAAwBgI,IAD7C,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgC2Q,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,IAA6B3H,EAASxR,KAAKkZ,OAJ9D,8BAOQ,OAPR,UAOc3E,aAAK4E,IAA6B,KAPhD,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAUwa,KAAV,kEACI,OADJ,SACUpF,aAAWtZ,KAAuBiI,IAD5C,wCAKA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCwQ,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,IAAqB3H,EAASxR,KAAKkZ,OAJtD,8BAQQ,OARR,UAQc3E,aAAK4E,IAAqB,KARxC,0DAWQxZ,QAAQC,IAAR,MAXR,uDAcA,SAAUya,KAAV,kEACI,OADJ,SACUrF,aAAWpZ,KAAuBkI,IAD5C,wCAKA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCqQ,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,IAAmB3H,EAASxR,KAAKkZ,OAJpD,8BAQQ,OARR,UAQc3E,aAAK4E,IAAmB,KARtC,0DAWQxZ,QAAQC,IAAR,MAXR,uDAcA,SAAU0a,KAAV,kEACI,OADJ,SACUtF,aAAWlZ,KAAqBmI,IAD1C,wCAIA,SAAUsW,KAAV,kEACI,OADJ,SACUtF,aAAI,CACNC,aAAMgF,IACNhF,aAAMiF,IACNjF,aAAMkF,IACNlF,aAAMmF,IACNnF,aAAMoF,MANd,wCAUeC,U,aCnGLjY,I,aAaAkY,I,aAIA/X,I,aAaAgY,I,aAIA7X,I,aAaA8X,I,aAKA3X,I,aAaA4X,I,aAIAzX,I,aAaA0X,I,aAGAC,IArFV,SAAUvY,KAAV,wEAEyB,OAFzB,kBAEgCgS,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAA4B3H,EAASxR,KAAKkZ,OAJ7D,8BAOQ,OAPR,UAOc3E,aAAK4E,KAA4B,KAP/C,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAU4a,KAAV,kEACI,OADJ,SACUxF,aAAWhZ,KAAqBsG,IAD1C,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgC6R,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAgC3H,EAASxR,KAAKkZ,OAJjE,8BAOQ,OAPR,UAOc3E,aAAK4E,KAAgC,KAPnD,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAU6a,KAAV,kEACI,OADJ,SACUzF,aAAW9Y,KAAuBuG,IAD5C,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgC0R,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAA2B3H,EAASxR,KAAKkZ,OAJ5D,8BAOQ,OAPR,UAOc3E,aAAK4E,KAA2B,KAP9C,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAU8a,KAAV,kEACI,OADJ,SACU1F,aAAW5Y,KAAwBwG,IAD7C,wCAKA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCuR,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAA8B3H,EAASxR,KAAKkZ,OAJ/D,8BAOQ,OAPR,UAOc3E,aAAK4E,KAA8B,KAPjD,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAU+a,KAAV,kEACI,OADJ,SACU3F,aAAW1Y,KAA4ByG,IADjD,wCAIA,SAAUG,KAAV,wEAEyB,OAFzB,kBAEgCoR,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAA4B3H,EAASxR,KAAKkZ,OAJ7D,8BAOQ,OAPR,UAOc3E,aAAK4E,KAA4B,KAP/C,0DAUQxZ,QAAQC,IAAR,MAVR,uDAaA,SAAUgb,KAAV,kEACI,OADJ,SACU5F,aAAWxY,KAA0B0G,IAD/C,wCAGA,SAAU2X,KAAV,kEACI,OADJ,SACU5F,aAAI,CACNC,aAAMsF,IACNtF,aAAMuF,IACNvF,aAAMwF,IACNxF,aAAKyF,IACLzF,aAAK0F,MANb,wCAUeC,U,uBClGLtgB,I,aAwBAugB,I,aAIAC,IA5BV,SAAUxgB,KAAV,wEAEyB,OAFzB,kBAEgC+Z,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAiB3H,EAASxR,KAAKkZ,OAJlD,8BAQQ,OARR,UAQc3E,aAAK4E,KAAiB,KARpC,0DAWQxZ,QAAQC,IAAR,MAXR,uDAwBA,SAAUkb,KAAV,kEACI,OADJ,SACU9F,aAAWxa,KAAuBD,IAD5C,wCAIA,SAAUwgB,KAAV,kEACI,OADJ,SACU9F,aAAI,CACNC,aAAM4F,MAFd,wCAMeC,U,uBClCLzhB,I,aAwBA0hB,I,aAIAC,IA5BV,SAAU3hB,KAAV,wEAEyB,OAFzB,kBAEgCgb,aAAMgD,IAFtC,YAEc9F,EAFd,QAGoBxR,OAAQwR,EAASxR,KAAKkZ,KAH1C,gBAIQ,OAJR,SAIc3E,aAAK4E,KAAiB3H,EAASxR,KAAKkZ,OAJlD,8BAQQ,OARR,UAQc3E,aAAK4E,KAAiB,KARpC,0DAWQxZ,QAAQC,IAAR,MAXR,uDAwBA,SAAUob,KAAV,kEACI,OADJ,SACUhG,aAAWxb,KAAuBF,IAD5C,wCAIA,SAAU2hB,KAAV,kEACI,OADJ,SACUhG,aAAI,CACNC,aAAM8F,MAFd,wCAMeC,U,aC7BUC,IAAV,SAAUA,GAASC,GAAnB,kEACX,OADW,SACLlG,aAAK,CACPlB,KACAqH,KACAnE,KACAoE,KACA1B,KACAE,KACDE,KACAE,KACAM,KACAM,KACAE,KACAE,OAbQ,wCCRf,IAAMK,GAAiBC,eACjBC,GAAc,CAACF,ICCrBG,IAASvW,OACL,kBAAC,IAAD,CAAUwW,MDAP,SAAwBC,GAC3B,IAAMC,EAAmB/L,OAAOgM,sCAAwCC,KAElEJ,EAAQK,aAAYC,GAAUL,EAAcC,EAAiBK,gBAAmBT,MAEtF,OADAF,GAAeY,IAAIC,IACZT,ECLUU,IACb,kBAAC,GAAD,OAEJjG,SAASkG,eAAe,ShCqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjL,KAAKkL,IACjCA,EAAaC,gB,gCiCnInB,kTAEO,IAAMC,EAAkB,WAClBC,EAAoB,SAEpBC,EAAqB,QACrBC,EAAqB,QAErBC,EAA6B,UAC7BC,EAA0B,OAE1BC,EAA0B,QAC1BC,EAA8B,YAC9BC,EAA+B,c,gCCZ5C,oEACO,IAAMnK,EAA8B,8BAC9BC,EAA8B,+B,gCCF3C,oEACO,IAAMnZ,EAA0B,0BAC1BG,EAA0B,2B,gCCFvC,oEACO,IAAME,EAA6B,6BAC7BG,EAA6B,8B,gCCF1C,oEACO,IAAME,EAAwB,wBACxBG,EAAwB,yB,gCCFrC,oEACO,IAAMnB,EAAwB,wBACxBG,EAAwB,yB,gCCHrC,gFAIagN,EAAmB,KAAI,CAClCpN,KAAKyZ,MAGMoK,EAAkB1W,IAAF,CAC3BnN,KAAM0Z,IACNrZ,QAAS8M,K,gCCTX,8TAca2W,EAAY,CAAC7N,EAAUC,KAAX,CACrBlW,KAAMmD,IACN9C,QAAS,CAAE4V,WAAUC,cAGZ+E,EAAoBlF,IAAD,CAC5B/V,KAAMoD,IACN/C,QAAS0V,IAGAmF,EAAmBrC,IAAD,CAC3B7Y,KAAMqD,IACNhD,QAASwY,IAGAkL,EAAe,CAACrM,EAAU0D,EAAOlF,KAAlB,CACxBlW,KAAMsD,IACNjD,QAAS,CAAEqX,WAAU0D,QAAOlF,cAGnBmF,EAAuBtF,IAAD,CAC/B/V,KAAMuD,IACNlD,QAAS0V,IAGAuF,EAAsBzC,IAAD,CAC9B7Y,KAAMwD,IACNnD,QAASwY,IAGAmL,EAAc7I,IAAD,CACtBnb,KAAMyD,IACNpD,QAAS,CAAE8a,aAQFI,EAAyBzC,IAAD,CACjC9Y,KAAM2D,IACNtD,QAASyY,IAGA0C,EAAwB3C,IAAD,CAChC7Y,KAAM4D,IACNvD,QAASwY,K,gCC7Db,mGAMMpG,EAAsB,KACxB,IAAMsD,EAAOhD,IACb,IAAKgD,EACD,OAAO,EAEX,IAAMkO,EAAUC,IAAUnO,EAAKwB,OACzB4M,EAAcC,KAAKC,MAAQ,IACjC,QAAIJ,EAAQK,IAAMH,KACd/d,QAAQme,KAAK,yBACN,IASTxR,EAAkB,KACpB,IACMgD,GADU,IAAI4E,KACCwE,IAAI,QACzB,OAAOpJ,EAAuB,iBAARA,EAAmBA,EAAOkB,KAAKC,MAAMnB,GAAS,O,gCC3BxE,oJAIa/N,EAAa,KAAI,CAC5BhI,KAAK6K,MAIM2Z,EAAY1c,IAAF,CACrB9H,KAAM8K,IACNzK,QAASyH,IAGEyX,EAAYxJ,IAAF,CACrB/V,KAAM+K,IACN1K,QAAS0V,IAEE0O,EAAkB1O,IAAF,CAC3B/V,KAAMgL,IACN3K,QAAS0V,K,gCCrBX,8CAmCepI,IA5BIjI,IAEf,IAAMgf,EAAQhf,EAAMkI,iBAAmB,GACvC,OACI,kBAAC,IAAMjJ,SAAP,KAEI,kBAAC,IAAD,CAAYC,UAAU,sBAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAM8N,GAAG,KAAT,QAEHgS,EAAMtf,IAAI,CAACsP,EAAMmB,IACPnB,EAAK3G,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACxI,IAAKsQ,GACvBnB,EAAK7G,OAGN,kBAAC,IAAD,CAAgBtI,IAAKsQ,GACjB,kBAAC,IAAD,CAAMnD,GAAIgC,EAAK5G,MAAO4G,EAAK7G,a,gCCxB3D,0PAOaqR,EAAoB,KAAI,CACnClf,KAAKuI,MAGMoc,EAAmB3L,IAAF,CAC5BhZ,KAAMwI,IACNnI,QAAS2Y,IAEEkH,EAA4B,KAAI,CAC3ClgB,KAAKyI,MAGMmc,EAA2B3L,IAAF,CACpCjZ,KAAM0I,IACNrI,QAAS4Y,IAOE8G,EAAqB,CAAE7G,EAAaC,KAAf,CAChCnZ,KAAM4I,IACNvI,QAAS6Y,EACTpU,GAAGqU,IAEQ0L,EAAsB,MACjC7kB,KAAM6I,MAGKic,EAAuB,MAClC9kB,KAAM8I,O,gCCrCR,wNAWa8S,EAAgBnG,IAAD,CACxBzV,KAAM6D,IACNxD,QAASoV,IAGAoG,EAAqB7L,IAAD,CAC7BhQ,KAAM8D,IACNzD,QAAS2P,IAGA+U,EAAsBnV,IAAD,CAC9B5P,KAAM+D,IACN1D,QAASuP,IAGAoV,EAAqBC,IAAD,CAC7BjlB,KAAMgE,IACN3D,QAAS4kB,IAQAtM,EAAmB,MAC5B3Y,KAAMkE,IACN7D,QAAS,OAGA4b,EAAmB,MAC5Bjc,KAAMmE,IACN9D,QAAS,S","file":"static/js/main.fc2acaed.chunk.js","sourcesContent":["import {GET_ROLE_LIST_REQUEST, \r\n   SET_ROLE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getRoleList =()=>({\r\n  type:GET_ROLE_LIST_REQUEST\r\n})\r\n\r\nexport const setRole = ( role ) => ( {\r\n  type: SET_ROLE_LIST_REQUEST,\r\n  payload: role\r\n} );","import {GET_CLIENT_LIST_REQUEST, \r\n   SET_CLIENT_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getClientList =()=>({\r\n  type:GET_CLIENT_LIST_REQUEST\r\n})\r\n\r\nexport const setClient = ( clients ) => ( {\r\n  type: SET_CLIENT_LIST_REQUEST,\r\n  payload: clients\r\n} );","import {GET_RECRUITER_LIST_REQUEST, \r\n   SET_RECRUITER_LIST_REQUEST,} from './constants';\r\n\r\n   \r\nexport const getRecruiterList =()=>({\r\n  type:GET_RECRUITER_LIST_REQUEST\r\n})\r\n\r\nexport const setRecruiter = ( recruiters ) => ( {\r\n  type: SET_RECRUITER_LIST_REQUEST,\r\n  payload: recruiters\r\n} );","import {GET_TEAM_LIST_REQUEST, \r\n   SET_TEAM_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getTeamList =()=>({\r\n  type:GET_TEAM_LIST_REQUEST\r\n})\r\n\r\nexport const setTeam = ( teams ) => ( {\r\n  type: SET_TEAM_LIST_REQUEST,\r\n  payload: teams\r\n} );","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\nexport const initMenu = () => ({\r\n    type: INIT_MENU,\r\n    payload: {},\r\n});\r\n\r\nexport const initMenuSuccess = (menuItems) => ({\r\n    type: INIT_MENU_SUCCESS,\r\n    payload: { menuItems },\r\n});\r\n\r\nexport const changeActiveMenuFromLocation = () => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    payload: {},\r\n});\r\n\r\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\r\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n    payload: { activatedMenuItemIds },\r\n});\r\n","\r\n/** List of LIST */\r\nexport const GET_LIST_LIST_REQUEST = 'GET_LIST_LIST_REQUEST';\r\nexport const SET_LIST_LIST_REQUEST = 'SET_LIST_LIST_REQUEST';\r\n\r\n\r\n/** Offer of LIST */\r\nexport const GET_OFFER_LIST_REQUEST = 'GET_OFFER_LIST_REQUEST';\r\nexport const SET_OFFER_LIST_REQUEST = 'SET_OFFER_LIST_REQUEST';\r\n\r\n/** ViewToBeJoin of LIST */\r\nexport const GET_VTBJ_LIST_REQUEST = 'GET_VTBJ_LIST_REQUEST';\r\nexport const SET_VTBJ_LIST_REQUEST = 'SET_VTBJ_LIST_REQUEST';\r\n\r\n/** Join  LIST */\r\nexport const GET_JOIN_LIST_REQUEST = 'GET_JOIN_LIST_REQUEST';\r\nexport const SET_JOIN_LIST_REQUEST = 'SET_JOIN_LIST_REQUEST';\r\n\r\n/** BD  LIST */\r\nexport const GET_BD_LIST_REQUEST = 'GET_BD_LIST_REQUEST';\r\nexport const SET_BD_LIST_REQUEST = 'SET_BD_LIST_REQUEST';","\r\n/** List of Daily Target */\r\nexport const GET_DT_LIST_REQUEST = 'GET_DT_LIST_REQUEST';\r\nexport const SET_DT_LIST_REQUEST = 'SET_DT_LIST_REQUEST';\r\n\r\n/** List of Todays Interview */\r\nexport const GET_TOIN_LIST_REQUEST = 'GET_TOIN_LIST_REQUEST';\r\nexport const SET_TOIN_LIST_REQUEST = 'SET_TOIN_LIST_REQUEST';\r\n\r\n/** List of Month Offer */\r\nexport const GET_MONOF_LIST_REQUEST = 'GET_MONOF_LIST_REQUEST';\r\nexport const SET_MONOF_LIST_REQUEST = 'SET_MONOF_LIST_REQUEST';\r\n\r\n/** List of Month to be join */\r\nexport const GET_MONTHJOIN_LIST_REQUEST = 'GET_MONTHJOIN_LIST_REQUEST';\r\nexport const SET_MONTHJOIN_LIST_REQUEST = 'SET_MONTHJOIN_LIST_REQUEST';\r\n\r\n/** List of Month to be join */\r\nexport const GET_ATSACTI_LIST_REQUEST = 'GET_ATSACTI_LIST_REQUEST';\r\nexport const SET_ATSACTI_LIST_REQUEST = 'SET_ATSACTI_LIST_REQUEST';","/* AUTH */\r\nexport const LOGIN_USER = 'LOGIN_USER';\r\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const REGISTER_USER = 'REGISTER_USER';\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\r\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\r\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\r\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';\r\n","/* LAYOUT */\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\r\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\r\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\r\n\r\n/* RIGHT SIDEBAR */\r\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\r\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\r\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\r\n","import React, { useEffect,useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getUserList } from '../../../redux/user/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\n\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n// /const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n    const [rowData, setrowData] = useState([]);\r\n    //const [rowSelect, setrowSelect] = useState([]);\r\n    \r\n      const rowEvent = {\r\n        onDoubleClick: (row) => {\r\n            alert();\r\n                setrowData((rowData) => [...rowData, row]);\r\n                console.log(\"rowdata\", rowData)\r\n              \r\n        }\r\n    }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                    \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewUser = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Users.users);\r\n  // console.log(records, 'join list');\r\n    useEffect(() => {\r\n        dispatch(getUserList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField:'id',\r\n            text:'ID',\r\n            hidden: true\r\n        },\r\n        {\r\n            dataField: 'ECode',\r\n            text: 'Employee Code.',\r\n            //sort: true,\r\n        },\r\n        {\r\n            dataField: 'EFullname',\r\n            text: 'Name',\r\n            sort: true,\r\n        },\r\n        {\r\n            dataField: 'ECompany_Name',\r\n            text: 'Company',\r\n        },\r\n        {\r\n            dataField: 'EDesignation',\r\n            text: 'Designation',\r\n        },\r\n        {\r\n            dataField: 'ELocation',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'ERole',\r\n            text: 'Role',\r\n        },\r\n        {\r\n            dataField: 'EEmail',\r\n            text: 'Email',\r\n        },\r\n        {\r\n            dataField: 'email',\r\n            text: 'Edit',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Edit\"\r\n                  >\r\n                   <FeatherIcon.Edit />\r\n                  </button>\r\n                );\r\n              },\r\n        },\r\n        {\r\n            dataField: 'Delete',\r\n            text: 'Delete',\r\n            formatter: (cellContent, row) => {\r\n                //const id = row.jid;\r\n                return (\r\n                  <button\r\n                  className=\"btn btn-link text-secondary\"\r\n                    onClick={() => _validateFunction(row)}\r\n                    title=\"Delete\"\r\n                  >\r\n                   <FeatherIcon.Trash2 />\r\n                  </button>\r\n                );\r\n              },\r\n        }\r\n    ];\r\n    function _validateFunction(row , id) {    \r\n        // console.log(\"activity id :\",(id));\r\n         // dispatch(getRequirementModal((row)));\r\n \r\n         //dispatch( setSaveRequirement( row) );\r\n \r\n          //   dispatch( getRequirementModal() );\r\n     }\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewUser;\r\n\r\n\r\n","/** List of Requirement */\r\nexport const GET_REQUIREMENTS_LIST_REQUEST = 'GET_REQUIREMENTS_LIST_REQUEST';\r\nexport const SET_REQUIREMENTS_LIST_REQUEST = 'SET_REQUIREMENTS_LIST_REQUEST';\r\n/** List of Requirement */\r\nexport const GET_CRITICAL_REQUIREMENTS_LIST = 'GET_CRITICAL_REQUIREMENTS_LIST';\r\nexport const SET_CRITICAL_REQUIREMENTS_LIST = 'SET_CRITICAL_REQUIREMENTS_LIST';\r\n\r\n/** List of Requirement */\r\nexport const SAVE_REQUIREMENTS = 'SAVE_REQUIREMENTS';\r\nexport const SET_SAVE_REQUIREMENTS = 'SET_SAVE_REQUIREMENTS';\r\n\r\n//modal\r\nexport const GET_REQUIREMENTS_MODAL = 'GET_REQUIREMENTS_MODAL';\r\nexport const HIDE_REQUIREMENTS_MODAL = 'HIDE_REQUIREMENTS_MODAL';\r\n","import {\r\n    GET_DT_LIST_REQUEST,\r\n    SET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    SET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    SET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    SET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST,\r\n    SET_ATSACTI_LIST_REQUEST\r\n} from './constants';\r\n\r\n//Daily target\r\nexport const getDailyTargetList = () => ({\r\n    type: GET_DT_LIST_REQUEST,\r\n});\r\n\r\nexport const setDailyTargetList = (dailytarget) => ({\r\n    type: SET_DT_LIST_REQUEST,\r\n    payload: dailytarget,\r\n});\r\n//Todays Interview\r\nexport const getTodaysInterviewList = () => ({\r\n    type: GET_TOIN_LIST_REQUEST,\r\n});\r\n\r\nexport const setTodaysInterviewList = (todaysinterview) => ({\r\n    type: SET_TOIN_LIST_REQUEST,\r\n    payload: todaysinterview,\r\n});\r\n//Month Offer\r\nexport const getMonthOfferList = () => ({\r\n  type: GET_MONOF_LIST_REQUEST,\r\n});\r\n\r\nexport const setMonthOfferList = (monthoffer) => ({\r\n  type: SET_MONOF_LIST_REQUEST,\r\n  payload: monthoffer,\r\n});\r\n//Month To Be Join\r\nexport const getMonthToBeJoinList = () => ({\r\n  type: GET_MONTHJOIN_LIST_REQUEST,\r\n});\r\n\r\nexport const setMonthToBeJoinList = (monthtobejoin) => ({\r\n  type: SET_MONTHJOIN_LIST_REQUEST,\r\n  payload: monthtobejoin,\r\n});\r\n\r\n//Ats Activity\r\nexport const getAtsActivityList = () => ({\r\n  type: GET_ATSACTI_LIST_REQUEST,\r\n});\r\n\r\nexport const setAtsActivityList = (atsactivity) => ({\r\n  type: SET_ATSACTI_LIST_REQUEST,\r\n  payload: atsactivity,\r\n});","import {\r\n    GET_LIST_LIST_REQUEST,\r\n    SET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    SET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    SET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    SET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST,\r\n    SET_BD_LIST_REQUEST\r\n} from './constants';\r\n\r\nexport const getListList = () => ({\r\n    type: GET_LIST_LIST_REQUEST,\r\n});\r\n\r\nexport const setList = (list) => ({\r\n    type: SET_LIST_LIST_REQUEST,    \r\n    payload: list,\r\n    \r\n});\r\n//offer\r\nexport const getOfferList = () => ({\r\n    type: GET_OFFER_LIST_REQUEST,\r\n});\r\n\r\nexport const setOfferList = (offer) => ({\r\n    type: SET_OFFER_LIST_REQUEST,\r\n    payload: offer,\r\n});\r\n//View to be join\r\nexport const getViewToBeJoinList = () => ({\r\n    type: GET_VTBJ_LIST_REQUEST,\r\n});\r\n\r\nexport const setViewToBeJoinList = (viewtobejoin) => ({\r\n    type: SET_VTBJ_LIST_REQUEST,\r\n    payload: viewtobejoin,\r\n});\r\n\r\n//Join List\r\nexport const getJoinList = () => ({\r\n  type: GET_JOIN_LIST_REQUEST,\r\n});\r\nexport const setJoinList = (joinlist) => ({\r\n  type: SET_JOIN_LIST_REQUEST,\r\n  payload: joinlist,\r\n});\r\n\r\n//BD List\r\nexport const getBDList = () => ({\r\n  type: GET_BD_LIST_REQUEST,\r\n});\r\nexport const setBDList = (bdlist) => ({\r\n  type: SET_BD_LIST_REQUEST,\r\n  payload: bdlist,\r\n});\r\n","\r\n/** List of Client */\r\nexport const GET_USER_LIST_REQUEST = 'GET_USER_LIST_REQUEST';\r\nexport const SET_USER_LIST_REQUEST = 'SET_USER_LIST_REQUEST';\r\n\r\n//Create User\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const ADD_USER_REQUEST = 'ADD_USER_REQUEST';\r\n\r\n//error\r\nexport const GET_ERROR = 'GET_ERROR';","/* APP MENU */\r\nexport const INIT_MENU = 'INIT_MENU';\r\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\r\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search} from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getListList } from '../../redux/list/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getAttendanceReportModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst AttendanceReport = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.List.list);\r\n   console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getListList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'd.R_Name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'d.R_Name',\r\n            text:\"In Time\"\r\n        },\r\n        {\r\n            dataField: 'e.J_Skill',\r\n            text: 'IP',\r\n        },\r\n        {\r\n            dataField: 'e.J_Skill',\r\n            text: 'Out Time',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'IP',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'Total Time',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AttendanceReport;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getListList } from '../../redux/list/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n   // const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getHolidaysModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={12} className=\"\">\r\n                                <div className=\"input-group mb-3\">\r\n                                <div className=\"input-group-prepend\">\r\n                                <button className=\"btn btn-primary pl-5 pr-5\" type=\"button\">Create</button>\r\n                                </div>\r\n                                <input type=\"text\" className=\"form-control search-style\" placeholder=\"Holiday Name :\"/>\r\n                                <input type=\"date\" className=\"form-control search-style\" placeholder=\"Date :\"/>\r\n                                <input type=\"text\" className=\"form-control search-style\" placeholder=\"Day\"/>\r\n                                </div>\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Holidays = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.List.list);\r\n   console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getListList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'd.R_Name',\r\n            text: 'Holiday Name.',\r\n        },\r\n        {\r\n            dataField:'e.J_Skill',\r\n            text:\"Date\"\r\n        },\r\n        {\r\n            dataField: 'e.J_Skill',\r\n            text: 'Day',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'Type',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Holidays;\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Label,\r\n    FormGroup,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { User, Calendar, File } from 'react-feather';\r\n\r\nclass ApplyForLeave extends Component {\r\n    // _isMounted = false;\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <AvForm onValidSubmit={this.handleValidSubmit} className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Apply Your Leave</h5>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Leave Type</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"fullname\"\r\n                                            id=\"fullname\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Leave For</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"fullname\"\r\n                                            id=\"fullname\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"email\">Start Date</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Calendar className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"email\">End Date</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Calendar className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Reason</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <File className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <FormGroup className=\"form-group mb-0 text-center\">\r\n                                    <Button className=\"btn-block btn btn-secondary\">\r\n                                        Apply\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ApplyForLeave;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getAttendanceList } from '../../redux/attendance/actions';\r\n\r\n// const defaultSorted = [\r\n//     {\r\n//         dataField: 'id',\r\n//         order: 'asc',\r\n//     },\r\n// ];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">SHow</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setDepartamento( row ) );\r\n\r\n    //         dispatch( getDepartamentosModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                    \r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                                <button className=\"btn btn-secondary bg-secondary upbtn  mr-0\">Upload</button>\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                // defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                                wrapperClasses=\"table-responsive\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst LeaveBalance = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Attendance.attendance);\r\n    \r\n    console.log(records);\r\n    useEffect(() => {\r\n        dispatch(getAttendanceList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'date',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Type',\r\n        }, \r\n        {\r\n            dataField: 'intime',\r\n            text: 'Total Available',\r\n        }, \r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Total Used',\r\n        }, \r\n        {\r\n            dataField: 'leavebalance',\r\n            text: 'Balance',\r\n        }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default LeaveBalance;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getListList } from '../../redux/list/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>                              \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst ViewLeave = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.List.list);\r\n    useEffect(() => {\r\n        dispatch(getListList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'd.R_Name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'e.J_Client_Id',\r\n            text:\"Type\"\r\n        },\r\n        {\r\n            dataField: 'e.J_Skill',\r\n            text: 'No. Of days',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'Reason',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'Start Date',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'End Date',\r\n        },\r\n        {\r\n            dataField: 'e.J_Location',\r\n            text: 'TL Status',\r\n        },\r\n        {\r\n            dataField: 'g.E_Fullname',\r\n            text: 'Manager Status',\r\n            \r\n        },  \r\n        {\r\n            dataField: 'c.O_Status',\r\n            text: 'HR Status',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ViewLeave;\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport AttendanceReport from './AttendanceReport';\r\nimport Holidays from './Holidays';\r\nimport ApplyForLeave from './ApplyForLeave';\r\nimport LeaveBalance from './LeaveBalance';\r\nimport ViewLeave from './ViewLeave';\r\nconst Hr = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Hr', path: '/hr', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab hr-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Attedance Report\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Holidays\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Apply For Leave\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            View Leave\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2 \">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Leave Balance\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <AttendanceReport/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <Holidays/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <ApplyForLeave/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n          <ViewLeave/>\r\n        </TabPane >\r\n        <TabPane tabId=\"5\">\r\n          <LeaveBalance/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Hr;","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search,CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport {UncontrolledDropdown, DropdownMenu, DropdownToggle, Button } from 'reactstrap';\r\nimport * as FeatherIcon from 'react-feather';\r\nimport { getAttendanceList } from '../../redux/attendance/actions';\r\nimport PageTitle from '../../components/PageTitle';\r\n\r\n// const defaultSorted = [\r\n//     {\r\n//         dataField: 'id',\r\n//         order: 'asc',\r\n//     },\r\n// ];\r\nconst { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">SHow</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    //const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setDepartamento( row ) );\r\n\r\n    //         dispatch( getDepartamentosModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                    \r\n                                <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                                <button className=\"btn btn-secondary bg-secondary upbtn  mr-0\">Upload New</button>\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                // defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                                wrapperClasses=\"table-responsive\"\r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst Attendance = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    let records = useSelector((state) => state.Attendance.attendance);\r\n    \r\n    console.log(records);\r\n    useEffect(() => {\r\n        dispatch(getAttendanceList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'date',\r\n            text: 'Date.',\r\n        },\r\n        {\r\n            dataField: 'day',\r\n            text: 'Day',\r\n        }, \r\n        {\r\n            dataField: 'intime',\r\n            text: 'In Time',\r\n        }, \r\n        {\r\n            dataField: 'outtime',\r\n            text: 'Out Time',\r\n        }, \r\n        {\r\n            dataField: 'totaltime',\r\n            text: 'Total Time',\r\n        }, \r\n        {\r\n            dataField: 'status',\r\n            text: 'Status',\r\n        }, \r\n        {\r\n            dataField: 'leavebalance',\r\n            text: 'Leave Balance',\r\n        }, \r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"page-title mb-3\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Attendance', path: '/attendance', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Attendance;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getDailyTargetList } from '../../redux/activity/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTargetSubmissionModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                                //rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TargetSubmission = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.dailytarget);\r\n   console.log(records)\r\n    useEffect(() => {\r\n        dispatch(getDailyTargetList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'username',\r\n            text: 'Recruiter Name.',\r\n        },\r\n        {\r\n            dataField:'target',\r\n            text:\"Target\"\r\n        },\r\n        {\r\n            dataField: 'achived',\r\n            text: 'Achived',\r\n        },\r\n        {\r\n            dataField: 'closure',\r\n            text: 'Closure',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TargetSubmission;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getMonthToBeJoinList } from '../../../redux/activity/actions';\r\nimport moment from 'moment';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show </label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTodaysInterViewModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n      //var currMonthName  = moment().format('MMMM');\r\n      var prevMonthName  = moment().format('MMMM');\r\n        //console.log(currMonthName);\r\n        //console.log(prevMonthName);\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row className=\"mt-3\">\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>{prevMonthName} Joining</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TodaysInterView = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.monthtobejoin);\r\n    useEffect(() => {\r\n        dispatch(getMonthToBeJoinList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'clientname',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'dates',\r\n            text: 'Offer Date',\r\n        },\r\n        {\r\n            dataField: 'recruitername',\r\n            text: 'Recruiter',\r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TodaysInterView;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getMonthOfferList} from '../../../redux/activity/actions';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //        // dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getMonthOfferModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row className=\"mt-3\">\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>Month Offer</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst MonthOffer = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.monthoffer);\r\n    useEffect(() => {\r\n        dispatch(getMonthOfferList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'clientname',\r\n            text:\"Client\"\r\n        },\r\n        {\r\n            dataField: 'dates',\r\n            text: 'Offer Date',\r\n        },\r\n        {\r\n            dataField: 'recruitername',\r\n            text: 'Recruiter',\r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"bg-white\">\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MonthOffer;\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\nimport { getTodaysInterviewList } from '../../../redux/activity/actions';\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         //dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getTodaysInterViewModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    \r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n          No Records Found\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                             <Row>\r\n                                <Col md={12} className=\"text-uppercase text-center\">\r\n                                    <h5>Today's Interview</h5>\r\n                                </Col>                          \r\n                            </Row>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                               </Col>                            \r\n                            </Row>\r\n                           \r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst TodaysInterView = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.todaysinterview);\r\n    useEffect(() => {\r\n        dispatch(getTodaysInterviewList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'Candidatename',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'InterviewBy',\r\n            text:\"Interview By\"\r\n        },\r\n        {\r\n            dataField: 'Location',\r\n            text: 'Location',\r\n        },\r\n        {\r\n            dataField: 'Time',\r\n            text: 'Time',\r\n        },\r\n        {\r\n            dataField: 'ContactNo',\r\n            text: 'Contact',\r\n            \r\n        }\r\n    ];\r\n \r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default TodaysInterView;\r\n\r\n\r\n","import React from 'react';\r\nimport LastMonthJoining from './OfferAndHire/LastMonthJoining';\r\nimport MonthOffer from './OfferAndHire/MonthOffer';\r\nimport TodaysInterView from './OfferAndHire/TodaysInterView';\r\nimport { Row, Col } from 'reactstrap';\r\nconst OfferAndHire = () => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TodaysInterView/>\r\n                    <MonthOffer/>\r\n                    <LastMonthJoining/>\r\n                </Col>\r\n            </Row>            \r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default OfferAndHire;\r\n\r\n\r\n","// @flow\r\nimport React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport Col from 'reactstrap/lib/Col';\r\nimport Row from 'reactstrap/lib/Row';\r\n\r\n// simple line chart\r\nconst Graph = () => {\r\n    const apexLineChartWithLables = {\r\n        chart: {\r\n            height: 380,\r\n            type: 'line',\r\n            zoom: {\r\n                enabled: false,\r\n            },\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\r\n        tooltip: {\r\n            theme: 'dark',\r\n            x: { show: false }\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        stroke: {\r\n            width: [3, 3],\r\n            curve: 'smooth',\r\n        },\r\n        title: {\r\n            text: 'SUBBMISSION / INTERVIEW',\r\n            align: 'left',\r\n            style: {\r\n                fontSize: '14px',\r\n            },\r\n        },\r\n        grid: {\r\n            row: {\r\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\r\n                opacity: 0.2,\r\n            },\r\n            borderColor: '#f1f3fa',\r\n        },\r\n        markers: {\r\n            style: 'inverted',\r\n            size: 6,\r\n        },\r\n        xaxis: {\r\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n            title: {\r\n                text: 'Ultima actualization hace 15 min',\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Temperature',\r\n            },\r\n            min: 5,\r\n            max: 40,\r\n        },\r\n        legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'right',\r\n            floating: true,\r\n            offsetY: -25,\r\n            offsetX: -5,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 600,\r\n                options: {\r\n                    chart: {\r\n                        toolbar: {\r\n                            show: false,\r\n                        },\r\n                    },\r\n                    legend: {\r\n                        show: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const apexLineChartWithLablesData = [\r\n        {\r\n            name: 'High - 2018',\r\n            data: [28, 29, 33, 36, 32, 32, 33],\r\n        },\r\n        {\r\n            name: 'Low - 2018',\r\n            data: [12, 11, 14, 18, 17, 13, 13],\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col md={12} className=\"text-uppercase text-center\">\r\n                    <h5>Month Graph</h5>\r\n                </Col>                          \r\n            </Row>\r\n           <Row>\r\n               <Col lg={12} className=\"text-right\">\r\n                    <button className=\"btn btn-primary\">Save As</button>\r\n                    <button className=\"btn btn-secondary ml-2\">Print</button>\r\n               </Col>\r\n          </Row> \r\n                <Chart\r\n                    options={apexLineChartWithLables}\r\n                    series={apexLineChartWithLablesData}\r\n                    type=\"line\"\r\n                    className=\"apex-charts\"\r\n                />\r\n         </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Graph;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Row, Col, Input } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\r\n//import {UncontrolledDropdown, DropdownMenu, DropdownToggle } from 'reactstrap';\r\n//import * as FeatherIcon from 'react-feather';\r\nimport { getAtsActivityList } from '../../redux/activity/actions';\r\n//import PageTitle from '../../components/PageTitle';\r\n\r\nconst defaultSorted = [\r\n    {\r\n        dataField: 'id',\r\n        order: 'asc',\r\n    },\r\n];\r\n//const { ExportCSVButton } = CSVExport;\r\nconst sizePerPageRenderer = ({ options, currSizePerPage, onSizePerPageChange }) => (\r\n    <React.Fragment>\r\n        <label className=\"d-inline mr-1\">Show</label>\r\n        <Input\r\n            type=\"select\"\r\n            name=\"select\"\r\n            id=\"no-entries\"\r\n            className=\"custom-select custom-select-sm d-inline col-2\"\r\n            defaultValue={currSizePerPage}\r\n            onChange={(e) => onSizePerPageChange(e.target.value)}>\r\n            {options.map((option, idx) => {\r\n                return <option key={idx}>{option.text}</option>;\r\n            })}\r\n        </Input>\r\n        <label className=\"d-inline ml-1\">Entry</label>\r\n    </React.Fragment>\r\n);\r\n\r\nconst TableWithSearch = (props) => {\r\n    const { SearchBar } = Search;\r\n    // const dispatch = useDispatch();\r\n\r\n    // const rowEvent = {\r\n    //     onDoubleClick: ( e, row, index ) => {\r\n\r\n    //         dispatch( setList( row ) );\r\n\r\n    //        // dispatch( getJoinListModal() );\r\n    //         //console.log(props.result)\r\n    //     }\r\n    // }\r\n    const NoDataIndication = () => (\r\n        <div className=\"spinner\">\r\n          <div className=\"rect1\" />\r\n          <div className=\"rect2\" />\r\n          <div className=\"rect3\" />\r\n          <div className=\"rect4\" />\r\n          <div className=\"rect5\" />\r\n        </div>\r\n      );\r\n    return (\r\n            \r\n                <ToolkitProvider bootstrap4 keyField=\"ROW_NUMBER\" data={props.records} columns={props.columns} search>\r\n                    {(props) => (\r\n                        <React.Fragment>\r\n                            <Row>\r\n                                <Col md={6} className=\"\">\r\n                                    <SearchBar {...props.searchProps} />\r\n                                </Col>    \r\n                                <Col md={6} className=\"text-right\">\r\n                                {/* <UncontrolledDropdown className=\" profile-dropdown-menu\">\r\n                <DropdownToggle\r\n                    data-toggle=\"dropdown\"\r\n                    tag=\"button\"\r\n                    className=\"btn btn-secondary dropdown-toggle bg-secondary  mr-0\">\r\n                    Download <FeatherIcon.ChevronDown />\r\n                </DropdownToggle>\r\n                <DropdownMenu right className=\"topbar-dropdown-menu profile-dropdown-items\">\r\n                    <div className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export CSV</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export PDF</ExportCSVButton>\r\n                    </div>\r\n                    <div  className=\"dropdown-item notify-item p1\">\r\n                    <ExportCSVButton className=\"btn-link\" { ...props.csvProps }>Export EXCEL</ExportCSVButton>\r\n                    </div>\r\n                </DropdownMenu>\r\n            </UncontrolledDropdown> */}\r\n                                {/* <ExportCSVButton className=\"btn-primary\" { ...props.csvProps }>Export CSV!!</ExportCSVButton> */}\r\n                                </Col>                            \r\n                            </Row>\r\n\r\n                            <BootstrapTable\r\n                                {...props.baseProps}\r\n                                bordered={false}\r\n                                defaultSorted={defaultSorted}\r\n                               // rowEvents={rowEvent}\r\n                                noDataIndication={ () => <NoDataIndication /> }\r\n                                pagination={\r\n                                    paginationFactory( \r\n                                        { \r\n                                            sizePerPage: 10, \r\n                                            sizePerPageRenderer: sizePerPageRenderer, \r\n                                            sizePerPageList: [\r\n                                                { text: '10', value: 10, }, \r\n                                                { text: '20', value: 20 }, \r\n                                                { text: '50', value: 50 }, \r\n                                                { text: 'Todos', value: ( props.records ? props.records.length : 0 ) }\r\n                                            ] \r\n                                        } \r\n                                    )\r\n                                }\r\n                                \r\n                            />\r\n                        </React.Fragment>\r\n                    )}\r\n                </ToolkitProvider>\r\n    );\r\n};\r\n\r\nconst AtsActivity = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n   let records = useSelector((state) => state.Activity.atsactivity);\r\n    useEffect(() => {\r\n        dispatch(getAtsActivityList());\r\n\r\n        // eslint-disable-next-line \r\n    }, []);\r\n\r\n    const columns = [\r\n        {\r\n            dataField: 'name',\r\n            text: 'Name.',\r\n        },\r\n        {\r\n            dataField:'activity',\r\n            text:\"Activity\"\r\n        },\r\n        {\r\n            dataField: 'activitytime',\r\n            text: 'Date And Time',\r\n        }\r\n    ];\r\n \r\n    return (\r\n        <React.Fragment>\r\n            <Row>\r\n                <Col>\r\n                    <TableWithSearch records={records} columns={columns} />\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default AtsActivity;\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Label,\r\n    FormGroup,\r\n    Button,\r\n    InputGroup,\r\n    InputGroupAddon,\r\n} from 'reactstrap';\r\nimport { AvForm, AvGroup, AvInput, AvFeedback } from 'availity-reactstrap-validation';\r\nimport { Mail, User, Phone, Slack } from 'react-feather';\r\n\r\nclass SearchResume extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 offset-md-3\">\r\n                            <AvForm onValidSubmit={this.handleValidSubmit} className=\"authentication-form card p-5\">\r\n                                \r\n                            <h5 className=\"text-uppercase  text-center\">Search By Resume</h5>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"fullname\">Search By Name</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <User className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"fullname\"\r\n                                            id=\"fullname\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"\">\r\n                                    <Label for=\"email\">search By Email</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Mail className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"email\"\r\n                                            name=\"email\"\r\n                                            id=\"email\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Search By Number</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Phone className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <AvGroup className=\"mb-3\">\r\n                                    <Label for=\"password\">Search By Skill</Label>\r\n                                    <InputGroup>\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <span className=\"input-group-text\">\r\n                                                <Slack className=\"icon-dual\" />\r\n                                            </span>\r\n                                        </InputGroupAddon>\r\n                                        <AvInput\r\n                                            type=\"text\"\r\n                                            name=\"password\"\r\n                                            id=\"password\"\r\n                                            required\r\n                                        />\r\n                                    </InputGroup>\r\n                                    <AvFeedback>This field is invalid</AvFeedback>\r\n                                </AvGroup>\r\n                                <FormGroup className=\"form-group mb-0 text-center\">\r\n                                    <Button className=\"btn-block btn btn-secondary\">\r\n                                        Search\r\n                                    </Button>\r\n                                </FormGroup>\r\n                            </AvForm>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SearchResume;\r\n","import React, { useState } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button,  Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport TargetSubmission from './TargetSubmission';\r\nimport PageTitle from '../../components/PageTitle';\r\nimport OfferAndHire from './OfferAndHire';\r\nimport Graph from './Graph';\r\nimport AtsActivity from './AtsActivity';\r\nimport SearchResume from './SearchResume';\r\nconst List = (props) => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = tab => {\r\n    if(activeTab !== tab) setActiveTab(tab);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"page-title\">\r\n                <Col md={6}>\r\n                    <PageTitle\r\n                        breadCrumbItems={[\r\n                            { label: 'Activity', path: '/activity', active: true },\r\n                        ]}\r\n                    />\r\n                </Col>\r\n                <Col md={6} className=\"text-right\">\r\n                <Button color=\"primary\"><i className=\"uil uil-plus\"></i>ADD ITEM</Button>\r\n                </Col>\r\n            </Row>\r\n      <Nav tabs className=\"requirement-tab pt-3 pb-3 nav nav-tabs row bg-white\">\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '1' })}\r\n            onClick={() => { toggle('1'); }}\r\n          >\r\n            Target / Submission\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '2' })}\r\n            onClick={() => { toggle('2'); }}\r\n          >\r\n            Offer / Hire\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '3' })}\r\n            onClick={() => { toggle('3'); }}\r\n          >\r\n            Graph\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-2\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '4' })}\r\n            onClick={() => { toggle('4'); }}\r\n          >\r\n            ATS Activity\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem className=\"col-sm-3\">\r\n          <NavLink\r\n            className={classnames({ active: activeTab === '5' })}\r\n            onClick={() => { toggle('5'); }}\r\n          >\r\n            Search Resume\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent className=\"req-tab-content\" activeTab={activeTab}>\r\n        <TabPane tabId=\"1\">\r\n         \r\n             <TargetSubmission/>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\">\r\n         <OfferAndHire/>\r\n        </TabPane>\r\n        <TabPane tabId=\"3\">\r\n          <Graph/>\r\n        </TabPane >\r\n        <TabPane tabId=\"4\">\r\n          <AtsActivity/>\r\n        </TabPane >\r\n        <TabPane tabId=\"5\">\r\n          <SearchResume/>\r\n        </TabPane >\r\n      </TabContent>\r\n      \r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Route } from 'react-router-dom';\r\nimport * as FeatherIcon from 'react-feather';\r\n\r\nimport { isUserAuthenticated, getLoggedInUser } from '../helpers/authUtils';\r\nimport Hr from '../pages/hr/Hr';\r\nimport Attendance from '../pages/attendance/Attedance';\r\nimport Activity from '../pages/acyivity/Activity';\r\nimport ViewUser from '../pages/master/usermaster/ViewUser';\r\n// auth\r\nconst Login = React.lazy(() => import('../pages/auth/Login'));\r\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\r\nconst Register = React.lazy(() => import('../pages/auth/Register'));\r\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\r\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\r\n// dashboard\r\n//const DashboardOld = React.lazy(() => import('../pages/dashboardOld'));\r\n//DashboardNew\r\nconst Dashboard =React.lazy(()=> import('../pages/dashboard/Dashboard'));\r\n//working page\r\nconst dashboardOld =React.lazy(()=>import('../pages/dashboardOld/index'));\r\n\r\n//Requirement\r\nconst Requirement =React.lazy(()=>import('../pages/requirement/Requirement'));\r\n//List\r\nconst List =React.lazy(()=>import('../pages/list/List'));\r\n//User\r\nconst Masters = React.lazy(()=> import('../pages/master/Masters'));\r\n\r\n// handle auth and authorization\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props => {\r\n            if (!isUserAuthenticated()) {\r\n                // not logged in so redirect to login page with the return url\r\n                return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\r\n            }\r\n\r\n            const loggedInUser = getLoggedInUser();\r\n            // check if route is restricted by role\r\n            if (roles && roles.indexOf(loggedInUser.role) === -1) {\r\n                // role not authorised so redirect to home page\r\n                return <Redirect to={{ pathname: '/' }} />;\r\n            }\r\n\r\n            // authorised so return component\r\n            return <Component {...props} />;\r\n        }}\r\n    />\r\n);\r\n\r\n// root routes\r\nconst rootRoute = {\r\n    path: '/',\r\n    exact: true,\r\n    component: () => <Redirect to=\"/dashboard\" />,\r\n    route: PrivateRoute,\r\n};\r\n//dashboard\r\nconst dashboardRoutes = {\r\n    path: '/dashboard',\r\n    name: 'Dashboard',\r\n    icon: FeatherIcon.Home,\r\n    component: Dashboard,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute\r\n};\r\n//Requirement\r\nconst requirementRoutes= {\r\n    path: '/reqirement',\r\n    name: 'Requirement',\r\n    component: Requirement,\r\n    route: PrivateRoute,\r\n};\r\n//List\r\nconst listRoutes= {\r\n    path: '/list',\r\n    name: 'List',\r\n    component: List,\r\n    route: PrivateRoute,\r\n};\r\n//Attendance\r\nconst attendanceRoutes= {\r\n    path: '/attendance',\r\n    name: 'Attendance',\r\n    component: Attendance,\r\n    route: PrivateRoute,\r\n};\r\n//activity\r\nconst activityRoutes = {\r\n    path: '/activity',\r\n    name: 'Activity',\r\n    icon: FeatherIcon.Activity,\r\n    component: Activity,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute\r\n};\r\n//Hr\r\nconst hrRoutes = {\r\n    path: '/hr',\r\n    name: 'HR',\r\n    icon: FeatherIcon.Aperture,\r\n    component: Hr,\r\n    roles: ['Admin'],\r\n    route: PrivateRoute\r\n};\r\n// Master\r\n\r\nconst masterRoutes = {\r\n    path: '/master/user',\r\n    name: 'Master',\r\n    icon: FeatherIcon.FileText,\r\n    component: Masters,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n//View user\r\nconst viewUserRoutes= {\r\n    path: '/viewuser',\r\n    name: 'View User',\r\n    component: ViewUser,\r\n    route: PrivateRoute,\r\n};\r\n//clientwisesales\r\nconst clientWiseSalesRoutes = {\r\n    path: '/clientwisesales',\r\n    name: 'Client Wise Sales',\r\n    icon: FeatherIcon.User,\r\n    component: dashboardOld,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n//Report\r\nconst reportRoutes = {\r\n    path: '/report',\r\n    name: 'Report',\r\n    icon: FeatherIcon.FileText,\r\n    component: dashboardOld,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n//Revenue\r\nconst revenueRoutes = {\r\n    path: '/revenue',\r\n    name: 'Sales',\r\n    icon: FeatherIcon.Shield,\r\n    component: dashboardOld,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n//Aspl\r\nconst asplRoutes = {\r\n    path: '/aspl',\r\n    name: 'ASPL',\r\n    icon: FeatherIcon.Download,\r\n    component: dashboardOld,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n//Rt\r\nconst rtRoutes = {\r\n    path: '/rt',\r\n    name: 'RT',\r\n    icon: FeatherIcon.Download,\r\n    component: dashboardOld,\r\n    route: PrivateRoute,\r\n    roles: ['Admin'],\r\n};\r\n\r\n// auth\r\nconst authRoutes = {\r\n    path: '/account',\r\n    name: 'Auth',\r\n    children: [\r\n        {\r\n            path: '/account/login',\r\n            name: 'Login',\r\n            component: Login,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/logout',\r\n            name: 'Logout',\r\n            component: Logout,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/register',\r\n            name: 'Register',\r\n            component: Register,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/confirm',\r\n            name: 'Confirm',\r\n            component: Confirm,\r\n            route: Route,\r\n        },\r\n        {\r\n            path: '/account/forget-password',\r\n            name: 'Forget Password',\r\n            component: ForgetPassword,\r\n            route: Route,\r\n        },\r\n    ],\r\n};\r\n\r\n// flatten the list of all nested routes\r\nconst flattenRoutes = routes => {\r\n    let flatRoutes = [];\r\n\r\n    routes = routes || [];\r\n    routes.forEach(item => {\r\n        flatRoutes.push(item);\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\r\n        }\r\n    });\r\n    return flatRoutes;\r\n};\r\n\r\n// All routes\r\nconst allRoutes = [    \r\n    authRoutes,\r\n    rootRoute,\r\n    dashboardRoutes,\r\n    activityRoutes,\r\n    hrRoutes,\r\n    masterRoutes,\r\n    clientWiseSalesRoutes,\r\n    reportRoutes,\r\n    revenueRoutes,\r\n    asplRoutes,\r\n    rtRoutes,\r\n    requirementRoutes,\r\n    attendanceRoutes,\r\n    listRoutes,\r\n    viewUserRoutes\r\n];\r\n\r\nconst authProtectedRoutes = [dashboardRoutes, activityRoutes, hrRoutes, masterRoutes, clientWiseSalesRoutes,reportRoutes,revenueRoutes,asplRoutes,rtRoutes];\r\nconst allFlattenRoutes = flattenRoutes(allRoutes);\r\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport Loadable from 'react-loadable';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { isUserAuthenticated } from '../helpers/authUtils';\r\nimport * as layoutConstants from '../constants/layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n// Lazy loading and code splitting -\r\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\r\nconst loading = () => <div></div>;\r\n\r\n// All layouts/containers\r\nconst AuthLayout = Loadable({\r\n    loader: () => import('../layouts/Auth'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst VerticalLayout = Loadable({\r\n    loader: () => import('../layouts/Vertical'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nconst HorizontalLayout = Loadable({\r\n    loader: () => import('../layouts/Horizontal'),\r\n    render(loaded, props) {\r\n        let Component = loaded.default;\r\n        return <Component {...props} />;\r\n    },\r\n    loading,\r\n});\r\n\r\nclass Routes extends Component {\r\n\r\n    // returns the layout\r\n    getLayout = () => {\r\n        if (!isUserAuthenticated()) return AuthLayout;\r\n\r\n        let layoutCls = VerticalLayout;\r\n\r\n        switch (this.props.layout.layoutType) {\r\n            case layoutConstants.LAYOUT_HORIZONTAL:\r\n                layoutCls = HorizontalLayout;\r\n                break;\r\n            default:\r\n                layoutCls = VerticalLayout;\r\n                break;\r\n        }\r\n        return layoutCls;\r\n    }\r\n\r\n    render() {\r\n        const Layout = this.getLayout();\r\n        \r\n        // rendering the router with layout\r\n        return <BrowserRouter>\r\n            <Layout {...this.props}>\r\n                <Switch>\r\n                    {routes.map((route, index) => {\r\n                        return (\r\n                            !route.children ?\r\n                                <route.route\r\n                                    key={index}\r\n                                    path={route.path}\r\n                                    roles={route.roles}\r\n                                    exact={route.exact}\r\n                                    component={route.component}></route.route>\r\n                                : null\r\n                        );\r\n                    })}\r\n                </Switch>\r\n            </Layout>\r\n        </BrowserRouter>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        layout: state.Layout,\r\n        user: state.Auth.user,\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null\r\n)(Routes);\r\n","export function configureFakeBackend() {\r\n    let users = [{ id: 1, username: 'test', password: 'test', firstName: 'Test', lastName: 'User', role: 'Admin' }];\r\n    let realFetch = window.fetch;\r\n    window.fetch = function(url, opts) {\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username && user.password === params.password;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            username: user.username,\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            role: 'Admin',\r\n                            token:\r\n                                'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Username or password is incorrect');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // register\r\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // add new users\r\n                    let { firstName, lastName } = params.fullname.split(' ');\r\n                    let newUser = {\r\n                        id: users.length + 1,\r\n                        username: firstName,\r\n                        password: params.password,\r\n                        firstName: firstName,\r\n                        lastName: lastName,\r\n                        role: 'Admin',\r\n                    };\r\n                    users.push({ newUser });\r\n\r\n                    let responseJson = {\r\n                        id: newUser.id,\r\n                        username: newUser.username,\r\n                        firstName: newUser.firstName,\r\n                        lastName: newUser.lastName,\r\n                        role: newUser.role,\r\n                        token:\r\n                            'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU',\r\n                    };\r\n                    resolve({ ok: true, json: () => responseJson });\r\n                    return;\r\n                }\r\n\r\n                // forget password\r\n                if (url.endsWith('/users/password-reset') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.username === params.username;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        let responseJson = {\r\n                            message: \"We've sent you a link to reset password to your registered email.\",\r\n                        };\r\n                        resolve({ ok: true, json: () => responseJson });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Sorry, we could not find any registered user with entered username');\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (\r\n                        opts.headers &&\r\n                        opts.headers.Authorization ===\r\n                            'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjb2RlcnRoZW1lcyIsImlhdCI6MTU4NzM1NjY0OSwiZXhwIjoxOTAyODg5NDQ5LCJhdWQiOiJjb2RlcnRoZW1lcy5jb20iLCJzdWIiOiJzdXBwb3J0QGNvZGVydGhlbWVzLmNvbSIsImxhc3ROYW1lIjoiVGVzdCIsIkVtYWlsIjoic3VwcG9ydEBjb2RlcnRoZW1lcy5jb20iLCJSb2xlIjoiQWRtaW4iLCJmaXJzdE5hbWUiOiJTaHJleXUifQ.D-isMYoGH6Ah4i_dHxplgJNGtXTLEqZYvha_ULSJRFU'\r\n                    ) {\r\n                        resolve({ ok: true, json: () => users });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => resolve(response));\r\n            }, 500);\r\n        });\r\n    };\r\n}\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// setup fake backend\r\nimport { configureFakeBackend } from './helpers';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n// dark\r\n// import './assets/scss/theme-dark.scss';\r\n\r\n// rtl\r\n// import './assets/scss/theme-rtl.scss';\r\n\r\n\r\n// configure fake backend\r\nconfigureFakeBackend();\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n  render() {\r\n    return <Routes></Routes>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\nimport * as layoutConstants from '../../constants/layout';\r\n\r\nconst INIT_STATE = {\r\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\r\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\r\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\r\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\r\n    showRightSidebar: false,\r\n};\r\n\r\n\r\nconst Layout = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layoutType: action.payload,\r\n            };\r\n        case CHANGE_LAYOUT_WIDTH:\r\n            return {\r\n                ...state,\r\n                layoutWidth: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_THEME:\r\n            return {\r\n                ...state,\r\n                leftSideBarTheme: action.payload,\r\n            };\r\n        case CHANGE_SIDEBAR_TYPE:\r\n            return {\r\n                ...state,\r\n                leftSideBarType: action.payload,\r\n            };\r\n        case TOGGLE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: !state.showRightSidebar,\r\n            };\r\n        case SHOW_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: true,\r\n            };\r\n        case HIDE_RIGHT_SIDEBAR:\r\n            return {\r\n                ...state,\r\n                showRightSidebar: false,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default Layout;\r\n","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\nimport { getLoggedInUser } from '../../helpers/authUtils';\r\n\r\nconst INIT_STATE = {\r\n    user: getLoggedInUser(),\r\n    loading: false,\r\n};\r\n\r\n\r\nconst Auth = (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case LOGIN_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, user: action.payload, loading: false, error: null };\r\n        case REGISTER_USER_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null };\r\n        case FORGET_PASSWORD:\r\n            return { ...state, loading: true };\r\n        case FORGET_PASSWORD_SUCCESS:\r\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\r\n        case FORGET_PASSWORD_FAILED:\r\n            return { ...state, error: action.payload, loading: false };\r\n        default:\r\n            return { ...state };\r\n    }\r\n};\r\n\r\nexport default Auth;\r\n","// @flow\r\nimport {\r\n    INIT_MENU,\r\n    INIT_MENU_SUCCESS,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\r\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\r\n} from './constants';\r\n\r\n\r\nconst AppMenu = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case INIT_MENU:\r\n            return action.payload;\r\n        case INIT_MENU_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\r\n            return { ...state };\r\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppMenu;\r\n","import {GET_USER_LIST_REQUEST,  SET_USER_LIST_REQUEST, ADD_USER_REQUEST, GET_ERROR} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    users: [],\r\n    user:{},\r\n    loading:false,\r\n    error:''\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_USER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_USER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                users: action.payload,\r\n                loading:false\r\n            };\r\n            case  ADD_USER_REQUEST:\r\n            return{\r\n                ...state,\r\n                user: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_ERROR:\r\n                return{\r\n                    ...state,\r\n                    error: action.payload\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_REQUIREMENTS_LIST_REQUEST, SET_REQUIREMENTS_LIST_REQUEST,\r\n    GET_CRITICAL_REQUIREMENTS_LIST, SET_CRITICAL_REQUIREMENTS_LIST,\r\n    SAVE_REQUIREMENTS, SET_SAVE_REQUIREMENTS,\r\n     GET_REQUIREMENTS_MODAL,  HIDE_REQUIREMENTS_MODAL} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    requirements: [],\r\n    criticalreq:[],\r\n    requirement: {},\r\n    loading:false,\r\n    jid:'',\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_REQUIREMENTS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case  SET_REQUIREMENTS_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                requirements: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_CRITICAL_REQUIREMENTS_LIST:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case  SET_CRITICAL_REQUIREMENTS_LIST:\r\n            return{\r\n                ...state,\r\n                criticalreq: action.payload,\r\n                loading:false\r\n            };\r\n            case SAVE_REQUIREMENTS:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_SAVE_REQUIREMENTS:\r\n            return{\r\n                ...state,\r\n                requirement: action.payload,\r\n                loading:false\r\n            };\r\n            case GET_REQUIREMENTS_MODAL:\r\n                return{\r\n                    ...state,\r\n                    modal: true\r\n                };\r\n            case HIDE_REQUIREMENTS_MODAL:\r\n                return{\r\n                    ...state,\r\n                    requirement: null,\r\n                    modal: false\r\n                }\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_CLIENT_LIST_REQUEST,  SET_CLIENT_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    clients: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_CLIENT_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_CLIENT_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                clients: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_RECRUITER_LIST_REQUEST,  SET_RECRUITER_LIST_REQUEST} from './constants'\r\nconst INIT_STATE = {\r\n    recruiters: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_RECRUITER_LIST_REQUEST: \r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_RECRUITER_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                recruiters: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_ATTENDANCE_LIST_REQUEST,  SET_ATTENDANCE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    attendance: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_ATTENDANCE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_ATTENDANCE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                attendance: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    GET_LIST_LIST_REQUEST,\r\n    SET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    SET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    SET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    SET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST,\r\n    SET_BD_LIST_REQUEST\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    list: [],\r\n    offer: [],\r\n    viewtobejoin:[],\r\n    joinlist:[],\r\n    bdlist:[],\r\n    loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_LIST_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                //list: action.payload,\r\n                loading: true,\r\n            };\r\n        case SET_LIST_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                list: action.payload,\r\n                loading: false,\r\n            };\r\n        case GET_OFFER_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                //list: action.payload,\r\n                loading: true,\r\n            };\r\n        case SET_OFFER_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                offer: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_VTBJ_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    //list: action.payload,\r\n                    loading: true,\r\n                };\r\n            case SET_VTBJ_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    viewtobejoin: action.payload,\r\n                    loading: false,\r\n                };\r\n                case GET_JOIN_LIST_REQUEST:\r\n                    return {\r\n                        ...state,\r\n                        //list: action.payload,\r\n                        loading: true,\r\n                    };\r\n                case SET_JOIN_LIST_REQUEST:\r\n                    return {\r\n                        ...state,\r\n                        joinlist: action.payload,\r\n                        loading: false,\r\n                    };\r\n                    case GET_BD_LIST_REQUEST:\r\n                        return {\r\n                            ...state,\r\n                            //list: action.payload,\r\n                            loading: true,\r\n                        };\r\n                    case SET_BD_LIST_REQUEST:\r\n                        return {\r\n                            ...state,\r\n                            bdlist: action.payload,\r\n                            loading: false,\r\n                        };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {\r\n    GET_DT_LIST_REQUEST,\r\n    SET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    SET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    SET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    SET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST,\r\n    SET_ATSACTI_LIST_REQUEST\r\n} from './constants';\r\n\r\nconst INIT_STATE = {\r\n    dailytarget: [],\r\n    todaysinterview: [],\r\n    monthoffer:[],\r\n    monthtobejoin:[],\r\n    atsactivity:[],\r\n    loading: false,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case GET_DT_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_DT_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                dailytarget: action.payload,\r\n                loading: false,\r\n            };\r\n        case GET_TOIN_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_TOIN_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                todaysinterview: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_MONOF_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case SET_MONOF_LIST_REQUEST:\r\n            return {\r\n                ...state,\r\n                monthoffer: action.payload,\r\n                loading: false,\r\n            };\r\n            case GET_MONTHJOIN_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                };\r\n            case SET_MONTHJOIN_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    monthtobejoin: action.payload,\r\n                    loading: false,\r\n                };\r\n                case GET_ATSACTI_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    loading: true,\r\n                };\r\n            case SET_ATSACTI_LIST_REQUEST:\r\n                return {\r\n                    ...state,\r\n                    atsactivity: action.payload,\r\n                    loading: false,\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import {GET_TEAM_LIST_REQUEST,  SET_TEAM_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    teams: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_TEAM_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_TEAM_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                teams: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {GET_ROLE_LIST_REQUEST,  SET_ROLE_LIST_REQUEST} from './constants'\r\n\r\nconst INIT_STATE = {\r\n    role: [],\r\n    loading:false\r\n}\r\n\r\nexport default( state = INIT_STATE, action ) => {\r\n    switch( action.type ){\r\n        case GET_ROLE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                //requirement: action.payload,\r\n                loading:true\r\n            };\r\n        case  SET_ROLE_LIST_REQUEST:\r\n            return{\r\n                ...state,\r\n                role: action.payload,\r\n                loading:false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};","// @flow\r\n\r\nimport { combineReducers } from 'redux';\r\nimport Layout from './layout/reducers';\r\nimport Auth from './auth/reducers';\r\nimport AppMenu from './appMenu/reducers';\r\nimport Users from './user/reducers'\r\nimport Requirements from './requirement/reducers';\r\nimport Client from './client/reducers';\r\nimport Recruiter from './recruiter/reducers';\r\nimport Attendance from './attendance/reducers';\r\nimport List from './list/reducers';\r\nimport Activity from './activity/reducers';\r\nimport Teams from './teammaster/reducers';\r\nimport Role from './role/reducers';\r\nexport default combineReducers({\r\n    Auth,\r\n    AppMenu,\r\n    Layout,\r\n    Users,\r\n    Requirements,\r\n    Client,\r\n    Recruiter,\r\n    Attendance,\r\n    List,\r\n    Activity,\r\n    Teams,\r\n    Role\r\n});\r\n","/**\r\n * Fetch data from given url\r\n * @param {*} url\r\n * @param {*} options\r\n */\r\nconst fetchJSON = (url, options = {}) => {\r\n    return fetch(url, options)\r\n        .then(response => {\r\n            if (!response.status === 200) {\r\n                throw response.json();\r\n            }\r\n            return response.json();\r\n        })\r\n        .then(json => {\r\n            return json;\r\n        })\r\n        .catch(error => {\r\n            throw error;\r\n        });\r\n};\r\n\r\nexport { fetchJSON };\r\n","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed,\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = user => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/authenticate', options);\r\n        setSession(response);\r\n        console.log(\"working\");\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;\r\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\r\n/**\r\n * Flatten the nested list of menu items\r\n */\r\nlet uuid = 1;\r\n\r\nconst assignIdAndParent = (menuItems, parentId) => {\r\n    menuItems = menuItems || [];\r\n    menuItems.forEach(item => {\r\n        const id = item.id || uuid;\r\n        uuid += 1;\r\n        item.id = id;\r\n        item.parentId = item.parentId || parentId;\r\n        item.active = false;\r\n\r\n        if (typeof item.children !== 'undefined') {\r\n            assignIdAndParent(item.children, id);\r\n        }\r\n    });\r\n};\r\n\r\nexport default (menuItems) => {\r\n    assignIdAndParent(menuItems);\r\n    return menuItems;\r\n};\r\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","import axios from 'axios';\r\n//import { setSession } from './authUtils';\r\n\r\nconst api = axios.create( {\r\n    baseURL : process.env.REACT_APP_BACKEND_URL,\r\n} );\r\n\r\napi.interceptors.response.use( \r\n    ( response ) => {\r\n        return response;\r\n    },\r\n    ( error ) => {\r\n        const originalRequest = error.config;\r\n        let guid = localStorage.getItem( 'crolGUID' );\r\n        delete api.defaults.headers.common['Authorization'];\r\n\r\n        if( guid && error.response.status === 401 && !originalRequest._retry ) {\r\n            originalRequest._retry = true;\r\n            return axios\r\n                .post( `${process.env.REACT_APP_BACKEND_URL}/auth`, { GUID: guid } )\r\n                .then( ( res ) => {\r\n                    if( res.status === 200 ){\r\n                       // setSession( res.data.token, '' );\r\n                        originalRequest.headers.Authorization = `Bearer ` + res.data.token;\r\n                        return axios( originalRequest );\r\n                    }\r\n                } );\r\n        }\r\n\r\n        return Promise.reject( error );\r\n    }\r\n );\r\n\r\nexport default api;","import api from './axios';\r\n\r\n\r\n export const getRequirementList = () => {\r\n    return api.get( '/Requirement_Master' );\r\n };\r\n export const getCriticleRequirementList = () => {\r\n   return api.get( '/CriticalRequirement' );\r\n};\r\n\r\n export const editRequirement = () => {\r\n    return api.get( `/Requirement_Master` );\r\n };\r\n\r\n export const getClientList = () => {\r\n   return api.get( '/client_master' );\r\n};\r\n\r\nexport const setClient = ( clients ) => {\r\n   return api.post( '/client_master', clients );\r\n};\r\nexport const getRecruiterList = () => {\r\n   return api.get( '/Recruiter_Mst' );\r\n};\r\n\r\nexport const setRecruiter = ( recruiters ) => {\r\n   return api.post( '/Recruiter_Mst', recruiters );\r\n};\r\n\r\n\r\n/** Puestos endpoints */\r\n\r\nexport const getRqsList = () => {\r\n   return api.get( '/Recruiter_Mst' );\r\n};\r\n\r\nexport const setRqs = ( puesto ) => {\r\n   return api.post( '/Recruiter_Mst', puesto );\r\n};\r\nexport const getAttendance = () => {\r\n   return api.get( '/Attendance_Master' );\r\n};\r\nexport const setAttendance = ( attendance ) => {\r\n   return api.post( 'Attendance_Master', attendance );\r\n};\r\n\r\nexport const getListList = () => {\r\n   return api.get( '/OfferList' );\r\n};\r\n\r\n//offer List\r\nexport const getOfferList = () => {\r\n   return api.get( '/OfferList' );\r\n};\r\n//ViewToBeJoin\r\nexport const getViewToBeJoinList = () => {\r\n   return api.get( '/TobeJoinList' );\r\n};\r\n//JoinList\r\nexport const getJoinList = () => {\r\n   return api.get( '/GetStartList' );\r\n};\r\n//BDList\r\nexport const getBDList = () => {\r\n   return api.get( '/BDList' );\r\n};\r\n\r\n//ACtivity Pages Daily Target \r\n//Daily Target List\r\nexport const getDailyTargetList = () => {\r\n   return api.get( '/DailyTarget' );\r\n};\r\n//TodaysInterview\r\nexport const getTodaysInterviewtList = () => {\r\n   return api.get( '/TodaysInterview' );\r\n};\r\n//Month Offer\r\nexport const getMonthOfferList = () => {\r\n   return api.get( '/MonthOffer' );\r\n};\r\n//Month to Be Join\r\nexport const getMonthToBeJoinList = () => {\r\n   return api.get( '/MonthToBeJoin' );\r\n};\r\n//ATS Activity\r\nexport const getAtsActivityList = () => {\r\n   return api.get( '/ActivityMaster' );\r\n};\r\n//Team master\r\nexport const getTeamList = () => {\r\n   return api.get( '/TeamMaster' );\r\n};\r\n//User master \r\nexport const getUserList = () => {\r\n   return api.get( '/User_Master' );\r\n};\r\nexport const setUser = (user) => {\r\n   return api.post( '/User_Master',user);\r\n};\r\n//Role master \r\nexport const getRoleList = () => {\r\n   return api.get( '/UserRole_Master' );\r\n};\r\n/** Departamentos endpoints */\r\nexport const getDepartamentosList = () =>{\r\n    return api.get( '/Requirement_Master' );\r\n };\r\n \r\n export const setDepartamento = ( departamento ) => {\r\n    return api.post( '/Requirement_Master', departamento );\r\n };\r\n \r\n/** Auth */\r\nexport const loginUser = ( token ) => {\r\n   return api.post( '/login', {'GUID': token} );\r\n};\r\n\r\nexport const getUserImage = ( userId ) => {\r\n   return api.post( '/auth/userimage', { 'id': userId } );\r\n}\r\n\r\n/** Validate windows focus */\r\nexport const getWindowFocusRequest = ( token ) => {\r\n   return api.get( `/auth/verifysession/${token}` );\r\n};","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport swal from 'sweetalert';\r\nimport {\r\n    ADD_USER,\r\n    GET_USER_LIST_REQUEST,\r\n    //SET_USER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getUserList () {\r\n    try {\r\n        const response = yield  call( api.getUserList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.getUser( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.getUser( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setUser( action ){\r\n    try {\r\n        const result = yield call( api.setUser, action.payload );\r\n        yield put( actions.setUserRquest( result.data ) );\r\n        yield call( getUserList );\r\n        console.log(result.data);\r\n        // swal({\r\n        //     title: \"User Created Successfully\",\r\n        //     text: \"User Created Successfully\",\r\n        //     icon: \"success\",\r\n        //   });\r\n    } catch (error) {\r\n        console.log(error);\r\n        swal({\r\n            title: error,\r\n            text: error,\r\n            icon: \"Warning\",\r\n          });\r\n       \r\n    }\r\n}\r\nfunction* watchGetUserRequest(){\r\n    yield takeEvery( GET_USER_LIST_REQUEST, getUserList );\r\n}\r\nfunction* watchSetUser(){\r\n    yield takeEvery( ADD_USER, setUser );\r\n}\r\nfunction* userSagas() {\r\n    yield all([\r\n        fork( watchGetUserRequest ),\r\n        fork( watchSetUser ),\r\n    ]);\r\n}\r\n\r\nexport default userSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_REQUIREMENTS_LIST_REQUEST,\r\n    SET_SAVE_REQUIREMENTS,\r\n    GET_CRITICAL_REQUIREMENTS_LIST\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRequirementList () {\r\n    try {\r\n        const response = yield  call( api.getRequirementList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRequirement( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRequirement( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* setSaveRequirement( action ){\r\n        let result = yield call( api.getRequirementList, action.payload, action.jid );\r\n        yield put( action.setSaveRequirement( result.data ) );\r\n    \r\n}\r\nfunction* watchGetRequirementRequest(){\r\n    yield takeEvery( GET_REQUIREMENTS_LIST_REQUEST, getRequirementList );\r\n}\r\nfunction* watchSetSaveRequirement(){\r\n    yield takeEvery( SET_SAVE_REQUIREMENTS, setSaveRequirement );\r\n}\r\nfunction* getCriticalRequirementList () {\r\n    try {\r\n        const response = yield  call( api.getCriticleRequirementList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setCriticalRequirement( response.data.Data ) );\r\n        //console.log(response.data, \"Critical saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setCriticalRequirement( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchCriticalRequirement(){\r\n    yield takeEvery( GET_CRITICAL_REQUIREMENTS_LIST, getCriticalRequirementList );\r\n}\r\nfunction* requirementSagas() {\r\n    yield all([\r\n        fork( watchGetRequirementRequest ),\r\n        fork(watchSetSaveRequirement ),\r\n        fork(watchCriticalRequirement)\r\n    ]);\r\n}\r\n\r\nexport default requirementSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_CLIENT_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getClientList () {\r\n    try {\r\n        const response = yield  call( api.getClientList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setClient( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setClient( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setClient( action ){\r\n//     try {\r\n//         const result = yield call( api.setClient, action.payload );\r\n//         yield put( actions.setClient( result.data ) );\r\n//         yield call( getClientList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetClientRequest(){\r\n    yield takeEvery( GET_CLIENT_LIST_REQUEST, getClientList );\r\n}\r\n\r\nfunction* clientSagas() {\r\n    yield all([\r\n        fork( watchGetClientRequest ),\r\n    ]);\r\n}\r\n\r\nexport default clientSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_RECRUITER_LIST_REQUEST,\r\n   // SET_RECRUITER_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRecruiterList () {\r\n    try {\r\n        const response = yield  call( api.getRecruiterList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRecruiter( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRecruiter( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setRecruiter( action ){\r\n//     try {\r\n//         const result = yield call( api.setRecruiter, action.payload );\r\n//         yield put( actions.setRecruiter( result.data ) );\r\n//         yield call( getRecruiterList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetRecruiterRequest(){\r\n    yield takeEvery( GET_RECRUITER_LIST_REQUEST, getRecruiterList );\r\n}\r\n\r\nfunction* recruiterSagas() {\r\n    yield all([\r\n        fork( watchGetRecruiterRequest ),\r\n    ]);\r\n}\r\n\r\nexport default recruiterSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_ATTENDANCE_LIST_REQUEST,\r\n    //SET_CLIENT_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getAttendanceList () {\r\n    try {\r\n        const response = yield  call( api.getAttendance );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setAttendance( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setAttendance( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setAttendance( action ){\r\n//     try {\r\n//         const result = yield call( api.setAttendance, action.payload );\r\n//         yield put( actions.setAttendance( result.data ) );\r\n//         yield call( getAttendanceList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetAttendanceRequest(){\r\n    yield takeEvery( GET_ATTENDANCE_LIST_REQUEST, getAttendanceList );\r\n}\r\n\r\nfunction* attendanceSagas() {\r\n    yield all([\r\n        fork( watchGetAttendanceRequest ),\r\n    ]);\r\n}\r\n\r\nexport default attendanceSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_LIST_LIST_REQUEST,\r\n    GET_OFFER_LIST_REQUEST,\r\n    GET_VTBJ_LIST_REQUEST,\r\n    GET_JOIN_LIST_REQUEST,\r\n    GET_BD_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getListList () {\r\n    try {\r\n        const response = yield  call( api.getListList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetListRequest(){\r\n    yield takeEvery( GET_LIST_LIST_REQUEST, getListList );\r\n}\r\n//offer\r\nfunction* getOfferList () {\r\n    try {\r\n        const response = yield  call( api.getOfferList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setOfferList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setOfferList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetOfferRequest(){\r\n    yield takeEvery( GET_OFFER_LIST_REQUEST, getOfferList );\r\n}\r\n//view to be join\r\nfunction* getViewToBeJoinList () {\r\n    try {\r\n        const response = yield  call( api.getViewToBeJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setViewToBeJoinList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setViewToBeJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetViewToBeJoinRequest(){\r\n    yield takeEvery( GET_VTBJ_LIST_REQUEST, getViewToBeJoinList );\r\n}\r\n\r\n//Join List\r\nfunction* getJoinList () {\r\n    try {\r\n        const response = yield  call( api.getJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setJoinList( response.data.Data ) );\r\n        //console.log(response.data)\r\n       }\r\n       else{\r\n        yield put( actions.setJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetJoinRequest(){\r\n    yield takeEvery( GET_JOIN_LIST_REQUEST, getJoinList );\r\n}\r\n\r\n//BD List\r\nfunction* getBDList () {\r\n    try {\r\n        const response = yield  call( api.getBDList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setBDList( response.data.Data ) );\r\n        //console.log(response.data)\r\n       }\r\n       else{\r\n        yield put( actions.setBDList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetBDRequest(){\r\n    yield takeEvery( GET_BD_LIST_REQUEST, getBDList );\r\n}\r\n\r\nfunction* listSagas() {\r\n    yield all([\r\n        fork( watchGetListRequest ),\r\n        fork( watchGetOfferRequest ),\r\n        fork( watchGetViewToBeJoinRequest ),\r\n        fork( watchGetJoinRequest ),\r\n        fork( watchGetBDRequest ),\r\n    ]);\r\n}\r\n\r\nexport default listSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_DT_LIST_REQUEST,\r\n    GET_TOIN_LIST_REQUEST,\r\n    GET_MONOF_LIST_REQUEST,\r\n    GET_MONTHJOIN_LIST_REQUEST,\r\n    GET_ATSACTI_LIST_REQUEST\r\n} from './constants'\r\n\r\n//Daily Target Submission\r\nfunction* getDailyTargetList () {\r\n    try {\r\n        const response = yield  call( api.getDailyTargetList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setDailyTargetList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setDailyTargetList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetDailyTargetRequest(){\r\n    yield takeEvery( GET_DT_LIST_REQUEST, getDailyTargetList );\r\n}\r\n// Todays Interview\r\nfunction* getTodaysInterviewList () {\r\n    try {\r\n        const response = yield  call( api.getTodaysInterviewtList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTodaysInterviewList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setTodaysInterviewList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetTodaysInterviewRequest(){\r\n    yield takeEvery( GET_TOIN_LIST_REQUEST, getTodaysInterviewList );\r\n}\r\n// Month Offer\r\nfunction* getMonthOfferList () {\r\n    try {\r\n        const response = yield  call( api.getMonthOfferList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthOfferList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setMonthOfferList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthOfferRequest(){\r\n    yield takeEvery( GET_MONOF_LIST_REQUEST, getMonthOfferList );\r\n}\r\n\r\n// Month to be join\r\nfunction* getMonthToBeJoinList () {\r\n    try {\r\n        const response = yield  call( api.getMonthToBeJoinList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setMonthToBeJoinList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setMonthToBeJoinList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetMonthToBeJoinRequest(){\r\n    yield takeEvery( GET_MONTHJOIN_LIST_REQUEST, getMonthToBeJoinList );\r\n}\r\n// Ats activity\r\nfunction* getAtsActivityList () {\r\n    try {\r\n        const response = yield  call( api.getAtsActivityList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setAtsActivityList( response.data.Data ) );\r\n       }\r\n       else{\r\n        yield put( actions.setAtsActivityList( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\nfunction* watchGetAtsActivityRequest(){\r\n    yield takeEvery( GET_ATSACTI_LIST_REQUEST, getAtsActivityList );\r\n}\r\nfunction* activitySagas() {\r\n    yield all([\r\n        fork( watchGetDailyTargetRequest ),\r\n        fork( watchGetTodaysInterviewRequest ),\r\n        fork( watchGetMonthOfferRequest ),\r\n        fork(watchGetMonthToBeJoinRequest),\r\n        fork(watchGetAtsActivityRequest),\r\n    ]);\r\n}\r\n\r\nexport default activitySagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_TEAM_LIST_REQUEST,\r\n    //SET_TEAM_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getTeamList () {\r\n    try {\r\n        const response = yield  call( api.getTeamList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setTeam( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setTeam( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setTeam( action ){\r\n//     try {\r\n//         const result = yield call( api.setTeam, action.payload );\r\n//         yield put( actions.setTeam( result.data ) );\r\n//         yield call( getTeamList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetTeamRequest(){\r\n    yield takeEvery( GET_TEAM_LIST_REQUEST, getTeamList );\r\n}\r\n\r\nfunction* teamSagas() {\r\n    yield all([\r\n        fork( watchGetTeamRequest ),\r\n    ]);\r\n}\r\n\r\nexport default teamSagas;\r\n","import { fork, takeEvery, call, put, all } from 'redux-saga/effects';\r\nimport * as api from '../../helpers/restApi';\r\nimport * as actions from './actions';\r\nimport {\r\n    GET_ROLE_LIST_REQUEST,\r\n    //SET_ROLE_LIST_REQUEST\r\n} from './constants'\r\n\r\n\r\nfunction* getRoleList () {\r\n    try {\r\n        const response = yield  call( api.getRoleList );\r\n       if (response.data && response.data.Data) {\r\n        yield put( actions.setRole( response.data.Data ) );\r\n        //console.log(response.data, \"Require saga working\")\r\n       }\r\n       else{\r\n        yield put( actions.setRole( [] ) );\r\n       }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n// function* setRole( action ){\r\n//     try {\r\n//         const result = yield call( api.setRole, action.payload );\r\n//         yield put( actions.setRole( result.data ) );\r\n//         yield call( getRoleList );\r\n//     } catch (error) {\r\n//         console.log(error);\r\n       \r\n//     }\r\n// }\r\nfunction* watchGetRoleRequest(){\r\n    yield takeEvery( GET_ROLE_LIST_REQUEST, getRoleList );\r\n}\r\n\r\nfunction* roleSagas() {\r\n    yield all([\r\n        fork( watchGetRoleRequest ),\r\n    ]);\r\n}\r\n\r\nexport default roleSagas;\r\n","// @flow\r\nimport { all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport layoutSaga from './layout/saga';\r\nimport appMenuSaga from './appMenu/saga';\r\nimport userSaga from './user/sagas';\r\nimport requirementSagas from './requirement/sagas';\r\nimport clientSagas from './client/sagas';\r\nimport recruiterSagas from './recruiter/sagas';\r\nimport attendanceSagas from './attendance/sagas';\r\nimport listSagas from './list/sagas';\r\nimport activitySagas from './activity/sagas';\r\nimport teamSagas from './teammaster/sagas';\r\nimport roleSagas from './role/sagas';\r\nexport default function* rootSaga(getState: any): any {\r\n    yield all( [\r\n        authSaga(), \r\n        layoutSaga(), \r\n        appMenuSaga(), \r\n        userSaga(),\r\n        requirementSagas(),\r\n        clientSagas(),\r\n       recruiterSagas(),\r\n       attendanceSagas(),\r\n       listSagas(),\r\n       activitySagas(),\r\n       teamSagas(),\r\n       roleSagas(),\r\n    ] );\r\n}\r\n","// @flow\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport reducers from './reducers';\r\nimport sagas from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState: {}) {\r\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\r\n    sagaMiddleware.run(sagas);\r\n    return store;\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n    <Provider store={configureStore()}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n","/* Layout types and other constants */\r\n\r\nexport const LAYOUT_VERTICAL = 'vertical';\r\nexport const LAYOUT_HORIZONTAL = 'topnav';\r\n\r\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\r\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\r\n\r\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\r\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\r\n\r\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\r\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\r\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\r\n","\r\n/** List of Client */\r\nexport const GET_ATTENDANCE_LIST_REQUEST = 'GET_ATTENDANCE_LIST_REQUEST';\r\nexport const SET_ATTENDANCE_LIST_REQUEST = 'SET_ATTENDANCE_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_CLIENT_LIST_REQUEST = 'GET_CLIENT_LIST_REQUEST';\r\nexport const SET_CLIENT_LIST_REQUEST = 'SET_CLIENT_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_RECRUITER_LIST_REQUEST = 'GET_RECRUITER_LIST_REQUEST';\r\nexport const SET_RECRUITER_LIST_REQUEST = 'SET_RECRUITER_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_TEAM_LIST_REQUEST = 'GET_TEAM_LIST_REQUEST';\r\nexport const SET_TEAM_LIST_REQUEST = 'SET_TEAM_LIST_REQUEST';\r\n\r\n","\r\n/** List of Client */\r\nexport const GET_ROLE_LIST_REQUEST = 'GET_ROLE_LIST_REQUEST';\r\nexport const SET_ROLE_LIST_REQUEST = 'SET_ROLE_LIST_REQUEST';\r\n\r\n","import {GET_ATTENDANCE_LIST_REQUEST, \r\n   SET_ATTENDANCE_LIST_REQUEST,} from './constants';\r\n\r\n\r\nexport const getAttendanceList =()=>({\r\n  type:GET_ATTENDANCE_LIST_REQUEST\r\n})\r\n\r\nexport const setAttendance = ( attendance ) => ( {\r\n  type: SET_ATTENDANCE_LIST_REQUEST,\r\n  payload: attendance\r\n} );","// @flow\r\nimport {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_FAILED,\r\n    LOGOUT_USER,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAILED,\r\n    FORGET_PASSWORD,\r\n    FORGET_PASSWORD_SUCCESS,\r\n    FORGET_PASSWORD_FAILED,\r\n} from './constants';\r\n\r\n\r\nexport const loginUser = (username, password) => ({\r\n    type: LOGIN_USER,\r\n    payload: { username, password },\r\n});\r\n\r\nexport const loginUserSuccess = (user) => ({\r\n    type: LOGIN_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const loginUserFailed = (error) => ({\r\n    type: LOGIN_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const registerUser = (fullname, email, password) => ({\r\n    type: REGISTER_USER,\r\n    payload: { fullname, email, password },\r\n});\r\n\r\nexport const registerUserSuccess = (user) => ({\r\n    type: REGISTER_USER_SUCCESS,\r\n    payload: user,\r\n});\r\n\r\nexport const registerUserFailed = (error) => ({\r\n    type: REGISTER_USER_FAILED,\r\n    payload: error,\r\n});\r\n\r\nexport const logoutUser = (history) => ({\r\n    type: LOGOUT_USER,\r\n    payload: { history },\r\n});\r\n\r\nexport const forgetPassword = (username) => ({\r\n    type: FORGET_PASSWORD,\r\n    payload: { username },\r\n});\r\n\r\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\r\n    type: FORGET_PASSWORD_SUCCESS,\r\n    payload: passwordResetStatus,\r\n});\r\n\r\nexport const forgetPasswordFailed = (error) => ({\r\n    type: FORGET_PASSWORD_FAILED,\r\n    payload: error,\r\n});\r\n","// @flow\r\nimport jwtDecode from 'jwt-decode';\r\nimport { Cookies } from 'react-cookie';\r\n\r\n/**\r\n * Checks if user is authenticated\r\n */\r\nconst isUserAuthenticated = () => {\r\n    const user = getLoggedInUser();\r\n    if (!user) {\r\n        return false;\r\n    }\r\n    const decoded = jwtDecode(user.token);\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n        console.warn('access token expired');\r\n        return false;\r\n    } else {\r\n        return true;\r\n    }\r\n};\r\n\r\n/**\r\n * Returns the logged in user\r\n */\r\nconst getLoggedInUser = () => {\r\n    const cookies = new Cookies();\r\n    const user = cookies.get('user');\r\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\r\n};\r\n\r\nexport { isUserAuthenticated, getLoggedInUser };\r\n","\r\nimport {GET_USER_LIST_REQUEST, \r\n   SET_USER_LIST_REQUEST, ADD_USER, ADD_USER_REQUEST, GET_ERROR} from './constants';\r\n\r\n\r\nexport const getUserList =()=>({\r\n  type:GET_USER_LIST_REQUEST,\r\n  \r\n})\r\n\r\nexport const getUser = ( users ) => ( {\r\n  type: SET_USER_LIST_REQUEST,\r\n  payload: users\r\n} );\r\n\r\nexport const setUser = ( user ) => ( {\r\n  type: ADD_USER,\r\n  payload: user\r\n} );\r\nexport const setUserRquest = ( user ) => ( {\r\n  type: ADD_USER_REQUEST,\r\n  payload: user\r\n} );\r\nexport const getError = ( error ) => ( {\r\n  type: GET_ERROR,\r\n  payload: error\r\n} );","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\n\r\n/**\r\n * Renders the PageTitle\r\n */\r\nconst PageTitle = (props) => {\r\n    //const title = props.title || \"\";\r\n    const items = props.breadCrumbItems || \"\";\r\n    return (\r\n        <React.Fragment>\r\n            \r\n            <Breadcrumb className=\" mt-2 font-size-14\">\r\n                <BreadcrumbItem>\r\n                    <Link to=\"/\">ATS</Link>\r\n                </BreadcrumbItem>\r\n                {items.map((item, index) => {\r\n                    return item.active ? (\r\n                        <BreadcrumbItem active key={index}>\r\n                            {item.label}\r\n                        </BreadcrumbItem>\r\n                    ) : (\r\n                            <BreadcrumbItem key={index}>\r\n                                <Link to={item.path}>{item.label}</Link>\r\n                            </BreadcrumbItem>\r\n                        );\r\n                })}\r\n            </Breadcrumb>\r\n\r\n            {/* <h4 className=\"mb-1 mt-0\">{title}</h4> */}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PageTitle;","import {GET_REQUIREMENTS_LIST_REQUEST, SET_REQUIREMENTS_LIST_REQUEST,\r\n  SAVE_REQUIREMENTS, SET_SAVE_REQUIREMENTS,\r\n  GET_CRITICAL_REQUIREMENTS_LIST, SET_CRITICAL_REQUIREMENTS_LIST,\r\n  GET_REQUIREMENTS_MODAL, \r\n  HIDE_REQUIREMENTS_MODAL} from './constants';\r\n\r\n\r\nexport const getRequirementList =()=>({\r\n  type:GET_REQUIREMENTS_LIST_REQUEST\r\n})\r\n\r\nexport const setRequirement = ( requirements ) => ( {\r\n  type: SET_REQUIREMENTS_LIST_REQUEST,\r\n  payload: requirements\r\n} );\r\nexport const getCriticalRequirementList =()=>({\r\n  type:GET_CRITICAL_REQUIREMENTS_LIST\r\n})\r\n\r\nexport const setCriticalRequirement = ( criticalreq ) => ( {\r\n  type: SET_CRITICAL_REQUIREMENTS_LIST,\r\n  payload: criticalreq\r\n} );\r\n\r\nexport const saveRequirement =()=>({\r\n  type:SAVE_REQUIREMENTS\r\n})\r\n\r\nexport const setSaveRequirement = ( requirement, jid ) => ( {\r\n  type: SET_SAVE_REQUIREMENTS,\r\n  payload: requirement,\r\n  id:jid\r\n} );\r\nexport const getRequirementModal = () => ( {\r\n  type: GET_REQUIREMENTS_MODAL\r\n} );\r\n\r\nexport const hideRequirementModal = () => ( {\r\n  type: HIDE_REQUIREMENTS_MODAL\r\n} );","// @flow\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\n\r\n\r\nexport const changeLayout = (layout) => ({\r\n    type: CHANGE_LAYOUT,\r\n    payload: layout,\r\n});\r\n\r\nexport const changeLayoutWidth = (width) => ({\r\n    type: CHANGE_LAYOUT_WIDTH,\r\n    payload: width,\r\n});\r\n\r\nexport const changeSidebarTheme = (theme) => ({\r\n    type: CHANGE_SIDEBAR_THEME,\r\n    payload: theme,\r\n});\r\n\r\nexport const changeSidebarType = (sidebarType) => ({\r\n    type: CHANGE_SIDEBAR_TYPE,\r\n    payload: sidebarType,\r\n});\r\n\r\nexport const toggleRightSidebar = () => ({\r\n    type: TOGGLE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const showRightSidebar = () => ({\r\n    type: SHOW_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n\r\nexport const hideRightSidebar = () => ({\r\n    type: HIDE_RIGHT_SIDEBAR,\r\n    payload: null,\r\n});\r\n"],"sourceRoot":""}